<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HelixToolkit.SharpDX.Core</name>
    </assembly>
    <members>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraMode">
            <summary>
            Gets or sets CameraMode.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraRotationMode">
            <summary>
            Gets or sets CameraRotationMode.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.InertiaFactor">
            <summary>
            Gets or sets InertiaFactor.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.InfiniteSpin">
            <summary>
            Gets or sets a value indicating whether InfiniteSpin.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsChangeFieldOfViewEnabled">
            <summary>
            Gets or sets a value indicating whether field of view can be changed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsInertiaEnabled">
            <summary>
            Gets or sets a value indicating whether inertia is enabled for the camera manipulations.
            </summary>
            <value><c>true</c> if inertia is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsMoveEnabled">
            <summary>
            Gets or sets a value indicating whether move is enabled.
            </summary>
            <value> <c>true</c> if move is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether pan is enabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether IsRotationEnabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether IsZoomEnabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.LeftRightPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the left and right keys.
            </summary>
            <value> The pan sensitivity. </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.LeftRightRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the left and right keys.
            </summary>
            <value> The rotation sensitivity. </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.MaximumFieldOfView">
            <summary>
            Gets or sets the maximum field of view.
            </summary>
            <value> The maximum field of view. </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.MinimumFieldOfView">
            <summary>
            Gets or sets the minimum field of view.
            </summary>
            <value> The minimum field of view. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.ModelUpDirection">
            <summary>
            Gets or sets the model up direction.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.MoveSensitivity">
            <summary>
            Gets or sets the move sensitivity.
            </summary>
            <value> The move sensitivity. </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.PageUpDownZoomSensitivity">
            <summary>
            Gets or sets the sensitivity for zoom by the page up and page down keys.
            </summary>
            <value> The zoom sensitivity. </value>
            <remarks>
            Use -1 to invert the zoom direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.RotateAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to rotate around the mouse down point.
            </summary>
            <value> <c>true</c> if rotation around the mouse down point is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.RotationSensitivity">
            <summary>
            Gets or sets the rotation sensitivity (degrees/pixel).
            </summary>
            <value> The rotation sensitivity. </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.ShowCameraTarget">
            <summary>
            Gets or sets a value indicating whether to show a target adorner when manipulating the camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.SpinReleaseTime">
            <summary>
            Gets or sets the max duration of mouse drag to activate spin.
            </summary>
            <remarks>
            If the time between mouse down and mouse up is less than this value, spin is activated.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.UpDownPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the up and down keys.
            </summary>
            <value> The pan sensitivity. </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.UpDownRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the up and down keys.
            </summary>
            <value> The rotation sensitivity. </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to zoom around mouse down point.
            </summary>
            <value> <c>true</c> if zooming around the mouse down point is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomDistanceLimitFar">
            <summary>
            Gets or sets the zoom distance limit far.
            </summary>
            <value>
            The zoom distance limit far.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomDistanceLimitNear">
            <summary>
            Gets or sets the zoom distance limit near.
            </summary>
            <value>
            The zoom distance limit near.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomSensitivity">
            <summary>
            Gets or sets ZoomSensitivity.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.panHandler">
            <summary>
            The pan event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.rotateHandler">
            <summary>
            The rotation event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.zoomHandler">
            <summary>
            The zoom event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.isSpinning">
            <summary>
            The is spinning flag.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.lastTick">
            <summary>
            The last tick.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.moveSpeed">
            <summary>
            The move speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.panSpeed">
            <summary>
            The pan speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.rotationPoint3D">
            <summary>
            The 3D rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.rotationPosition">
            <summary>
            The rotation position.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.rotationSpeed">
            <summary>
            The rotation speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.spinningPoint3D">
            <summary>
            The 3D point to spin around.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.spinningPosition">
            <summary>
            The spinning position.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.spinningSpeed">
            <summary>
            The spinning speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.zoomPoint3D">
            <summary>
            The point to zoom around.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.CameraController.zoomSpeed">
            <summary>
            The zoom speed.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.IsPanning">
            <summary>
            Gets or sets a value indicating whether this instance is panning.
            </summary>
            <value>
              <c>true</c> if this instance is panning; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.IsRotating">
            <summary>
            Gets or sets a value indicating whether this instance is rotating.
            </summary>
            <value>
              <c>true</c> if this instance is rotating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.IsMouseCaptured">
            <summary>
            Gets a value indicating whether this instance is mouse captured.
            </summary>
            <value>
              <c>true</c> if this instance is mouse captured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.ActualCamera">
            <summary>
            Gets ActualCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraLookDirection">
            <summary>
            Gets or sets CameraLookDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraPosition">
            <summary>
            Gets or sets CameraPosition.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraTarget">
            <summary>
            Gets or sets CameraTarget.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.CameraUpDirection">
            <summary>
            Gets or sets CameraUpDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.FixedRotationPoint">
            <summary>
            Gets or sets the fixed rotation point.
            </summary>
            <value>
            The fixed rotation point.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.FixedRotationPointEnabled">
            <summary>
            Gets or sets a value indicating whether [fixed rotation point enabled].
            </summary>
            <value>
              <c>true</c> if [fixed rotation point enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.IsOrthographicCamera">
            <summary>
            Gets a value indicating whether IsOrthographicCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.IsPerspectiveCamera">
            <summary>
            Gets a value indicating whether IsPerspectiveCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.OrthographicCamera">
            <summary>
            Gets OrthographicCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.PerspectiveCamera">
            <summary>
            Gets PerspectiveCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.AllowRotateXY">
            <summary>
            Gets or sets to allow rotate x direction and y direction globally. X, Y is screen space.
            <para>X = 1: Allow left/right rotation. Y = 1: Allow up/down rotation</para>
            <para>Default is (1, 1)</para>
            </summary>
            <value>
            The allow rotate xy.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.CameraController.Viewport">
            <summary>
            Gets or sets Viewport.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddMoveForce(System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
            <param name="dz">
            The delta z.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddMoveForce(SharpDX.Vector3)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddPanForce(System.Single,System.Single)">
            <summary>
            Adds the specified pan force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddPanForce(SharpDX.Vector3)">
            <summary>
            The add pan force.
            </summary>
            <param name="pan">
            The pan.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddRotateForce(System.Single,System.Single)">
            <summary>
            The add rotate force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddZoomForce(System.Single)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.AddZoomForce(System.Single,SharpDX.Vector3)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomOrigin">
            The zoom origin.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ChangeDirection(SharpDX.Vector3,SharpDX.Vector3,System.Single)">
            <summary>
            Changes the direction.
            </summary>
            <param name="lookDir">The look dir.</param>
            <param name="upDir">Up dir.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ChangeDirection(SharpDX.Vector3,System.Single)">
            <summary>
            Changes the direction of the camera.
            </summary>
            <param name="lookDir">
            The look direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.LookAt(SharpDX.Vector3,System.Single)">
            <summary>
            Change the "look-at" point.
            </summary>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.MouseWheel(System.Single,SharpDX.Vector2)">
            <summary>
            Pass mouse wheel scrolling for zooming.
            </summary>
            <param name="delta">The delta.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.RefreshViewport">
            <summary>
            The refresh viewport.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ResetCamera">
            <summary>
            Resets the camera.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ResetCameraUpDirection">
            <summary>
            Resets the camera up direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StartSpin(SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector3)">
            <summary>
            Starts the spin.
            </summary>
            <param name="speed">
            The speed.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="aroundPoint">
            The spin around point.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StopAnimations">
            <summary>
            The stop animations.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StopPanning">
            <summary>
            Stops the panning.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StopSpin">
            <summary>
            Stops the spin.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StopZooming">
            <summary>
            Stops the zooming inertia.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ViewBack">
            <summary>
            Views the back.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ViewRight">
            <summary>
            Views the right.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ViewTop">
            <summary>
            Views the top.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.Zoom(System.Single)">
            <summary>
            Zooms by the specified delta value.
            </summary>
            <param name="delta">
            The delta value.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomExtents(System.Single)">
            <summary>
            Zooms to the extents of the model.
            </summary>
            <param name="animationTime">
            The animation time (milliseconds).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ZoomExtentsHandler">
            <summary>
            Zooms the extents handler.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clamps the specified value between the limits.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="min">
            The min.
            </param>
            <param name="max">
            The max.
            </param>
            <returns>
            The clamp.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.FindPanVector(System.Single,System.Single)">
            <summary>
            Finds the pan vector.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
            <returns>
            The <see cref="T:SharpDX.Vector3"/> .
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.OnTimeStep">
            <summary>
            The on time step.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ViewBottom">
            <summary>
            Views the bottom.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.ViewLeft">
            <summary>
            Views the left.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StartRotate(SharpDX.Vector2)">
            <summary>
            Starts the rotation.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.EndRotate(SharpDX.Vector2)">
            <summary>
            Ends the rotation.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.StartPan(SharpDX.Vector2)">
            <summary>
            Starts the panning.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.EndPan(SharpDX.Vector2)">
            <summary>
            Ends the panning.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.CameraController.MouseMove(SharpDX.Vector2)">
            <summary>
            Mouses move position.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.#ctor(HelixToolkit.SharpDX.Core.Controls.CameraController)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler"/> class.
            </summary>
            <param name="cameraController">
            The viewport.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Origin">
            <summary>
            Gets the origin.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Camera">
            <summary>
            Gets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.CameraMode">
            <summary>
            Gets the camera mode.
            </summary>
            <value>The camera mode.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.LastPoint">
            <summary>
            Gets or sets the last point (in 2D screen coordinates).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.LastPoint3D">
            <summary>
            Gets or sets the last point (in 3D world coordinates).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.inv">
            <summary>
            Use to invert the left handed system
            </summary>
            <value>
            The inv.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.ModelUpDirection">
            <summary>
            Gets the model up direction.
            </summary>
            <value>The model up direction.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.MouseDownNearestPoint3D">
            <summary>
            Gets or sets the mouse down Vector2 at the nearest hit element (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.MouseDownNearestModelBoundCenter">
            <summary>
            Gets or sets the mouse down nearest hit model bounding box center.
            </summary>
            <value>
            The mouse down nearest model bound center.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.MouseDownPoint">
            <summary>
            Gets or sets the mouse down Vector2 (2D screen coordinates).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.MouseDownPoint3D">
            <summary>
            Gets or sets the mouse down Vector2 (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.RotationSensitivity">
            <summary>
            Gets the rotation sensitivity.
            </summary>
            <value>The rotation sensitivity.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Controller">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.ZoomSensitivity">
            <summary>
            Gets the zoom sensitivity.
            </summary>
            <value>The zoom sensitivity.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Delta(SharpDX.Vector2)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">
            The <see cref="T:SharpDX.Vector2"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Started(SharpDX.Vector2)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">
            The <see cref="T:SharpDX.Vector2"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.UnProject(SharpDX.Vector2,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Un-projects a Vector2 from the screen (2D) to a Vector2 on plane (3D)
            </summary>
            <param name="p">
            The 2D Vector2.
            </param>
            <param name="position">
            plane position
            </param>
            <param name="normal">
            plane normal
            </param>
            <returns>
            A 3D Vector2.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.UnProject(SharpDX.Vector2)">
            <summary>
            Un-projects a Vector2 from the screen (2D) to a Vector2 on the plane trough the camera target Vector2.
            </summary>
            <param name="p">
            The 2D Vector2.
            </param>
            <returns>
            A 3D Vector2.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.GetRay(SharpDX.Vector2)">
            <summary>
            Get the ray into the view volume given by the position in 2D (screen coordinates)
            </summary>
            <param name="position">
            A 2D Vector2.
            </param>
            <returns>
            A ray
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Start(SharpDX.Vector2)">
            <summary>
            Mouses down.
            </summary>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.MouseMove(SharpDX.Vector2)">
            <summary>
            Mouses the move.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.End(SharpDX.Vector2)">
            <summary>
            Mouses up.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.Project(SharpDX.Vector3)">
            <summary>
            Calculate the screen position of a 3D Vector2.
            </summary>
            <param name="p">
            The 3D Vector2.
            </param>
            <returns>
            The 2D Vector2.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.MouseGestureHandler.SetMouseDownPoint(SharpDX.Vector2)">
            <summary>
            Sets mouse down Vector2.
            </summary>
            <param name="position">
            The position.
            </param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.PanHandler.panPoint3D">
            <summary>
            The 3D pan origin.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.Delta(SharpDX.Vector2)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.Pan(SharpDX.Vector3,System.Boolean)">
            <summary>
            Pans the camera by the specified 3D vector (world coordinates).
            </summary>
            <param name="delta">
            The panning vector.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.Pan(SharpDX.Vector2,System.Boolean)">
            <summary>
            Pans the camera by the specified 2D vector (screen coordinates).
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.Started(SharpDX.Vector2)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.CanStart">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.PanHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.RotateHandler.changeLookAt">
            <summary>
            The change look at.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.RotateHandler.rotationAxisX">
            <summary>
            The x rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.RotateHandler.rotationAxisY">
            <summary>
            The y rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.RotateHandler.rotationPoint">
            <summary>
            The rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.RotateHandler.rotationPoint3D">
            <summary>
            The 3D rotation point.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.RotateHandler.CameraRotationMode">
            <summary>
            Gets the camera rotation mode.
            </summary>
            <value>
            The camera rotation mode.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.RotateHandler.Delta(SharpDX.Vector2)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2" /> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.RotateHandler.LookAt(SharpDX.Vector3,System.Single)">
            <summary>
            Change the "look-at" point.
            </summary>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.RotateHandler.Rotate(SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector3,System.Boolean)">
            <summary>
            Rotate the camera around the specified point.
            </summary>
            <param name="p0">
            The p 0.
            </param>
            <param name="p1">
            The p 1.
            </param>
            <param name="rotateAround">
            The rotate around.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.RotateHandler.Started(SharpDX.Vector2)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2" /> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.RotateHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Controls.ViewportCore"/> class.
            </summary>
            <param name="nativeWindowPointer">The native window pointer.</param>
            <param name="deferred">if set to <c>true</c> [deferred].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Render">
            <summary>
            Renders this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.StartD3D(System.Int32,System.Int32)">
            <summary>
            Starts the d3 d.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EndD3D">
            <summary>
            Ends the d3 d.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.MouseDown(SharpDX.Vector2)">
            <summary>
            Mouses down.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.MouseMove(SharpDX.Vector2)">
            <summary>
            Mouses the move.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.MouseUp(SharpDX.Vector2)">
            <summary>
            Mouses up.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Update(System.TimeSpan)">
            <summary>
            </summary>
            <param name="timeStamp"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes the specified width.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.IsShadowMappingEnabled">
            <summary>
            Gets a value indicating whether this instance is shadow mapping enabled.
            </summary>
            <value>
            <c>true</c> if this instance is shadow mapping enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.CameraCore">
            <summary>
            Gets the camera core.
            </summary>
            <value>
            The camera core.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Renderables">
            <summary>
            Gets the renderables.
            </summary>
            <value>
            The renderables.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.D2DRenderables">
            <summary>
            Gets the d2 d renderables.
            </summary>
            <value>
            The d2 d renderables.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.Items2D">
            <summary>
            Gets the items2 d.
            </summary>
            <value>
            The items2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ShowFPS">
            <summary>
            Gets or sets a value indicating whether [show FPS].
            </summary>
            <value>
              <c>true</c> if [show FPS]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ShowRenderDetail">
            <summary>
            Gets or sets a value indicating whether [show render detail].
            </summary>
            <value>
              <c>true</c> if [show render detail]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.RenderD2D">
            <summary>
            Gets or sets a value indicating whether [render d2d].
            </summary>
            <value>
              <c>true</c> if [render d2d]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>
            The color of the background.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.FXAALevel">
            <summary>
            Gets or sets the FXAA level.
            </summary>
            <value>
            The FXAA level.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EnableRenderFrustum">
            <summary>
            Gets or sets a value indicating whether [enable render frustum].
            </summary>
            <value>
              <c>true</c> if [enable render frustum]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ViewportRectangle">
            <summary>
            Gets the viewport rectangle.
            </summary>
            <value>
            The viewport rectangle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.RenderContext">
            <summary>
            Gets the render context.
            </summary>
            <value>
            The render context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.RenderStat">
            <summary>
            Gets the render stat.
            </summary>
            <value>
            The render stat.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EnableVSync">
            <summary>
            Gets or sets a value indicating whether [enable vertical synchronize].
            </summary>
            <value>
              <c>true</c> if [enable vertical synchronize]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EnableSSAO">
            <summary>
            Gets or sets a value indicating whether [enable ssao].
            </summary>
            <value>
              <c>true</c> if [enable ssao]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.EnableRenderOrder">
            <summary>
            Gets or sets a value indicating whether [enable render order].
            </summary>
            <value>
              <c>true</c> if [enable render order]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ModelUpDirection">
            <summary>
            Gets or sets the model up direction.
            </summary>
            <value>
            The model up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ShowCoordinateSystem">
            <summary>
            Gets or sets a value indicating whether [show coordinate system].
            </summary>
            <value>
              <c>true</c> if [show coordinate system]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.CoordinateSystemLabelColor">
            <summary>
            Gets or sets the color of the coordinate system label.
            </summary>
            <value>
            The color of the coordinate system label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.CoordinateSystemAxisXLabel">
            <summary>
            Gets or sets the coordinate system axis x label.
            </summary>
            <value>
            The coordinate system axis x label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.CoordinateSystemAxisYLabel">
            <summary>
            Gets or sets the coordinate system axis y label.
            </summary>
            <value>
            The coordinate system axis y label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.CoordinateSystemAxisZLabel">
            <summary>
            Gets or sets the coordinate system axis z label.
            </summary>
            <value>
            The coordinate system axis z label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ShowViewCube">
            <summary>
            Gets or sets a value indicating whether [show view cube].
            </summary>
            <value>
              <c>true</c> if [show view cube]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Controls.ViewportCore.StartRendering">
            <summary>
            Occurs when [on start rendering].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Controls.ViewportCore.StopRendering">
            <summary>
            Occurs when [on stop rendering].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Controls.ViewportCore.ErrorOccurred">
            <summary>
            Occurs when [on error occurred].
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.changeFieldOfView">
            <summary>
            The change field of view.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.zoomPoint">
            <summary>
            The zoom point.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.zoomPoint3D">
            <summary>
            The 3D zoom point.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.#ctor(HelixToolkit.SharpDX.Core.Controls.CameraController,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Controls.ZoomHandler"/> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="changeFieldOfView">
            if set to <c>true</c> [change field of view].
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.Delta(SharpDX.Vector2)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.Started(SharpDX.Vector2)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:SharpDX.Vector2"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.Zoom(System.Single)">
            <summary>
            Zooms the view.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.Zoom(System.Single,SharpDX.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Zooms the view around the specified point.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
            <param name="isTouch"></param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.MoveCameraPosition(SharpDX.Vector3,System.Boolean)">
            <summary>
            Changes the camera position by the specified vector.
            </summary>
            <param name="delta">The translation vector in camera space (z in look direction, y in up direction, and x perpendicular to the two others)</param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.ZoomByChangingCameraWidth(System.Single,SharpDX.Vector3,System.Boolean)">
            <summary>
            The change camera width.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
            <param name="isTouch"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.CanStart">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Controls.ZoomHandler.ChangeCameraDistance(System.Single@,SharpDX.Vector3)">
            <summary>
            Changes the camera distance.
            </summary>
            <param name="delta">The delta.</param>
            <param name="zoomAround">The zoom around point.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.LookAt(HelixToolkit.SharpDX.Core.Cameras.CameraCore,SharpDX.Vector3,System.Single)">
            <summary>
            Set the camera target point without changing the look direction.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.LookAt(HelixToolkit.SharpDX.Core.Cameras.CameraCore,SharpDX.Vector3,SharpDX.Vector3,System.Single)">
            <summary>
            Set the camera target point and look direction
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="newLookDirection">
            The new look direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.LookAt(HelixToolkit.SharpDX.Core.Cameras.CameraCore,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Single)">
            <summary>
            Looks at.
            </summary>
            <param name="camera">The camera.</param>
            <param name="target">The target.</param>
            <param name="newLookDirection">The new look direction.</param>
            <param name="newUpDirection">The new up direction.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.ChangeDirection(HelixToolkit.SharpDX.Core.Cameras.CameraCore,SharpDX.Vector3,SharpDX.Vector3,System.Single)">
            <summary>
            Changes the direction of a camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="newLookDir">
            The new look direction.
            </param>
            <param name="newUpDirection">
            The new up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.AnimateWidth(HelixToolkit.SharpDX.Core.Cameras.OrthographicCameraCore,System.Single,System.Single)">
            <summary>
            Animates the orthographic width.
            </summary>
            <param name="camera">
            An orthographic camera.
            </param>
            <param name="newWidth">
            The width to animate to.
            </param>
            <param name="animationTime">
            Animation time in milliseconds
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.ZoomToRectangle(HelixToolkit.SharpDX.Core.Cameras.CameraCore,HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.RectangleF)">
            <summary>
            Zooms the camera to the specified rectangle.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="zoomRectangle">
            The zoom rectangle.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.Reset(HelixToolkit.SharpDX.Core.Cameras.CameraCore)">
            <summary>
            Resets the specified camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.Reset(HelixToolkit.SharpDX.Core.Cameras.PerspectiveCameraCore)">
            <summary>
            Resets the specified perspective camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.Reset(HelixToolkit.SharpDX.Core.Cameras.OrthographicCameraCore)">
            <summary>
            Resets the specified orthographic camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.ZoomExtents(HelixToolkit.SharpDX.Core.Cameras.CameraCore,HelixToolkit.SharpDX.Core.Controls.ViewportCore,System.Single)">
            <summary>
            Zooms to fit the extents of the specified viewport.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.ZoomExtents(HelixToolkit.SharpDX.Core.Cameras.CameraCore,HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.BoundingBox,System.Single)">
            <summary>
            Zooms to fit the specified bounding rectangle.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="bounds">
            The bounding rectangle.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CameraExtension.ZoomExtents(HelixToolkit.SharpDX.Core.Cameras.CameraCore,HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.Vector3,System.Single,System.Single)">
            <summary>
            Zooms to fit the specified sphere.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ViewportExtensions.ZoomByChangingFieldOfView(HelixToolkit.SharpDX.Core.Controls.CameraController,System.Single)">
            <summary>
            Changes the field of view and tries to keep the scale fixed.
            </summary>
            <param name="controller">The controller.</param>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ViewportExtensions.ZoomToRectangle(HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.RectangleF)">
            <summary>
            Zooms the viewport to the specified rectangle.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Core.Controls.ViewportCore,System.Single)">
            <summary>
            Zooms to the extents of the specified viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.BoundingBox,System.Single)">
            <summary>
            Zooms to the extents of the specified bounding box.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="bounds">The bounding rectangle.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ViewportExtensions.ZoomExtents(HelixToolkit.SharpDX.Core.Controls.ViewportCore,SharpDX.Vector3,System.Single,System.Single)">
            <summary>
            Zooms to the extents of the specified bounding sphere.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="center">The center of the sphere.</param>
            <param name="radius">The radius of the sphere.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.InvalidateRender">
            <summary>
            Occurs when [on invalidate renderer].
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.IsRendering">
            <summary>
            Gets or sets a value indicating whether this instance is rendering.
            </summary>
            <value>
              <c>true</c> if this instance is rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.LayoutBound">
            <summary>
            Absolute layout rectangle cooridnate for renderable
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.LayoutClippingBound">
            <summary>
            Gets or sets the layout clipping bound, includes border.
            </summary>
            <value>
            The layout clipping bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.Transform">
            <summary>
            Gets or sets the transform. <see cref="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.Transform"/>
            </summary>
            <value>
            The transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.LocalTransform">
            <summary>
            Gets or sets the local transform. This only transform local position. Same as RenderTransform
            </summary>
            <value>
            The local transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether this instance is mouse over.
            </summary>
            <value>
              <c>true</c> if this instance is mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.IsAttached">
            <summary>
            Gets or sets a value indicating whether this instance is attached.
            </summary>
            <value>
              <c>true</c> if this instance is attached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The target.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.OnLayoutBoundChanged(SharpDX.RectangleF)">
            <summary>
            
            </summary>
            <param name="layoutBound"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.Render(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.InvalidateRenderer">
            <summary>
            Invalidates the renderer.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2D.SetAffectsRender``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.RenderCore2DBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.RenderCore2DBase.ShowDrawingBorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2DBase.Render(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2DBase.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.RenderCore2DBase.CanRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Determines whether this instance can render the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance can render the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.ShapeRenderCore2DBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ShapeRenderCore2DBase.FillBrush">
            <summary>
            Gets or sets the fill brush.
            </summary>
            <value>
            The fill brush.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ShapeRenderCore2DBase.StrokeBrush">
            <summary>
            Gets or sets the stroke brush.
            </summary>
            <value>
            The stroke brush.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ShapeRenderCore2DBase.StrokeWidth">
            <summary>
            Gets or sets the width of the stroke.
            </summary>
            <value>
            The width of the stroke.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ShapeRenderCore2DBase.StrokeStyle">
            <summary>
            Gets or sets the stroke style.
            </summary>
            <value>
            The stroke style.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.StrokeBrush">
            <summary>
            Gets or sets the stroke brush.
            </summary>
            <value>
            The stroke brush.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.BorderThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.StrokeStyle">
            <summary>
            Gets or sets the stroke style.
            </summary>
            <value>
            The stroke style.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.BorderRenderCore2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.EllipseRenderCore2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.EllipseRenderCore2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.EmptyRenderCore2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.EmptyRenderCore2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="matrices">The matrices.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore.Foreground">
            <summary>
            Gets or sets the foreground.
            </summary>
            <value>
            The foreground.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore.CanRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Determines whether this instance can render the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance can render the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.FrameStatisticsRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ImageRenderCore2D.Bitmap">
            <summary>
            Gets or sets the bitmap.
            </summary>
            <value>
            The bitmap.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ImageRenderCore2D.ImageSize">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ImageRenderCore2D.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.ImageRenderCore2D.InterpolationMode">
            <summary>
            Gets or sets the interpolation mode.
            </summary>
            <value>
            The interpolation mode.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.ArcSegment">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.BezierSegment">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core2D.BezierSegment.P1">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core2D.BezierSegment.P2">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core2D.BezierSegment.P3">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.BezierSegment.#ctor(SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core2D.BezierSegment"/> class.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="p3">The p3.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.BezierSegment.Create(SharpDX.Direct2D1.GeometrySink)">
            <summary>
            Creates the specified sink.
            </summary>
            <param name="sink">The sink.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.Figure">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.Figure.Closed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Core2D.Figure"/> is closed.
            </summary>
            <value>
              <c>true</c> if closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.Figure.Filled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Core2D.Figure"/> is filled.
            </summary>
            <value>
              <c>true</c> if filled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.Figure.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.Figure.#ctor(SharpDX.Vector2,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core2D.Figure"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="filled">if set to <c>true</c> [filled].</param>
            <param name="closed">if set to <c>true</c> [closed].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.Figure.AddSegment(HelixToolkit.SharpDX.Core.Core2D.ISegment,System.Boolean,System.Boolean)">
            <summary>
            Adds the segment.
            </summary>
            <param name="segment">The segment.</param>
            <param name="isStroked">if set to <c>true</c> [is stroked].</param>
            <param name="isSmoothJoined">if set to <c>true</c> [is smooth joined].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.Figure.Create(SharpDX.Direct2D1.GeometrySink)">
            <summary>
            Creates the specified sink.
            </summary>
            <param name="sink">The sink.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.Figure.SegmentData">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.LineSegment">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.ISegment">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.Segment">
            <summary>
            <see href="https://jeremiahmorrill.wordpress.com/2013/02/06/direct2d-gui-librarygraphucks/"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.isGeometryChanged">
            <summary>
            The is geometry changed
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.geometry">
            <summary>
            The geometry
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.Figures">
            <summary>
            Gets or sets the figures.
            </summary>
            <value>
            The figures.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>
            The fill mode.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.PathRenderCore2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy.D2DTarget">
            <summary>
            Gets the d2d target. Which is bind to the 3D back buffer/texture
            </summary>
            <value>
            The d2d target.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy.Initialize(SharpDX.DXGI.SwapChain1,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            
            </summary>
            <param name="swapChain"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy.Initialize(SharpDX.Direct3D11.Texture2D,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            
            </summary>
            <param name="texture"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy.op_Implicit(HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy)~SharpDX.Direct2D1.Bitmap1">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Core2D.D2DTargetProxy"/> to <see cref="T:SharpDX.Direct2D1.Bitmap1"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.RasterState">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.InstanceBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.GeometryBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.RasterDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.#ctor(HelixToolkit.SharpDX.Core.RenderType)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore"/> class.
            </summary>
            <param name="renderType">Type of the render.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.CreateRasterState(SharpDX.Direct3D11.RasterizerStateDescription,System.Boolean)">
            <summary>
            
            </summary>
            <param name="description"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            
            </summary>
            <param name="technique"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnGeometryBufferChanged(HelixToolkit.SharpDX.Core.IAttachableBufferModel)">
            <summary>
            Called when [geometry buffer changed].
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnBindRasterState(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Set all necessary states and buffers
            </summary>
            <param name="context"></param>
            <param name="isInvertCullMode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnAttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@)">
            <summary>
            Attach vertex buffer routine
            </summary>
            <param name="context"></param>
            <param name="vertStartSlot"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnUpdateCanRenderFlag">
            <summary>
            Called when [update can render flag].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Trigger OnRender function delegate if CanRender()==true
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnRenderCustom(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Render function for custom shader pass. Used to do special effects
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnRenderShadow(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render shadow].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryRenderCore.OnRenderDepth(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Called when [render depth].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="customPass">Custom depth pass</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.RenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Core.RenderCore.InvalidateRender">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.GUID">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IGUID.GUID"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.RenderType">
            <summary>
            Gets or sets the type of the render.
            </summary>
            <value>
            The type of the render.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.RenderCore.CanRenderFlag">
            <summary>
            Gets or sets a value indicating whether this instance can be rendered. Update this flag using <see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.UpdateCanRenderFlag"/>
            </summary>
            <value>
              <c>true</c> if this instance can render; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.NeedUpdate">
            <summary>
            Indicate whether render host should call <see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Update(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)"/> before <see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)"/>
            <para><see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Update(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)"/> is used to run such as compute shader before rendering. </para>
            <para>Compute shader can be run at the beginning of any other <see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)"/> routine to avoid waiting.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.IsThrowingShadow">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Core.IThrowingShadow.IsThrowingShadow"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.DefaultStateBinding">
            <summary>
            Gets or sets the default state binding.
            </summary>
            <value>
            The default state binding.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.ShadowStateBinding">
            <summary>
            Gets or sets the default state binding.
            </summary>
            <value>
            The default state binding.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.RenderCore.ModelMatrix">
            <summary>
            Model matrix
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.EffectTechnique">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.RenderCore.IsAttached">
            <summary>
            Is render core has been attached
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.#ctor(HelixToolkit.SharpDX.Core.RenderType)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.RenderCore"/> class.
            </summary>
            <param name="renderType">Type of the render.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Attach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Call to attach the render core.
            </summary>
            <param name="technique"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            During attatching render core. Create all local resources. Use Collect(resource) to let object be released automatically during Detach().
            </summary>
            <param name="technique"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Detach">
            <summary>
            Detach render core. Release all resources
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.OnDetach">
            <summary>
            On detaching, default is to release all resources
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Render routine
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.RenderShadow(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the shadow pass. Used to generate shadow map.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.RenderCustom(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the custom pass. Must apply render pass externally. Usually used during PostEffect rendering.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.RenderDepth(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Renders the depth pass.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="customPass"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Update(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Update routine. Only used to run update computation such as compute shader in particle system. 
            <para>Compute shader can be run at the beginning of any other <see cref="M:HelixToolkit.SharpDX.Core.Core.RenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)"/> routine to avoid waiting.</para>
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.OnUpdate(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Only used for running compute shader such as in particle system.
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.UpdateCanRenderFlag">
            <summary>
            Updates the can render flag.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.OnUpdateCanRenderFlag">
            <summary>
            Called when [update can render flag].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.ResetInvalidateHandler">
            <summary>
            Resets the invalidate handler.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.RaiseInvalidateRender">
            <summary>
            Invalidates the renderer.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.SetAffectsRender``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.RenderCore.SetAffectsCanRenderFlag``1(``0@,``0)">
            <summary>
            Sets the affects can render flag. This will also invalidate renderer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField">The backing field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.StaticGeometryBatchingBufferBase`2.VertexBuffer">
            <summary>
            Gets or sets the vertex buffer.
            </summary>
            <value>
            The vertex buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.StaticGeometryBatchingBufferBase`2.IndexBuffer">
            <summary>
            Gets or sets the index buffer.
            </summary>
            <value>
            The index buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.StaticGeometryBatchingBufferBase`2.Topology">
            <summary>
            Gets or sets the topology.
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.StaticGeometryBatchingBufferBase`2.AttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer start slot.</param>
            <param name="deviceResources">The device resources.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1">
            <summary>
            
            </summary>
            <typeparam name="VertexStruct">The type of the ertex structure.</typeparam>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.textureView">
            <summary>
            Use the shared texture resource proxy
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.TextureView">
            <summary>
            Gets the texture view.
            </summary>
            <value>
            The texture view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1"/> class.
            </summary>
            <param name="structSize">Size of the structure.</param>
            <param name="dynamic"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.OnCreateIndexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create index buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BillboardBufferModel`1.OnCreateVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Int32,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create vertex buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
            <param name="bufferIndex"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DefaultBillboardBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultBillboardBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultBillboardBufferModel"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DynamicBillboardBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicBillboardBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicBillboardBufferModel"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.BoneSkinnedMeshBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.#ctor(HelixToolkit.SharpDX.Core.IBoneSkinMeshBufferModel,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel"/> class.
            </summary>
            <param name="meshBuffer">The mesh buffer.</param>
            <param name="structSize">Size of the structure.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.BindSkinnedVertexBufferToOutput(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Binds the skinned vertex buffer to output.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.UnBindSkinnedVertexBufferToOutput(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Uns the bind skinned vertex buffer to gs stream output.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.AttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer start slot.</param>
            <param name="deviceResources">The device resources.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.UpdateBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Updates the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceResources">The device resources.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.BoneSkinPreComputeBufferModel.CopySkinnedToArray(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,SharpDX.Vector3[])">
            <summary>
            Copies the skinned to array.
            </summary>
            <param name="context">The context.</param>
            <param name="array">The array.</param>
            <returns>Number of vertex has been copied.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.IndexBuffer">
            <summary>
            Gets the index buffer.
            </summary>
            <value>
            The index buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.Topology">
            <summary>
            Gets or sets the topology.
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.VertexBuffer">
            <summary>
            Gets the vertex buffer.
            </summary>
            <value>
            The vertex buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.VertexStructSize">
            <summary>
            Gets the size of the vertex structure.
            </summary>
            <value>
            The size of the vertex structure.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.Attach">
            <summary>
            Attaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.AttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer start slot. Returns next available bind slot</param>
            <param name="deviceResources"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.AttachRenderHost(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Attaches the render host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.DetachRenderHost(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Detaches the render host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyGeometryBufferModel.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel">
            <summary>
            General Geometry Buffer Model.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.VertexChanged">
            <summary>
            change flags
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.IndexChanged">
            <summary>
            Gets or sets a value indicating whether [index changed].
            </summary>
            <value>
              <c>true</c> if [index changed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.VertexBuffer">
            <summary>
            Gets or sets the vertex buffer.
            </summary>
            <value>
            The vertex buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.VertexStructSize">
            <summary>
            Gets the size of the vertex structure.
            </summary>
            <value>
            The size of the vertex structure.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.IndexBuffer">
            <summary>
            Gets or sets the index buffer.
            </summary>
            <value>
            The index buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.Topology">
            <summary>
            Gets or sets the topology.
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.#ctor(SharpDX.Direct3D.PrimitiveTopology,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel"/> class.
            </summary>
            <param name="topology">The topology.</param>
            <param name="vertexBuffer">The vertex buffer.</param>
            <param name="indexBuffer">The index buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.#ctor(SharpDX.Direct3D.PrimitiveTopology,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel"/> class.
            </summary>
            <param name="topology">The topology.</param>
            <param name="vertexBuffer">The vertex buffer.</param>
            <param name="indexBuffer">The index buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.InvalidateRenderer">
            <summary>
            Invalidates the renderer.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.IsVertexBufferChanged(System.String,System.Int32)">
            <summary>
            Determines whether [is vertex buffer changed] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="vertexBufferIndex"></param>
            <returns>
              <c>true</c> if [is vertex buffer changed] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.IsIndexBufferChanged(System.String)">
            <summary>
            Determines whether [is index buffer changed] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if [is index buffer changed] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.AttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer slot.</param>
            <param name="deviceResources">The device resources.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.UpdateBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Updates the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceResources">The device resources.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.OnCreateVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Int32,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create vertex buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
            <param name="bufferIndex"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.OnCreateIndexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create index buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.OnAttachBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@)">
            <summary>
            Called when [attach buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer start slot. It will be changed to the next available slot after binding</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferModel.OnDispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposeManagedResources"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ElementsBufferModel`1">
            <summary>
            Used for managing instance buffer update
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ElementsBufferModel`1.DisposeAndClear">
            <summary>
            Disposes the internal resources. Object is reusable.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1">
            <summary>
            Line Geometry Buffer Model. Used for line rendering
            </summary>
            <typeparam name="VertexStruct"></typeparam>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1"/> class.
            </summary>
            <param name="structSize">Size of the structure.</param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
            <param name="indexBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.LineGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
            <param name="indexBuffer"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel"/> class.
            </summary>
            <param name="isDynamic"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel.OnCreateVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Int32,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create vertex buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
            <param name="bufferIndex"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel.OnCreateIndexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create index buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultLineGeometryBufferModel.OnBuildVertexArray(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [build vertex array].
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DynamicLineGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicLineGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicLineGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1">
            <summary>
            Mesh Geometry Buffer Model.
            </summary>
            <typeparam name="VertexStruct"></typeparam>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1"/> class.
            </summary>
            <param name="structSize">Size of the structure.</param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.#ctor(System.Int32,SharpDX.Direct3D.PrimitiveTopology,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1"/> class.
            </summary>
            <param name="structSize">Size of the structure.</param>
            <param name="topology">The topology.</param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.#ctor(SharpDX.Direct3D.PrimitiveTopology,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1"/> class.
            </summary>
            <param name="topology">The topology.</param>
            <param name="vertexBuffers"></param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.#ctor(SharpDX.Direct3D.PrimitiveTopology,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1"/> class.
            </summary>
            <param name="topology">The topology.</param>
            <param name="vertexBuffer">The vertex buffer.</param>
            <param name="indexBuffer">The index buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.#ctor(SharpDX.Direct3D.PrimitiveTopology,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1"/> class.
            </summary>
            <param name="topology">The topology.</param>
            <param name="vertexBuffer">The vertex buffer.</param>
            <param name="indexBuffer">The index buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshGeometryBufferModel`1.OnCreateIndexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create index buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel"/> class.
            </summary>
            <param name="buffers">The buffers.</param>
            <param name="isDynamic"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel.IsVertexBufferChanged(System.String,System.Int32)">
            <summary>
            Determines whether [is vertex buffer changed] [the specified property name].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="bufferIndex"></param>
            <returns>
              <c>true</c> if [is vertex buffer changed] [the specified property name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel.OnCreateVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Int32,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create vertex buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="bufferIndex">Index of the buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultMeshGeometryBufferModel.BuildVertexArray(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Builds the vertex array.
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DynamicMeshGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicMeshGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicMeshGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1">
            <summary>
            Point Geometry Buffer Model. Use for point rendering
            </summary>
            <typeparam name="VertexStruct"></typeparam>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1"/> class.
            </summary>
            <param name="structSize">Size of the structure.</param>
            <param name="dynamic">Create dynamic buffer or immutable buffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1.#ctor(HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy[])">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1"/> class.
            </summary>
            <param name="vertexBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointGeometryBufferModel`1.OnCreateIndexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create index buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel"/> class.
            </summary>
            <param name="isDynamic"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel.OnCreateVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy,System.Int32,HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [create vertex buffer].
            </summary>
            <param name="context">The context.</param>
            <param name="buffer">The buffer.</param>
            <param name="geometry">The geometry.</param>
            <param name="deviceResources">The device resources.</param>
            <param name="bufferIndex"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DefaultPointGeometryBufferModel.OnBuildVertexArray(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [build vertex array].
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DynamicPointGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicPointGeometryBufferModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicPointGeometryBufferModel"/> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.MaximumSizeToRetainMb">
            <summary>
            Gets or sets the maximum size to retain the buffer in memory.
            If requested size is larger than this value, buffer will be temporary instead of being retained for reuse.
            
            </summary>
            <value>
            The maximum size to retain mb.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.MinimumSizeToRetainMb">
            <summary>
            Gets or sets the minimum size to retain the buffer in memory.
            If requested size is smaller than this value, buffer will always be retained for reuse.
            </summary>
            <value>
            The minimum size to retain mb.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.MinimumAutoReleaseThresholdSeconds">
            <summary>
            Gets or sets the minimum buffer release threshold by seconds.
            Buffer will not be released automatically if it has been used within last N seconds.
            </summary>
            <value>
            The minimum buffer release threshold by seconds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.SizeReductionDividend">
            <summary>
            Gets or sets the size reduction multiplier.
            If buffer is not being used more than <see cref="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.MinimumAutoReleaseThresholdSeconds"/> seconds,
            and new request size is smaller than buffer size / <see cref="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.SizeReductionDividend"/> but larger than <see cref="P:HelixToolkit.SharpDX.Core.Core.ThreadBufferManagerConfig.MinimumSizeToRetainMb"/>,
            buffer will be released after usage.
            </summary>
            <value>
            The size reduction multiplier.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.CoreComponent.SetAffectsRender``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.ModelConstBuffer">
            <summary>
            Gets or sets the model constant buffer.
            </summary>
            <value>
            The model constant buffer.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.#ctor(HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent"/> class.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="structSize">Size of the structure.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.Upload``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@)">
            <summary>
            Uploads the specified device context. This uploads struct only. Ignores internal byte buffer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="deviceContext">The device context.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.Upload(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Uploads the specified device context. This uploads internal byte buffer only.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.Upload``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@,System.Int32)">
            <summary>
            Uploads the specified device context. This function writes a external struct and writes remains byte buffer by offset = input struct size/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="deviceContext">The device context.</param>
            <param name="data">The data.</param>
            <param name="structSize">The input struct size by bytes</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.WriteValueByName``1(System.String,``0)">
            <summary>
            Writes the value into internal byte buffer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The variable name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.Components.ConstantBufferComponent.WriteValue``1(``0,System.Int32)">
            <summary>
            Writes the value into internal byte buffer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.backfaceRasterState">
            <summary>
            Used to draw back faced triangles onto stencil buffer
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.CuttingOperation">
            <summary>
            Gets or sets the cutting operation.
            </summary>
            <value>
            The cutting operation.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.SectionColor">
            <summary>
            Defines the sectionColor
            </summary>       
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane1Params">
            <summary>
            Defines the plane 1(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane2Params">
            <summary>
            Defines the plane 2(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane3Params">
            <summary>
            Defines the plane 3(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane4Params">
            <summary>
            Defines the plane 4(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane5Params">
            <summary>
            Defines the plane 5(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane6Params">
            <summary>
            Defines the plane 6(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane7Params">
            <summary>
            Defines the plane 7(Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.CrossSectionMeshRenderCore.Plane8Params">
            <summary>
            Defines the plane 8(Normal + d)
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DepthPrepassCore">
            <summary>
            Do a depth prepass before rendering.
            <para>Must customize the DefaultEffectsManager and set DepthStencilState to DefaultDepthStencilDescriptions.DSSDepthEqualNoWrite in default ShaderPass from EffectsManager to achieve best performance.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DepthPrepassCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DepthPrepassCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DepthPrepassCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DrawScreenQuadCore.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DrawScreenQuadCore.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.EnableReflector">
            <summary>
            Gets or sets a value indicating whether [enable reflector].
            </summary>
            <value>
              <c>true</c> if [enable reflector]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.DefaultShaderPassName">
            <summary>
            Name of the default pass inside a technique.
            <para>Default: <see cref="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Default"/></para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.DefaultShaderPass">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.IsLeftHanded">
            <summary>
            Gets or sets a value indicating whether this coordinate system is left handed.
            </summary>
            <value>
              <c>true</c> if this coordinate system is left handed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.NearField">
            <summary>
            Gets or sets the near field of perspective.
            </summary>
            <value>
            The near field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.FarField">
            <summary>
            Gets or sets the far field of perspective.
            </summary>
            <value>
            The far field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.Center">
            <summary>
            Gets or sets the center.
            </summary>
            <value>
            The center.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.ShaderCubeTextureName">
            <summary>
            Gets or sets the name of the shader cube texture.
            </summary>
            <value>
            The name of the shader cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.ShaderCubeTextureSamplerName">
            <summary>
            Gets or sets the name of the shader cube texture sampler.
            </summary>
            <value>
            The name of the shader cube texture sampler.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.IsDynamicScene">
            <summary>
            Gets or sets a value indicating whether this scene is dynamic scene.
            If true, reflection map will be updated in each frame. Otherwise it will only be updated if scene graph or visibility changed.
            </summary>
            <value>
              <c>true</c> if this instance is dynamic scene; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.BindCubeMap(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Binds the cube map.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore.UnBindCubeMap(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Uns the bind cube map.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.EmptyRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.EmptyRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.EmptyRenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.AutoSpacing">
            <summary>
            Gets or sets a value indicating whether [automatic spacing].
            </summary>
            <value>
              <c>true</c> if [automatic spacing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.AutoSpacingRate">
            <summary>
            Gets or sets the automatic spacing rate. Default is 5 for perspective camera. If using orthographic camera, increase the rate value to for example > 15.
            </summary>
            <value>
            The automatic spacing rate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.AcutalSpacing">
            <summary>
            Gets the acutal spacing.
            </summary>
            <value>
            The acutal spacing.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.GridSpacing">
            <summary>
            Gets or sets the grid spacing.
            </summary>
            <value>
            The grid spacing.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.GridThickness">
            <summary>
            Gets or sets the grid thickness.
            </summary>
            <value>
            The grid thickness.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.FadingFactor">
            <summary>
            Gets or sets the fading factor.
            </summary>
            <value>
            The fading factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.PlaneColor">
            <summary>
            Gets or sets the color of the plane.
            </summary>
            <value>
            The color of the plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.GridColor">
            <summary>
            Gets or sets the color of the grid.
            </summary>
            <value>
            The color of the grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.RenderShadowMap">
            <summary>
            Gets or sets a value indicating whether [render shadow map].
            </summary>
            <value>
              <c>true</c> if [render shadow map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.UpAxis">
            <summary>
            Gets or sets Up Axis. Default is Y
            </summary>
            <value>
            The plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.Offset">
            <summary>
            Gets or sets the axis plane offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.GridPattern">
            <summary>
            Gets or sets the grid pattern.
            </summary>
            <value>
            The grid pattern.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.AxisPlaneGridCore"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.TopMostMeshRenderCore">
            <summary>
            Clears the depth buffer and reset global transform.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.LightCoreBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.LightCoreBase.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.LightCoreBase.LightType">
            <summary>
            Gets or sets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.LightCoreBase.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LightCoreBase.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LightCoreBase.CanRender(HelixToolkit.SharpDX.Core.Model.Light3DSceneShared)">
            <summary>
            Determines whether this instance can render the specified light scene.
            </summary>
            <param name="lightScene">The light scene.</param>
            <returns>
              <c>true</c> if this instance can render the specified light scene; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.LightCoreBase.OnRender(HelixToolkit.SharpDX.Core.Model.Light3DSceneShared,System.Int32)">
            <summary>
            Called when [render].
            </summary>
            <param name="lightScene">The light scene.</param>
            <param name="idx">The index.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.AmbientLightCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.AmbientLightCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.AmbientLightCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.AmbientLightCore.OnRender(HelixToolkit.SharpDX.Core.Model.Light3DSceneShared,System.Int32)">
            <summary>
            Called when [render].
            </summary>
            <param name="lightScene">The light scene.</param>
            <param name="idx">The index.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PointLightCore">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PointLightCore.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PointLightCore.Attenuation">
            <summary>
            Gets or sets the attenuation.
            </summary>
            <value>
            The attenuation.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PointLightCore.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>
            The range.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointLightCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PointLightCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointLightCore.OnRender(HelixToolkit.SharpDX.Core.Model.Light3DSceneShared,System.Int32)">
            <summary>
            Called when [render].
            </summary>
            <param name="lightScene">The light scene.</param>
            <param name="index">The index.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.SpotLightCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SpotLightCore.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SpotLightCore.FallOff">
            <summary>
            Gets or sets the fall off.
            </summary>
            <value>
            The fall off.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SpotLightCore.InnerAngle">
            <summary>
            Gets or sets the inner angle.
            </summary>
            <value>
            The inner angle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SpotLightCore.OuterAngle">
            <summary>
            Gets or sets the outer angle.
            </summary>
            <value>
            The outer angle.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SpotLightCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.SpotLightCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SpotLightCore.OnRender(HelixToolkit.SharpDX.Core.Model.Light3DSceneShared,System.Int32)">
            <summary>
            Called when [render].
            </summary>
            <param name="lightScene">The light scene.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.RasterStateWireframe">
            <summary>
            Gets the raster state wireframe.
            </summary>
            <value>
            The raster state wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.InvertNormal">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.RenderWireframe">
            <summary>
            Gets or sets a value indicating whether [render wireframe].
            </summary>
            <value>
              <c>true</c> if [render wireframe]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.WireframeColor">
            <summary>
            Gets or sets the color of the wireframe.
            </summary>
            <value>
            The color of the wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.DynamicReflector">
            <summary>
            Gets or sets the dynamic reflector.
            </summary>
            <value>
            The dynamic reflector.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.Batched">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshRenderCore"/> is batched.
            </summary>
            <value>
              <c>true</c> if batched; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshRenderCore.MaterialVariables">
            <summary>
            Used to wrap all material resources
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OutlineShaderPass">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.Color">
            <summary>
            Outline color
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OutlineEnabled">
            <summary>
            Enable outline
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.DrawMesh">
            <summary>
            Draw original mesh
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.DrawOutlineBeforeMesh">
            <summary>
            Draw outline order
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OutlineFadingFactor">
            <summary>
            Outline fading
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OutlinePassName">
            <summary>
            Gets or sets the name of the outline pass.
            </summary>
            <value>
            The name of the outline pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Called when [attach].
            </summary>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OnUpdatePerModelStruct(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Called when [update per model structure].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.MeshOutlineRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.OrderIndependentTransparentRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.OrderIndependentTransparentRenderCore"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.NumTextureColumn">
            <summary>
            Texture tile columns
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.NumTextureRow">
            <summary>
            Texture tile rows
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.AnimateSpriteByEnergy">
            <summary>
            Change Sprite based on particle energy, sequence from (1,1) to (NumTextureRow, NumTextureColumn) evenly divided by tile counts
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InsertElapseThrottle">
            <summary>
            Minimum time elapse to insert new particles
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.VectorGenerator">
            <summary>
            Random generator, used to generate particle for different direction, etc
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ParticleCount">
            <summary>
            Maximum Particle count
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ParticleTexture">
            <summary>
            Particle Texture
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.SamplerDescription">
            <summary>
            Particle texture sampler description.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.HasTexture">
            <summary>
            Gets a value indicating whether this instance has texture.
            </summary>
            <value>
              <c>true</c> if this instance has texture; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ParticleSize">
            <summary>
            Particle Size
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.EmitterLocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.CumulateAtBound">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ExtraAcceleration">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.DomainBoundMax">
            <summary>
            Gets or sets the domain bound maximum.
            </summary>
            <value>
            The domain bound maximum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.DomainBoundMin">
            <summary>
            Gets or sets the domain bound minimum.
            </summary>
            <value>
            The domain bound minimum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ConsumerGravity">
            <summary>
            Gets or sets the consumer gravity.
            </summary>
            <value>
            The consumer gravity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ConsumerLocation">
            <summary>
            Gets or sets the consumer location.
            </summary>
            <value>
            The consumer location.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ConsumerRadius">
            <summary>
            Gets or sets the consumer radius.
            </summary>
            <value>
            The consumer radius.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.EnergyDissipationRate">
            <summary>
            Gets or sets the energy dissipation rate.
            </summary>
            <value>
            The energy dissipation rate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InitialAcceleration">
            <summary>
            Gets or sets the initial acceleration.
            </summary>
            <value>
            The initial acceleration.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InitialEnergy">
            <summary>
            Gets or sets the initial energy.
            </summary>
            <value>
            The initial energy.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InitialVelocity">
            <summary>
            Gets or sets the initial velocity.
            </summary>
            <value>
            The initial velocity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ParticleBlendColor">
            <summary>
            Gets or sets the color of the particle blend.
            </summary>
            <value>
            The color of the particle blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.EmitterRadius">
            <summary>
            Gets or sets the emitter radius.
            </summary>
            <value>
            The emitter radius.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.FrameVariables">
            <summary>
            Particle per frame parameters
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InsertVariables">
            <summary>
            Particle insert parameters
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.InstanceBuffer">
            <summary>
            Gets or sets the instance buffer.
            </summary>
            <value>
            The instance buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.BufferProxies">
            <summary>
            Gets or sets the buffer proxies.
            </summary>
            <value>
            The buffer proxies.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.BlendDescription">
            <summary>
            Particle blend state description
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.BlendFactor">
            <summary>
            Gets or sets the blend factor used for blending.
            </summary>
            <value>
            The blend factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.SampleMask">
            <summary>
            Gets or sets the sample mask used for blending.
            </summary>
            <value>
            The sample mask.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.VertexLayout">
            <summary>
            Gets or sets the vertex layout.
            </summary>
            <value>
            The vertex layout.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.CurrentSimStateUAVBufferName">
            <summary>
            Set current sim state variable name inside compute shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.NewSimStateUAVBufferName">
            <summary>
            Set new sim state variable name inside compute shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.SimStateBufferName">
            <summary>
            Set sim state name inside vertex shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ShaderTextureBufferName">
            <summary>
            Set texture variable name inside shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.ShaderTextureSamplerName">
            <summary>
            Set texture sampler variable name inside shader for binding
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Called when [attach].
            </summary>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.UpdateInsertThrottle">
            <summary>
            Updates the insert throttle.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.OnUpdate(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ParticleRenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PointLineRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PointLineRenderCore.MaterialVariables">
            <summary>
            Used to wrap all material resources
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PointLineRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PostEffectBlurCore">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectBlurCore.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPass,HelixToolkit.SharpDX.Core.Shaders.ShaderPass,System.Int32,System.Int32,SharpDX.Direct3D11.SamplerStateDescription,HelixToolkit.SharpDX.Core.IEffectsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectBlurCore.Run(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.Core.PostEffectBlurCore.BlurDepth,HelixToolkit.SharpDX.Core.BorderEffectStruct@)">
            <summary>
            Runs the blur procedure
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="source">The source.</param>
            <param name="depth">The depth.</param>
            <param name="sourceHeight"></param>
            <param name="sourceWidth"></param>
            <param name="modelStruct"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PostEffectBloomCore">
            <summary>
            Outline blur effect
            <para>Must not put in shared model across multiple viewport, otherwise may causes performance issue if each viewport sizes are different.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectBloomCore.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectBloomCore.ThresholdColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectBloomCore.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectBloomCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore"/> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectFXAA.FXAALevel">
            <summary>
            Gets or sets the fxaa level.
            </summary>
            <value>
            The fxaa level.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IPostEffectOutlineBlur">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectOutlineBlur.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectOutlineBlur.ScaleX">
            <summary>
            Gets or sets the scale x.
            </summary>
            <value>
            The scale x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectOutlineBlur.ScaleY">
            <summary>
            Gets or sets the scale y.
            </summary>
            <value>
            The scale y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectOutlineBlur.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore">
            <summary>
            Outline blur effect
            <para>Must not put in shared model across multiple viewport, otherwise may causes performance issue if each viewport sizes are different.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.ScaleX">
            <summary>
            Gets or sets the scale x.
            </summary>
            <value>
            The scale x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.ScaleY">
            <summary>
            Gets or sets the scale y.
            </summary>
            <value>
            The scale y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshOutlineBlurCore"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IPostEffectMeshXRay">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectMeshXRay.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectMeshXRay.OutlineFadingFactor">
            <summary>
            Gets or sets the outline fading factor.
            </summary>
            <value>
            The outline fading factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPostEffectMeshXRay.EnableDoublePass">
            <summary>
            Gets or sets a value indicating whether [double pass]. Double pass uses stencil buffer to reduce overlapping artifacts
            </summary>
            <value>
              <c>true</c> if [double pass]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.OutlineFadingFactor">
            <summary>
            Outline fading
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.EnableDoublePass">
            <summary>
            Gets or sets a value indicating whether [double pass]. Double pass uses stencil buffer to reduce overlapping artifacts
            </summary>
            <value>
              <c>true</c> if [double pass]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.GridDensity">
            <summary>
            Gets or sets the grid density.
            </summary>
            <value>
            The grid density.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.DimmingFactor">
            <summary>
            Gets or sets the dim factor on original color
            </summary>
            <value>
            The dim factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.BlendingFactor">
            <summary>
            Gets or sets the blending factor for grid and original mesh color blending
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.XRayDrawingPassName">
            <summary>
            Gets or sets the name of the x ray drawing pass. This is the final pass to draw mesh and grid overlay onto render target
            </summary>
            <value>
            The name of the x ray drawing pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.PostEffectMeshXRayGridCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IScreenClone">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenClone.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenClone.CloneRectangle">
            <summary>
            Gets or sets the clone rectangle.
            </summary>
            <value>
            The clone rectangle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenClone.StretchToFill">
            <summary>
            Gets or sets a value indicating whether cloned rectangle is stretched during rendering, default is false;
            </summary>
            <value>
              <c>true</c> if stretch; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenClone.ShowMouseCursor">
            <summary>
            Gets or sets a value indicating whether [show mouse cursor].
            </summary>
            <value>
              <c>true</c> if [show mouse cursor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore">
            <summary>
            Limitation: Under switchable graphics card setup(Laptop with integrated graphics card and external graphics card), 
            only monitor outputs using integrated graphics card is fully supported.
            Trying to clone monitor outputs by external graphics card, 
            the clone window must reside in those monitors which is rendered by external graphics card, or error will be occurred.
            Ref: https://support.microsoft.com/en-us/help/3019314/error-generated-when-desktop-duplication-api-capable-application-is-ru
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.CloneRectangle">
            <summary>
            Gets or sets the clone rectangle.
            </summary>
            <value>
            The clone rectangle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.StretchToFill">
            <summary>
            Gets or sets a value indicating cloned rectangle is stretched during rendering, default is false;
            </summary>
            <value>
              <c>true</c> if stretch; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.ShowMouseCursor">
            <summary>
            Gets or sets a value indicating whether [show mouse cursor].
            </summary>
            <value>
              <c>true</c> if [show mouse cursor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Called when [attach].
            </summary>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.GetTextureBound(System.Int32,System.Int32)">
            <summary>
            Gets the texture bound. Ouput: x(left), y(right), z(top), w(bottom)
            </summary>
            <param name="screenWidth">Width of the screen.</param>
            <param name="screenHeight">Height of the screen.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.GetVertexBound(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return Quad NDC coordinate for vertex. Ouput: x(left), y(right), z(top), w(bottom)
            </summary>
            <param name="viewportWidth"></param>
            <param name="viewportHeight"></param>
            <param name="deskWidth"></param>
            <param name="deskHeight"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenCloneRenderCore.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.RelativeScreenLocationX">
            <summary>
            Relative position X of the center of viewport
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.RelativeScreenLocationY">
            <summary>
            Relative position Y of the center of viewport
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.SizeScale">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.CameraType">
            <summary>
            Only being used when <see cref="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Mode"/> is RelativeScreenSpaced
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.ScreenRatio">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Fov">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.CameraDistance">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.GlobalTransform">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.AbsolutePosition3D">
            <summary>
            Gets or sets the absolute position. Used in <see cref="F:HelixToolkit.SharpDX.Core.ScreenSpacedMode.AbsolutePosition3D"/>
            </summary>
            <value>
            The absolute position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.FarPlane">
            <summary>
            Gets or sets the far plane for screen spaced camera rendering.
            </summary>
            <value>
            The far plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IScreenSpacedRenderParams.NearPlane">
            <summary>
            Gets or sets the near plane for screen spaced camera rendering.
            </summary>
            <value>
            The near plane.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore">
            <summary>
            Used to change view matrix and projection matrix to screen spaced coordinate system.
            <para>Usage: Call SetScreenSpacedCoordinates(RenderHost) to move coordinate system. Call other render functions for sub models. Finally call RestoreCoordinates(RenderHost) to restore original coordinate system.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.RelativeScreenLocationX">
            <summary>
            Relative position X of the center of viewport
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.RelativeScreenLocationY">
            <summary>
             Relative position Y of the center of viewport
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.SizeScale">
            <summary>
            Size scaling
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.CameraType">
            <summary>
            Only being used when <see cref="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Mode"/> is RelativeScreenSpaced
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.IsRightHand">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Width">
            <summary>
            Viewport Width
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Height">
            <summary>
            Viewport Height
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Size">
            <summary>
            Default size. To scale, use <see cref="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.SizeScale"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.CameraDistance">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Fov">
            <summary>
            Fov in radian
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.NearPlane">
            <summary>
            Gets the near plane.
            </summary>
            <value>
            The near plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.FarPlane">
            <summary>
            Gets the far plane.
            </summary>
            <value>
            The far plane.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.CreateViewMatrix(HelixToolkit.SharpDX.Core.RenderContext,SharpDX.Vector3@)">
            <summary>
            Creates the view matrix.
            </summary>
            <param name="renderContext">The render context.</param>
            <param name="eye">The eye.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.OnCreateProjectionMatrix(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Called when [create projection matrix].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="renderContext">The render context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.SetScreenSpacedCoordinates(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Sets the screen spaced coordinates.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ScreenSpacedMeshRenderCore.SetScreenSpacedCoordinates(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Sets the screen spaced coordinates.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="clearDepthBuffer">if set to <c>true</c> [clear depth buffer].</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ShadowMapCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.ShadowMapTextureDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.DepthStencilViewDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.ShaderResourceViewDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.Intensity">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.Bias">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.LightViewProjectMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.FoundLightSource">
            <summary>
            Set to true if found the light source, otherwise false.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.UpdateFrequency">
            <summary>
            Update shadow map every N frames
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.ShadowMapCore.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.CubeTexture">
            <summary>
            Gets or sets the cube texture.
            </summary>
            <value>
            The cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.MipMapLevels">
            <summary>
            Gets the mip map levels for current cube texture.
            </summary>
            <value>
            The mip map levels.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.ShaderCubeTextureName">
            <summary>
            Gets or sets the name of the shader cube texture.
            </summary>
            <value>
            The name of the shader cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.ShaderCubeTextureSamplerName">
            <summary>
            Gets or sets the name of the shader cube texture sampler.
            </summary>
            <value>
            The name of the shader cube texture sampler.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Called when [attach].
            </summary>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.OnDefaultPassChanged(HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Called when [default pass changed].
            </summary>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.OnRenderShadow(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render shadow].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore.SkyBoxBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.CubeTexture">
            <summary>
            Gets or sets the cube texture.
            </summary>
            <value>
            The cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.MipMapLevels">
            <summary>
            Gets the mip map levels for current cube texture.
            </summary>
            <value>
            The mip map levels.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.ShaderCubeTextureName">
            <summary>
            Gets or sets the name of the shader cube texture.
            </summary>
            <value>
            The name of the shader cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.ShaderCubeTextureSamplerName">
            <summary>
            Gets or sets the name of the shader cube texture sampler.
            </summary>
            <value>
            The name of the shader cube texture sampler.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.SkyBoxRenderCore"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.OnAttach(HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Called when [attach].
            </summary>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.OnDefaultPassChanged(HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Called when [default pass changed].
            </summary>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.OnRender(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.SkyDomeRenderCore.SkyDomeBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.VolumeRenderCore.MaterialVariables">
            <summary>
            Used to wrap all material resources
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.VolumeRenderCore.VolumeCubeBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IGeometryRenderCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IGeometryRenderCore.InstanceBuffer">
            <summary>
            Gets or sets the instance buffer.
            </summary>
            <value>
            The instance buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IGeometryRenderCore.GeometryBuffer">
            <summary>
            Gets or sets the geometry buffer.
            </summary>
            <value>
            The geometry buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IGeometryRenderCore.RasterDescription">
            <summary>
            Gets or sets the raster description.
            </summary>
            <value>
            The raster description.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IMaterialRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMaterialRenderParams.MaterialVariables">
            <summary>
            Gets or sets the material variables used for rendering.
            </summary>
            <value>
            The material variable.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IMeshRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IDynamicReflector">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IDynamicReflectable">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IInvertNormal">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IInvertNormal.InvertNormal">
            <summary>
            Gets or sets a value indicating whether [invert normal].
            </summary>
            <value>
              <c>true</c> if [invert normal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IBillboardRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IBillboardRenderParams.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IBillboardRenderParams.FixedSize">
            <summary>
            Gets or sets a value indicating whether [fixed size].
            </summary>
            <value>
              <c>true</c> if [fixed size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IBillboardRenderParams.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.CuttingOperation">
            <summary>
            Cutting operation, intersects or substract
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.SectionColor">
            <summary>
            Gets or sets the color of the section.
            </summary>
            <value>
            The color of the section.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.PlaneEnabled">
            <summary>
            Gets or sets a value indicating whether [plane1/plane2/plane3/plane4 enabled].
            </summary>
            <value>
              <c>true</c> if [plane1/plane2/plane3/plane4 enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane5To8Enabled">
            <summary>
            Gets or sets the plane5 to 8 enabled.
            </summary>
            <value>
            The plane5 to8 enabled.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane1Params">
            <summary>
            Defines the plane (Normal + d)
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane2Params">
            <summary>
            Gets or sets the plane2 parameters.(Normal + d)
            </summary>
            <value>
            The plane2 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane3Params">
            <summary>
            Gets or sets the plane3 parameters.(Normal + d)
            </summary>
            <value>
            The plane3 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane4Params">
            <summary>
            Gets or sets the plane4 parameters.(Normal + d)
            </summary>
            <value>
            The plane4 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane5Params">
            <summary>
            Gets or sets the plane5 parameters.(Normal + d)
            </summary>
            <value>
            The plane5 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane6Params">
            <summary>
            Gets or sets the plane6 parameters.(Normal + d)
            </summary>
            <value>
            The plane6 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane7Params">
            <summary>
            Gets or sets the plane7 parameters.(Normal + d)
            </summary>
            <value>
            The plane7 parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ICrossSectionRenderParams.Plane8Params">
            <summary>
            Gets or sets the plane8 parameters.(Normal + d)
            </summary>
            <value>
            The plane8 parameters.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams.OutlineEnabled">
            <summary>
            Enable outline
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams.DrawMesh">
            <summary>
            Draw original mesh
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams.DrawOutlineBeforeMesh">
            <summary>
            Draw outline order
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IMeshOutlineParams.OutlineFadingFactor">
            <summary>
            Outline fading
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.MeshTopologies">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.MeshTopologies.Topologies">
            <summary>
            Gets the topologies.
            </summary>
            <value>
            The topologies.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IPointRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPointRenderParams.PointColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPointRenderParams.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPointRenderParams.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPointRenderParams.Figure">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IPointRenderParams.FigureRatio">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.Bias">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.Intensity">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.LightViewProjectMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IShadowMapRenderParams.UpdateFrequency">
            <summary>
            Update shadow map every N frames
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ISkyboxRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ISkyboxRenderParams.CubeTexture">
            <summary>
            Gets or sets the cube texture.
            </summary>
            <value>
            The cube texture.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.IThrowingShadow">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.IThrowingShadow.IsThrowingShadow">
            <summary>
            Gets or sets a value indicating whether this instance is throwing shadow.
            </summary>
            <value>
              <c>true</c> if this instance is throwing shadow; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.ILineRenderParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ILineRenderParams.Thickness">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ILineRenderParams.Smoothness">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Core.ILineRenderParams.LineColor">
            <summary>
            Final Line Color = LineColor * PerVertexLineColor
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Core.GeometryBufferManager">
            <summary>
            Use to manage geometry vertex/index buffers. 
            Same geometry with same buffer type will share the same buffer across all models.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Core.GeometryBufferManager.bufferDictionary">
            <summary>
            The buffer dictionary. Key1=<see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.GUID"/>, Key2=Typeof(Buffer)
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferManager.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Core.GeometryBufferManager"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Core.GeometryBufferManager.Register``1(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Registers the specified model unique identifier.
            </summary>
            <typeparam name="T">Geometry Buffer Type</typeparam>
            <param name="modelGuid">The model unique identifier.</param>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultBufferNames">
            <summary>
            Default buffer names from shader code. Name must match shader code to bind proper buffer
            <para>Note: Constant buffer must match both name and struct size</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultComputeShaders.CSParticleInsert">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultComputeShaders.CSParticleUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultComputeShaderDescriptions.CSParticleInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultComputeShaderDescriptions.CSParticleUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultDomainShaders">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultDomainShaders.DSMeshTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSLineArrowHead">
            <summary>
            Gets the gs line arrow head.
            </summary>
            <value>
            The gs line arrow head.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSLineArrowHeadTail">
            <summary>
            Gets the gs line arrow tail.
            </summary>
            <value>
            The gs line arrow tail.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSBillboard">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderByteCodes.GSMeshNormalVector">
            <summary>
            Gets the gs mesh normal vector.
            </summary>
            <value>
            The gs mesh normal vector.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions">
            <summary>
            Default Geometry Shaders
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSLineArrowHead">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSLineArrowHeadTail">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSBillboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSMeshNormalVector">
            <summary>
            The gs mesh normal vector
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultGSShaderDescriptions.GSMeshBoneSkinnedOut">
            <summary>
            The gs mesh bone skinned out
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultHullShaders.HSMeshTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshBinnPhong">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshBinnPhongOIT">
            <summary>
            Gets the ps mesh binn phong order independent transparent shader.
            </summary>
            <value>
            The ps mesh binn phong order independent transparent shader.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshBinnPhongOITQuad">
            <summary>
            Gets the ps mesh binn phong oit quad.
            </summary>
            <value>
            The ps mesh binn phong oit quad.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshDiffuseMapOIT">
            <summary>
            Gets the ps mesh diffuse map oit.
            </summary>
            <value>
            The ps mesh diffuse map oit.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshVertColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshVertPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshNormal">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSShadow">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSLineColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSBillboardText">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSBillboardTextOIT">
            <summary>
            Gets the ps billboard text order independent transparent shader.
            </summary>
            <value>
            The ps billboard text order independent transparent shader.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshXRay">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshClipPlaneBackface">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshClipPlaneQuad">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSParticleOIT">
            <summary>
            Gets the ps particle order independent transparent shader.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSSkybox">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshWireframe">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshWireframeOIT">
            <summary>
            Gets the ps mesh wireframe oit.
            </summary>
            <value>
            The ps mesh wireframe oit.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSDepthStencilTestOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectOutlineScreenQuad">
            <summary>
            Gets the ps mesh outline screen quad.
            </summary>
            <value>
            The ps mesh outline screen quad.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectFullScreenBlurVertical">
            <summary>
            Gets the ps effect full screen blur vertical.
            </summary>
            <value>
            The ps effect full screen blur vertical.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectFullScreenBlurHorizontal">
            <summary>
            Gets the ps effect full screen blur horizontal.
            </summary>
            <value>
            The ps effect full screen blur horizontal.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectMeshBorderHighlight">
            <summary>
            Gets the ps mesh border highlight
            </summary>
            <value>
            The ps mesh mesh border highlight
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectOutlineSmooth">
            <summary>
            Gets the ps effect outline smooth.
            </summary>
            <value>
            The ps effect outline smooth.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectOutlineScreenQuadStencil">
            <summary>
            Gets the ps mesh outline screen quad stencil.
            </summary>
            <value>
            The ps mesh outline screen quad stencil.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectOutlineQuadFinal">
            <summary>
            Gets the ps mesh outline quad final.
            </summary>
            <value>
            The ps mesh outline quad final.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectMeshXRay">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectBloomExtract">
            <summary>
            Gets the ps effect bloom extract.
            </summary>
            <value>
            The ps effect bloom extract.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectBloomVerticalBlur">
            <summary>
            Gets the ps effect bloom vertical blur.
            </summary>
            <value>
            The ps effect bloom vertical blur.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectBloomHorizontalBlur">
            <summary>
            Gets the ps effect bloom horizontal blur.
            </summary>
            <value>
            The ps effect bloom horizontal blur.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectBloomCombine">
            <summary>
            Gets the ps effect bloom combine.
            </summary>
            <value>
            The ps effect bloom combine.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectFXAA">
            <summary>
            Gets the ps effect fxaa.
            </summary>
            <value>
            The ps effect fxaa.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectLUMA">
            <summary>
            Gets the ps effect luma.
            </summary>
            <value>
            The ps effect luma.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectXRayGrid">
            <summary>
            Gets the ps effect x ray grid. This is based on BlinnPhong
            </summary>
            <value>
            The ps effect x ray grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSEffectDiffuseXRayGrid">
            <summary>
            Gets the ps effect diffuse x ray grid.
            </summary>
            <value>
            The ps effect diffuse x ray grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSPlaneGrid">
            <summary>
            Gets the ps plane grid.
            </summary>
            <value>
            The ps plane grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshPBR">
            <summary>
            Gets the ps mesh PBR.
            </summary>
            <value>
            The ps mesh PBR.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSMeshPBROIT">
            <summary>
            Gets the ps mesh PBR OIT.
            </summary>
            <value>
            The ps mesh PBR.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSSprite2D">
            <summary>
            Gets the ps sprite.
            </summary>
            <value>
            The ps sprite.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderByteCodes.PSScreenDup">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions">
            <summary>
            Default Pixel Shaders
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshBlinnPhong">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshBlinnPhongOIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshBlinnPhongOITQuad">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshVertColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshVertNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshVertPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshDiffuseMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshDiffuseMapOIT">
            <summary>
            The ps mesh diffuse map oit
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshColorStripe">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshViewCube">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSLineColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSBillboardText">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSBillboardTextOIT">
            <summary>
            The ps billboard text oit
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshXRay">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshClipBackface">
            <summary>
            /
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshClipScreenQuad">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSParticleOIT">
            <summary>
            The ps particle oit
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSSkybox">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshWireframe">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshWireframeOIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSDepthStencilOnly">
            <summary>
            The ps depth stencil only
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshOutlineScreenQuad">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectFullScreenBlurVertical">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectFullScreenBlurHorizontal">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectMeshBorderHighlight">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectOutlineSmooth">
            <summary>
            The ps effect mesh border highlight
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshOutlineQuadStencil">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshOutlineQuadFinal">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectMeshXRay">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectBloomExtract">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectBloomVerticalBlur">
            <summary>
            The ps effect bloom vertical blur
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectBloomHorizontalBlur">
            <summary>
            The ps effect bloom horizontal blur
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectBloomCombine">
            <summary>
            The ps effect bloom combine
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectFXAA">
            <summary>
            The ps effect FXAA
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectLUMA">
            <summary>
            The ps effect luma
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectXRayGrid">
            <summary>
            The ps effect x ray grid, this is based on BlinnPhong
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSEffectDiffuseXRayGrid">
            <summary>
            The ps effect x ray grid, this is based on diffuse shading
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSPlaneGrid">
            <summary>
            The ps plane grid
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshPBR">
            <summary>
            The ps mesh PBR
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSMeshPBROIT">
            <summary>
            The ps mesh PBR
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSSprite2D">
            <summary>
            The ps sprite
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSScreenDup">
            <summary>
            The ps screen dup
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSVolume3D">
            <summary>
            The ps volume3d
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSVolumeCube">
            <summary>
            The ps volume cube
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSVolumeDiffuse3D">
            <summary>
            The ps volume3d
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSSSAOP1">
            <summary>
            The psssao p1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSSSAO">
            <summary>
            The psssao
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultPSShaderDescriptions.PSSSAOBlur">
            <summary>
            The ps ssao blur
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerWrapAni16">
            <summary>
            The linear sampler wrap anisotropy =16
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerWrapAni8">
            <summary>
            The linear sampler wrap anisotropy =8
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerWrapAni4">
            <summary>
            The linear sampler wrap anisotropy = 4
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerWrapAni2">
            <summary>
            The linear sampler wrap anisotropy =2
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerWrapAni1">
            <summary>
            The linear sampler wrap anisotropy = 1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.PointSamplerWrap">
            <summary>
            The point sampler wrap
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.ShadowSampler">
            <summary>
            The shadow sampler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.EnvironmentSampler">
            <summary>
            The cube sampler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.IBLSampler">
            <summary>
            The cube sampler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LinearSamplerClampAni4">
            <summary>
            The linear sampler clamp ani4
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.ScreenDupSampler">
            <summary>
            The screen dup sampler
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultSamplers.LineSamplerUWrapVClamp">
            <summary>
            The point sampler wrap
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultBlendStateDescriptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSDepthLess">
            <summary>
            The DSS depth less
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSDepthLessEqual">
            <summary>
            The DSS depth less equal
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSLessNoWrite">
            <summary>
            The DSS less no write
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSLessEqualNoWrite">
            <summary>
            The DSS less equal no write
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSGreaterNoWrite">
            <summary>
            The DSS greater no write
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSEqualNoWrite">
            <summary>
            The DSS equal no write
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSClipPlaneBackface">
            <summary>
            The DSS clip plane backface
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSMeshOutlineP1">
            <summary>
            The DSS mesh outline pass1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSEffectMeshXRayP1">
            <summary>
            The DSS mesh outline pass1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSEffectMeshXRayP2">
            <summary>
            The DSS mesh outline pass1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSOutlineFillQuad">
            <summary>
            The DSS clip plane fill quad
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSClipPlaneFillQuad">
            <summary>
            The DSS clip plane fill quad
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSDepthAlwaysNoStencil">
            <summary>
            The DSS depth always no stencil
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultDepthStencilDescriptions.DSSNoDepthNoStencil">
            <summary>
            The DSS no depth no stencil
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultRasterDescriptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultRasterDescriptions.RSSolidNoMSAA">
            <summary>
            The solid no msaa RasterizerState
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultRasterDescriptions.RSSkybox">
            <summary>
            The skybox RasterizerState
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultRasterDescriptions.RSScreenDuplication">
            <summary>
            The screen duplication RasterizerState
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshDefault">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshBatched">
            <summary>
            Gets the vs mesh batched.
            </summary>
            <value>
            The vs mesh batched.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshShadow">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshDepth">
            <summary>
            Gets the vs mesh depth.
            </summary>
            <value>
            The vs mesh depth.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshBatchedShadow">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshBatchedSSAO">
            <summary>
            Gets the vs mesh batched ssao.
            </summary>
            <value>
            The vs mesh batched ssao.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshInstancingTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSPointShadow">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSBillboard">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSBillboardInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshClipPlane">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshClipPlaneQuad">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSSkybox">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshWireframe">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshBatchedWireframe">
            <summary>
            Gets the vs mesh batched wireframe.
            </summary>
            <value>
            The vs mesh batched wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshBoneSkinningWireframe">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshOutlineP1">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSMeshOutlineScreenQuad">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSPlaneGrid">
            <summary>
            Gets the vs plane grid.
            </summary>
            <value>
            The vs plane grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSScreenDup">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderByteCodes.VSScreenDupCursor">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputBoneSkinnedBasic">
            <summary>
            Gets the vs input bone skinned basic.
            </summary>
            <value>
            The vs input bone skinned basic.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputBillboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputBillboardInstancing">
            <summary>
            Gets the vs input billboard instancing.
            </summary>
            <value>
            The vs input billboard instancing.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputParticle">
            <summary>
            Gets the vs input particle.
            </summary>
            <value>
            The vs input particle.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputSkybox">
            <summary>
            Gets the vs input skybox.
            </summary>
            <value>
            The vs input skybox.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputSprite2D">
            <summary>
            Gets the vs input sprite 2d.
            </summary>
            <value>
            The vs input sprite 2d.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultInputLayout.VSInputVolume3D">
            <summary>
            Gets the vs input volume3d.
            </summary>
            <value>
            The vs input volume3d.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshDefault">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshBatched">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshSSAO">
            <summary>
            The vs mesh ssao
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshBatchedShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshBatchedSSAO">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshInstancingTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshBoneSkinnedBasic">
            <summary>
            The vs mesh bone skinned basic
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSPointShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSBillboardText">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSBillboardInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshClipPlane">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSFullScreenQuad">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSParticle">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSSkybox">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshWireframe">
            <summary>
            The vs mesh wireframe
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshDepth">
            <summary>
            The vs mesh depth
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshBatchedWireframe">
            <summary>
            The vs mesh batched wireframe
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSBoneSkinningWireframe">
            <summary>
            The vs bone skinning wireframe
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshOutlinePass1">
            <summary>
            The vs mesh outline pass1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSMeshOutlineScreenQuad">
            <summary>
            The vs mesh outline pass1
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSPlaneGrid">
            <summary>
            The vs plane grid
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSScreenQuad">
            <summary>
            The vs screen quad
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSSprite2D">
            <summary>
            The vs sprite
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSVolume3D">
            <summary>
            The vs volume3d
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSSSAO">
            <summary>
            The vsssao
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSScreenDup">
            <summary>
            The vs screen dup
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.DefaultVSShaderDescriptions.VSScreenDupCursor">
            <summary>
            The vs screen dup mouse cursor
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.FeatureLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.Parse(System.Byte[],HelixToolkit.SharpDX.Core.ShaderStage)">
            <summary>
            Pass the byte code, reflect all shader buffer bindings
            </summary>
            <param name="byteCode"></param>
            <param name="stage"></param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.ConstantBufferMappings">
            <summary>
            Get constant buffer mapping.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.TextureMappings">
            <summary>
            Get texture buffer mapping.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.UAVMappings">
            <summary>
            Get Unordered Access View buffer mapping.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.IShaderReflector.SamplerMappings">
            <summary>
            Get Sampler mapping
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.ComputeShader">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Vertex Shader
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy}})">
            <summary>
            Binds the textures.
            </summary>
            <param name="context">The context.</param>
            <param name="textures">The textures.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindSamplers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy}})">
            <summary>
            Binds the samplers.
            </summary>
            <param name="context">The context.</param>
            <param name="samplers">The samplers.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindUAV(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy)">
            <summary>
            Binds the UnorderedAccessView.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="uav">The uav.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindUAV(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy)">
            <summary>
            Binds the UnorderedAccessView.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="uav">The uav.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.BindUAVs(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy}})">
            <summary>
            Binds the UnorderedAccessViews.
            </summary>
            <param name="context">The context.</param>
            <param name="uavs">The uavs.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.DomainShader">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Vertex Shader
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy}})">
            <summary>
            Binds the textures.
            </summary>
            <param name="context">The context.</param>
            <param name="textures">The textures.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.DomainShader.BindSamplers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy}})">
            <summary>
            Binds the samplers.
            </summary>
            <param name="context">The context.</param>
            <param name="samplers">The samplers.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.GeometryShader">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.GeometryShader"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="name">The name.</param>
            <param name="byteCode">The byte code.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[],SharpDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.GeometryShader"/> class. This is used for stream out geometry shader
            </summary>
            <param name="device">The device.</param>
            <param name="name">The name.</param>
            <param name="byteCode">The byte code.</param>
            <param name="streamOutputElements">The stream output elements.</param>
            <param name="bufferStrides">The buffer strides.</param>
            <param name="rasterizedStream">The rasterized stream.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.HullShader">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.HullShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Vertex Shader
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.HullShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.EmptyInputLayout">
            <summary>
            The empty input layout
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.ShaderByteCode">
            <summary>
            Gets or sets the shader byte code.
            </summary>
            <value>
            The shader byte code.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.InputElements">
            <summary>
            Gets or sets the input elements.
            </summary>
            <value>
            The input elements.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.#ctor(System.Byte[],SharpDX.Direct3D11.InputElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription"/> class.
            </summary>
            <param name="byteCode">The byte code.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.#ctor(System.String,SharpDX.Direct3D11.InputElement[],HelixToolkit.SharpDX.Core.Helper.IShaderByteCodeReader)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription"/> class. Pass custom <see cref="T:HelixToolkit.SharpDX.Core.Helper.IShaderByteCodeReader"/> to read external shader bytecodes.
            </summary>
            <param name="byteCodeName">The byte code name.</param>
            <param name="elements">The elements.</param>
            <param name="byteCodeReader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1">
            <summary>
            
            </summary>
            <typeparam name="MappingType"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.Mappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.AddMapping(System.String,System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="slot"></param>
            <param name="mapping"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.RemoveMapping(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.RemoveMapping(System.Int32)">
            <summary>
            
            </summary>
            <param name="slot"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.ClearMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.TryGetBindSlot(System.String)">
            <summary>
            Try get slot by name. If failed, return -1;
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.TryGetName(System.Int32)">
            <summary>
            Try to get name by register slot. If failed, return empty string;
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.GetMapping(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.MappingProxy`1.GetMapping(System.Int32)">
            <summary>
            
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.PixelShader">
            <summary>
            Pixel Shader
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Pixel Shader
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy}})">
            <summary>
            Binds the textures.
            </summary>
            <param name="context">The context.</param>
            <param name="textures">The textures.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.PixelShader.BindSamplers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy}})">
            <summary>
            Binds the samplers.
            </summary>
            <param name="context">The context.</param>
            <param name="samplers">The samplers.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.SamplerMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.SamplerMapping.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Shaders.SamplerMapping.ShaderType">
            <summary>
            The shader type
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.SamplerMapping.Slot">
            <summary>
            Gets or sets the slot.
            </summary>
            <value>
            The slot.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.ShaderBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.ConstantBufferMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.ShaderResourceViewMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.UnorderedAccessViewMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.SamplerMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.ShaderType">
            <summary>
            Gets the type of the shader.
            </summary>
            <value>
            The type of the shader.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.ShaderStageIndex">
            <summary>
            Gets the index of the shader stage.
            </summary>
            <value>
            The index of the shader stage.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.IsNULL">
            <summary>
            If is null shader
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.Name">
            <summary>
            Shader Name
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderBase.#ctor(System.String,HelixToolkit.SharpDX.Core.ShaderStage,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="isNull"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.ShaderType">
            <summary>
            Gets or sets the type of the shader.
            </summary>
            <value>
            The type of the shader.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.ByteCode">
            <summary>
            Gets or sets the byte code.
            </summary>
            <value>
            The byte code.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.ByteCodeName">
            <summary>
            Gets or sets the name of the byte code.
            </summary>
            <value>
            The name of the byte code.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.ConstantBufferMappings">
            <summary>
            Gets or sets the constant buffer mappings.
            </summary>
            <value>
            The constant buffer mappings.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.TextureMappings">
            <summary>
            Gets or sets the texture mappings.
            </summary>
            <value>
            The texture mappings.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.UAVMappings">
            <summary>
            Gets or sets the uav mappings.
            </summary>
            <value>
            The uav mappings.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.SamplerMappings">
            <summary>
            Gets or sets the sampler mappings.
            </summary>
            <value>
            The sampler mappings.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.ShaderReflector">
            <summary>
            Gets or sets the shader reflector.
            </summary>
            <value>
            The shader reflector.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.IsGSStreamOut">
            <summary>
            Gets or sets a value indicating whether this instance is gs stream out.
            </summary>
            <value>
              <c>true</c> if this instance is gs stream out; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.GSSOElement">
            <summary>
            Gets or sets the gs stream output element.
            </summary>
            <value>
            The gsso element.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.GSSOStrides">
            <summary>
            Gets or sets the gs stream output strides.
            </summary>
            <value>
            The gsso strides.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.GSSORasterized">
            <summary>
            Gets or sets the gs stream output rasterized stream index.
            </summary>
            <value>
            The gsso rasterized stream index.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.#ctor">
            <summary>
            Create a empty description
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.ShaderStage,System.Byte[])">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.ShaderStage,SharpDX.Direct3D.FeatureLevel,System.Byte[],HelixToolkit.SharpDX.Core.Shaders.ConstantBufferMapping[],HelixToolkit.SharpDX.Core.Shaders.TextureMapping[],HelixToolkit.SharpDX.Core.Shaders.SamplerMapping[])">
            <summary>
            Manually specifiy buffer mappings.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="featureLevel"></param>
            <param name="byteCode"></param>
            <param name="constantBuffers"></param>
            <param name="textures"></param>
            <param name="samplers"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.ShaderStage,HelixToolkit.SharpDX.Core.Shaders.IShaderReflector,System.Byte[])">
            <summary>
            Create shader using reflector to get buffer mapping directly from shader codes.
            <para>Actual creation happened when calling <see cref="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.CreateShader(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool,HelixToolkit.Logger.LogWrapper)"/></para>
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="reflector"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.ShaderStage,HelixToolkit.SharpDX.Core.Shaders.IShaderReflector,System.String,HelixToolkit.SharpDX.Core.Helper.IShaderByteCodeReader)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription"/> class. Pass <see cref="T:HelixToolkit.SharpDX.Core.Helper.IShaderByteCodeReader"/> to read external custom shader bytecodes.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="reflector">The reflector.</param>
            <param name="byteCodeName">Name of the byte code.</param>
            <param name="byteCodeReader">Used to read external custom shader byte codes</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.CreateShader(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool,HelixToolkit.Logger.LogWrapper)">
            <summary>
            Create Shader.
            <para>All constant buffers for all shaders are created here./></para>
            </summary>
            <param name="device"></param>
            <param name="pool"></param>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderDescription.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.ShaderPass">
            <summary>
            Shader Pass
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.Name">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.Name"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.IsNULL">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.BlendFactor">
            <summary>
            Gets or sets the blend factor.
            </summary>
            <value>
            The blend factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SampleMask">
            <summary>
            Gets or sets the sample mask.
            </summary>
            <value>
            The sample mask.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.StencilRef">
            <summary>
            Gets or sets the stencil reference.
            </summary>
            <value>
            The stencil reference.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.BlendState">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.BlendState"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.DepthStencilState">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.DepthStencilState"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.RasterState">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.RasterState"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.Layout">
            <summary>
            Gets or sets the input layout. This is customized layout used for this ShaderPass only.
            If this is not set, default is using <see cref="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Layout"/> from <see cref="P:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.InputLayoutDescription"/>
            </summary>
            <value>
            The input layout.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.Topology">
            <summary>
            Gets or sets the topology.
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription,SharpDX.Direct3D11.InputLayout,HelixToolkit.SharpDX.Core.IEffectsManager)">
            <summary>
            
            </summary>
            <param name="passDescription"></param>
            <param name="layout"></param>
            <param name="manager"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.ShaderPass"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.BindShader(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Bind shaders and its constant buffer for this technique
            </summary>
            <param name="context"></param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.ShaderStage)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.ShaderStage)"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.VertexShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.HullShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.DomainShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.GeometryShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.PixelShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.GetShader(HelixToolkit.SharpDX.Core.ComputeShaderType)">
            <summary>
            Gets the shader.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.ShaderBase)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>        
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.VertexShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.HullShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.DomainShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.GeometryShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.PixelShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetShader(HelixToolkit.SharpDX.Core.Shaders.ComputeShader)">
            <summary>
            Sets the shader.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.BindStates(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.StateType)">
            <summary>
            Binds the states.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetState(System.Nullable{SharpDX.Direct3D11.BlendStateDescription})">
            <summary>
            Sets the state.
            </summary>
            <param name="blendStateDesc">The blend state desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetState(System.Nullable{SharpDX.Direct3D11.DepthStencilStateDescription})">
            <summary>
            Sets the state.
            </summary>
            <param name="depthStencilStateDesc">The depth stencil state desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.ShaderPass.SetState(System.Nullable{SharpDX.Direct3D11.RasterizerStateDescription})">
            <summary>
            Sets the state.
            </summary>
            <param name="rasterizerStateDesc">The rasterizer state desc.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.IsNull">
            <summary>
            Gets a value indicating whether this Technique is null.
            </summary>
            <value>
              <c>true</c> if this Technique is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Layout">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Layout"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Device">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Device"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Name">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Name"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.ShaderPassNames">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.ShaderPassNames"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.ConstantBufferPool">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.ConstantBufferPool"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.EffectsManager">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderTechnique.EffectsManager"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.#ctor(HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription,SharpDX.Direct3D11.Device1,HelixToolkit.SharpDX.Core.IEffectsManager)">
            <summary>
            
            </summary>
            <param name="description"></param>
            <param name="device"></param>
            <param name="manager"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.GetPass(System.String)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.String)"/>
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.GetPass(System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.Int32)"/>
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.AddPass(HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription)">
            <summary>
            Adds the pass.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.RemovePass(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Item(System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.Int32)"/>
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.Technique.Item(System.String)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.String)"/>
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.Technique.OnDispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.Name">
            <summary>
            Technique Name
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.InputLayoutDescription">
            <summary>
            Input Layout
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.PassDescriptions">
            <summary>
            Gets or sets the pass descriptions.
            </summary>
            <value>
            The pass descriptions.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.IsNull">
            <summary>
            Gets or sets a value indicating whether this technique is null technique.
            </summary>
            <value>
              <c>true</c> if this instance is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="inputLayout">The input layout.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription.#ctor(System.String,HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription,System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="inputLayout">The input layout.</param>
            <param name="shaderPasses">The shader passes.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.Name">
            <summary>
            Pass Name
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.ShaderList">
            <summary>
            Shaders for this technique
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.BlendStateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.BlendStateDescSerialization">
            <summary>
            Only used for data serialization
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.BlendFactor">
            <summary>
            Gets or sets the color of the blend.
            </summary>
            <value>
            The color of the blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.SampleMask">
            <summary>
            Gets or sets the blend sample mask.
            </summary>
            <value>
            The sample mask.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.StencilRef">
            <summary>
            Gets or sets the stencil reference.
            </summary>
            <value>
            The stencil reference.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.Topology">
            <summary>
            Gets or sets the topology. This is optional. Used if topology is different from vertex buffer topology
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.DepthStencilStateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.DepthStencilStateDescSerialization">
            <summary>
            Only used for data serialization
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.RasterStateDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.RasterizerStateDescSerialization">
            <summary>
            Only used for data serialization
            </summary>
            <value>
            The rasterizer state data contract.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription.InputLayoutDescription">
            <summary>
            Input Layout
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.TextureDescription">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.TextureMapping">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Shaders.VertexShader">
            <summary>
            Vertex Shader
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.#ctor(SharpDX.Direct3D11.Device,System.String,System.Byte[])">
            <summary>
            Vertex Shader
            </summary>
            <param name="device"></param>
            <param name="name"></param>
            <param name="byteCode"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.VertexShader"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Bind(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Binds shader to pipeline
            </summary>
            <param name="context">The context.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindTexture(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Binds the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy}})">
            <summary>
            Binds the textures.
            </summary>
            <param name="context">The context.</param>
            <param name="textures">The textures.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindSampler(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.String,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy)">
            <summary>
            Binds the sampler.
            </summary>
            <param name="context">The context.</param>
            <param name="name">The name.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Shaders.VertexShader.BindSamplers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy}})">
            <summary>
            Binds the samplers.
            </summary>
            <param name="context">The context.</param>
            <param name="samplers">The samplers.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Helper.IShaderByteCodeReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Helper.HelixToolkitByteCodeReader">
            <summary>
            Used to read HelixToolkit internal default shader byte codes
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Helper.UWPShaderBytePool">
            <summary>
            Used to read shader bytecode
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BitmapExtensions.ToBillboardImage3D(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.TextInfoExt},HelixToolkit.SharpDX.Core.IEffectsManager,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a <see cref="T:HelixToolkit.SharpDX.Core.BillboardImage3D"/> from a list of <see cref="T:HelixToolkit.SharpDX.Core.TextInfoExt"/>
            <para>
            This is used to create a batched text billboard with a single merged texture. 
            And use <see cref="T:HelixToolkit.SharpDX.Core.BillboardImage3D"/> for rendering.
            </para>
            <para>This is designed to substitute <see cref="T:HelixToolkit.SharpDX.Core.BillboardSingleText3D"/> or <see cref="T:HelixToolkit.SharpDX.Core.BillboardText3D"/>
            when user needs to render many different texts with different text properties (such as font style, font size, etc) and languages
            </para>
            </summary>
            <param name="items">The items.</param>
            <param name="effectsManager">The effects manager.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="maxHeight">The maximum height.</param>
            <param name="squareImage">if set to <c>true</c> [square image].</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoundingBoxExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingBoxExtensions.FromPoints(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Froms the points.
            </summary>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingBoxExtensions.Transform(SharpDX.BoundingBox,SharpDX.Matrix)">
            <summary>
            Transform AABB with Affine Transformation matrix
            </summary>
            <param name="box"></param>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingFrustumExtensions.Intersects(SharpDX.BoundingFrustum@,SharpDX.BoundingBox@)">
            <summary>
            Intersectses the specified frustum. Simplified from https://github.com/sharpdx/SharpDX/blob/master/Source/SharpDX.Mathematics/BoundingFrustum.cs 
            </summary>
            <param name="frustum">The frustum.</param>
            <param name="box">The box.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingFrustumExtensions.IsInOrIntersectFrustum(SharpDX.BoundingFrustum@,SharpDX.BoundingBox@,SharpDX.BoundingSphere@)">
            <summary>
            Intersectses the specified frustum. Return false if either box or sphere is not intersect with the frustum, otherwise return true
            </summary>
            <param name="frustum">The frustum.</param>
            <param name="box">The box.</param>
            <param name="sphere">The sphere.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoundingSphereExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingSphereExtensions.FromPoints(System.Collections.Generic.IList{SharpDX.Vector3},System.Int32,System.Int32)">
            <summary>
            Froms the points.
            </summary>
            <param name="points">The points.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingSphereExtensions.FromPoints(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Froms the points.
            </summary>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundingSphereExtensions.TransformBoundingSphere(SharpDX.BoundingSphere,SharpDX.Matrix)">
            <summary>
            Transforms the bounding sphere.
            </summary>
            <param name="b">The b.</param>
            <param name="m">The m.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CollectionExtensions.GetInternalArray``1(System.Collections.Generic.List{``0})">
            <summary>
            Gets the internal array of a <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
            <param name="list">The respective list.</param>
            <returns>The internal array of the list.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.CollectionExtensions.Get``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Tries to get a value from a <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <typeparam name="K">The type of the key.</typeparam>
            <typeparam name="V">The type of the value.</typeparam>
            <param name="dict">The respective dictionary.</param>
            <param name="key">The respective key.</param>
            <returns>The value if exists, else <c>null</c>.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Color4Extensions">
            <summary>
            Ref https://referencesource.microsoft.com/#System.Drawing/commonui/System/Drawing/ColorConverter.cs
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Color4Extensions.#cctor">
            <summary>
            Initializes the <see cref="T:HelixToolkit.SharpDX.Core.Color4Extensions"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Color4Extensions.ToColor4(System.String,System.Globalization.CultureInfo)">
            <summary>
            Tries the prase.
            </summary>
            <param name="color">The color.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Color4Extensions.FromArgb(System.Int32)">
            <summary>
            Froms the ARGB int.
            </summary>
            <param name="argb">The ARGB.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Color4Extensions.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            Froms the RGB.
            </summary>
            <param name="r">The r.</param>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Color4Extensions.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Froms the ARGB.
            </summary>
            <param name="a">a.</param>
            <param name="r">The r.</param>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderMetricesExtensions.UnProject(HelixToolkit.SharpDX.Core.IRenderMatrices,SharpDX.Vector2,SharpDX.Ray@)">
            <summary>
            Un-project 2D screen point onto 3D space by camera.
            </summary>
            <param name="renderMatrices">The renderMatrices.</param>
            <param name="point2d">The point2d.</param>
            <param name="ray">The ray.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IViewportExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.ForceUpdateTransformsAndBounds(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Forces to update transform and bounds.
            </summary>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.FindHitsInFrustum(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Finds the hits in camera view frustum only.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="pos">The position.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.FindHits(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2)">
            <summary>
            Finds the hits for a given 2D viewport position.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <returns>
            List of hits, sorted with the nearest hit first.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.FindHits(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Finds the hits.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="position">The position.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.FindNearest(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,SharpDX.Vector3@,SharpDX.Vector3@,System.Object@)">
            <summary>
            Finds the nearest point and its normal.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="point">
            The point.
            </param>
            <param name="normal">
            The normal.
            </param>
            <param name="model">
            The model.
            </param>
            <returns>
            The find nearest.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.UnProject(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,SharpDX.Ray@)">
            <summary>
            Un-project 2D screen point onto 3D space by camera.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point2d">The point2d.</param>
            <param name="ray">The ray.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.UnProjectOnPlane(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3@)">
            <summary>
            Uns the project 2D point onto a 3D plane.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="p">The p.</param>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <param name="intersection">The intersection.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.UnProjectOnPlane(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector2,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Uns the project on plane.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="p">The p.</param>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.GetViewportMatrix(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Gets the viewport transform aka the screen-space transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>The transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.GetScreenViewProjectionMatrix(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Gets the total transform for a ViewportCore. 
            Old name of this function: GetTotalTransform
            New name of the function: GetScreenViewProjectionTransform
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total transform.</returns>       
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.Project(HelixToolkit.SharpDX.Core.IViewport3DX,SharpDX.Vector3)">
            <summary>
            Projects the specified 3D point to a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point">The 3D point.</param>
            <returns>The point.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.GetViewProjectionMatrix(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Gets the camera transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>
            The camera transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.GetProjectionMatrix(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Gets the projection matrix.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.Traverse(HelixToolkit.SharpDX.Core.IViewport3DX,System.Action{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Traverses the Visual3D/Element3D tree and invokes the specified action on each Element3D of the specified type.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.Traverse(HelixToolkit.SharpDX.Core.IViewport3DX,System.Func{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,System.Boolean})">
            <summary>
            Traverses the specified action.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="function">The function. Return true to continue traverse, otherwise stop at current node</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.FindBounds(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Finds the bounding box of the viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The bounding box.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewportExtensions.RenderToBitmapStream(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            Renders to bitmap stream.
            </summary>
            <param name="view">The view.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MatrixExtensions.PsudoInvert(SharpDX.Matrix@)">
            <summary>
            Pseudo inversion
            </summary>
            <param name="viewMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MatrixExtensions.PsudoInvert(SharpDX.Matrix)">
            <summary>
            Pseudo  inversion
            </summary>
            <param name="viewMatrix"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointerSizeHelpers">
            <summary>
            Helpers methods for <see cref="T:SharpDX.PointerSize"/>.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointerSizeHelpers.ToUInt64(SharpDX.PointerSize)">
            <summary>
            Converts a <see cref="T:SharpDX.PointerSize"/> to a 64-bit unsigned integer.
            </summary>
            <param name="ptr">The pointer to convert.</param>
            <returns>An <c>unsigned long</c>.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RayExtensions.PlaneIntersection(SharpDX.Ray,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3@)">
            <summary>
            Planes the intersection with a ray.
            </summary>
            <param name="ray">The ray.</param>
            <param name="position">The plane position.</param>
            <param name="normal">The plane normal.</param>
            <param name="intersection">The intersection point.</param>
            <returns>Return true if intersect, return false if ray is not intersect with the plane</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.SceneNodeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SceneNodeExtensions.GetSceneNodeByType``1(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Gets the type of the scene node from scene graph.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="root">The root.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SceneNodeExtensions.UpdateAllTransformMatrix(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Updates all transform matrix from the root node to the child.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorExtensions.AngleBetween(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Angles the between two vectors. Return Radians;
            </summary>
            <param name="vector1">The vector1.</param>
            <param name="vector2">The vector2.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorExtensions.FindAnyPerpendicular(SharpDX.Vector3)">
            <summary>
            Find a <see cref="T:SharpDX.Vector3"/> that is perpendicular to the given <see cref="T:SharpDX.Vector3"/>.
            </summary>
            <param name="n">
            The input vector.
            </param>
            <returns>
            A perpendicular vector.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorExtensions.IsUndefined(SharpDX.Vector3)">
            <summary>
            Determines whether the specified vector is undefined (NaN,NaN,NaN).
            </summary>
            <param name="v">The vector.</param>
            <returns>
            <c>true</c> if the specified vector is undefined; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmallerOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmaller(SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmaller(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of this are SmallerOrEqual the corresponding element of v.
            ATTENTION: For example (a.AllSmaller(b)) is not the same as !(a.AllGreaterOrEqual(b)) but !(a.AnyGreaterOrEqual(b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllSmaller(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AnySmallerOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether AT LEAST ONE element of a is SmallerOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AnySmallerOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether AT LEAST ONE element of v is SmallerOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllGreaterOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether ALL elements of a are GreaterOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AllGreaterOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether ALL elements of v are GreaterOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AnyGreaterOrEqual(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Returns whether AT LEAST ONE element of a is GreaterOrEqual the corresponding element of b.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.AnyGreaterOrEqual(SharpDX.Vector3,System.Single)">
            <summary>
            Returns whether AT LEAST ONE element of v is GreaterOrEqual s.
            ATTENTION: For example (AllSmaller(a,b)) is not the same as !(AllGreaterOrEqual(a,b)) but !(AnyGreaterOrEqual(a,b)).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ComponentMin(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Component-wise min vec
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ComponentMax(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Component-wise max vec
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToVector2(SharpDX.Size2F)">
            <summary>
            To the vector2.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToVector2(SharpDX.Size2)">
            <summary>
            To the vector2.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToSize2F(SharpDX.Vector2)">
            <summary>
            To the size2 f.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToSize2(SharpDX.Vector2)">
            <summary>
            To the size2.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToRectangleF(SharpDX.Vector2)">
            <summary>
            To the rectangle f.
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToRectangle(SharpDX.Vector2)">
            <summary>
            To the rectangle.
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToVector2(SharpDX.RectangleF)">
            <summary>
            To the rectangle f.
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToRectangle(SharpDX.Rectangle)">
            <summary>
            To the rectangle.
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToSizeF(SharpDX.Size2)">
            <summary>
            To the size f.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.ToSize2(SharpDX.Size2F)">
            <summary>
            To the size2.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.PointToPlanePosition(SharpDX.Vector3,SharpDX.Plane@)">
            <summary>
            Point to plane position. Front/Back/Intersecting.
            </summary>
            <param name="point">The point.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.VectorComparisonExtensions.PointToPlanePosition(SharpDX.Vector3,SharpDX.Plane)">
            <summary>
            Point to plane position. Front/Back/Intersecting.
            </summary>
            <param name="point">The point.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.RenderType">
            <summary>
            Used for render ordering. Order is the same as render type defined.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MSAALevel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.FXAALevel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.LightType">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointFigure">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshTopologyEnum">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderStage">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StateType">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.OITWeightMode">
            <summary>
            OIT weight mode.
            <para>Please refer to http://jcgt.org/published/0002/02/09/ </para>
            <para>Linear0: eq7; Linear1: eq8; Linear2: eq9; NonLinear: eq10</para>
            </summary>
            <value>
            The oit weight mode.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.EnumHelper">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.CuttingOperation">
            <summary>
            Defines the cutting operation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CuttingOperation.Intersect">
            <summary>
            The intersect operation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CuttingOperation.Subtract">
            <summary>
            The subtract operation.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.OutlineMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Axis">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.GridPattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Texture2DArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Texture2DArgs.Texture">
            <summary>
            The texture
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Texture2DArgs.#ctor(HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Texture2DArgs"/> class.
            </summary>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Texture2DArgs.op_Implicit(HelixToolkit.SharpDX.Core.Texture2DArgs)~HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Texture2DArgs"/> to <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/>.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.OctreeArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.OctreeArgs.Octree">
            <summary>
            The octree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OctreeArgs.#ctor(HelixToolkit.SharpDX.Core.IOctreeBasic)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.OctreeArgs"/> class.
            </summary>
            <param name="octree">The octree.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.TransformArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.TransformArgs.Transform">
            <summary>
            The transform
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TransformArgs.#ctor(SharpDX.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TransformArgs"/> class.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TransformArgs.#ctor(SharpDX.Matrix@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TransformArgs"/> class.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TransformArgs.op_Implicit(HelixToolkit.SharpDX.Core.TransformArgs)~SharpDX.Matrix">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.TransformArgs"/> to <see cref="T:SharpDX.Matrix"/>.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Transform2DArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Transform2DArgs.Transform">
            <summary>
            The transform
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Transform2DArgs.#ctor(SharpDX.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Transform2DArgs"/> class.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Transform2DArgs.#ctor(SharpDX.Matrix3x2@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Transform2DArgs"/> class.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Transform2DArgs.op_Implicit(HelixToolkit.SharpDX.Core.Transform2DArgs)~SharpDX.Matrix3x2">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Transform2DArgs"/> to <see cref="T:SharpDX.Matrix3x2"/>.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoolArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoolArgs.TrueArgs">
            <summary>
            The true arguments
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoolArgs.FalseArgs">
            <summary>
            The false arguments
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoolArgs.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoolArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BoolArgs"/> class.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StringArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StringArgs.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StringArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.StringArgs"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Animations.AnimationRepeatMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater.Speed">
            <summary>
            Playback speed. Default is 1x.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater.RepeatMode">
            <summary>
            Gets or sets the repeat mode.
            </summary>
            <value>
            The repeat mode.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater.Update(System.Int64,System.Int64)">
            <summary>
            Updates the animation with current time stamp.
            </summary>
            <param name="timeStamp">The time stamp.</param>
            <param name="frequency">The frequency.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.IAnimationUpdater.Reset">
            <summary>
            Resets this animation.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Animations.IAnimationNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IAnimationNode.IsAnimationNode">
            <summary>
            Gets or sets a value indicating whether this scene node is animation node.
            </summary>
            <value>
              <c>true</c> if this scene node is animation node; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IAnimationNode.IsAnimationNodeRoot">
            <summary>
            Gets a value indicating whether this scene node is animation node root.
            </summary>
            <value>
              <c>true</c> if this scene node is animation node root; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IBoneMatricesNode.Bones">
            <summary>
            Gets or sets the bones.
            </summary>
            <value>
            The bones.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IBoneMatricesNode.MorphTargetWeights">
            <summary>
            Gets or sets the morph target weights.
            </summary>
            <value>
            The morph target weights.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IBoneMatricesNode.IsRenderable">
            <summary>
            Gets a value indicating whether this instance is renderable.
            </summary>
            <value>
              <c>true</c> if this instance is renderable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IBoneMatricesNode.TotalModelMatrix">
            <summary>
            Gets the total model matrix.
            </summary>
            <value>
            The total model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.IBoneMatricesNode.HasBoneGroup">
            <summary>
            Gets a value indicating whether this instance has bone group.
            </summary>
            <value>
              <c>true</c> if this instance has bone group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Animations.Animation">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.GUID">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.AnimationType">
            <summary>
            Gets or sets the type of the animation.
            </summary>
            <value>
            The type of the animation.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.Keyframes">
            <summary>
            Gets or sets the keyframes.
            </summary>
            <value>
            The keyframes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.NodeAnimationCollection">
            <summary>
            Gets or sets the node animation collection.
            </summary>
            <value>
            The node animation collection.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.MorphTargetKeyframes">
            <summary>
            Gets or sets the morph target keyframes. 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.BoneSkinMeshes">
            <summary>
            Gets or sets the bone skin meshes.
            </summary>
            <value>
            The bone skin meshes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.HasBoneSkinMeshes">
            <summary>
            Gets a value indicating whether this animation has bone skin meshes.
            </summary>
            <value>
              <c>true</c> if this animation has bone skin meshes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Animations.Animation.RootNode">
            <summary>
            Gets or sets the root node of this animation
            </summary>
            <value>
            The root node.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.Animation.#ctor(HelixToolkit.SharpDX.Core.Animations.AnimationType)">
            <summary>
            Initializes a new animation of the <see cref="T:HelixToolkit.SharpDX.Core.Animations.Animation"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Animations.KeyFrameUpdater">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.KeyFrameUpdater.#ctor(HelixToolkit.SharpDX.Core.Animations.Animation,System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Animations.Bone})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Animations.KeyFrameUpdater"/> class.
            </summary>
            <param name="animation">The animation.</param>
            <param name="bones">The bones.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.KeyFrameUpdater.Update(System.Int64,System.Int64)">
            <summary>
            Updates the animation by specified time stamp (ticks) and frequency (ticks per second).
            </summary>
            <param name="timeStamp">The time stamp (ticks).</param>
            <param name="frequency">The frequency (ticks per second).</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.NodeAnimationUpdater.OnGetNewBoneMatrices(System.Int32)">
            <summary>
            Called when [get new bone matrices]. Override this to provide your own matices pool to avoid small object creation
            </summary>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Animations.NodeAnimationUpdater.OnReturnOldBoneMatrices(SharpDX.Matrix[])">
            <summary>
            Called when [return old bone matrices]. Override this to return the old matrix array back to your own matices pool. <see cref="M:HelixToolkit.SharpDX.Core.Animations.NodeAnimationUpdater.OnGetNewBoneMatrices(System.Int32)"/>
            </summary>
            <param name="m">The m.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ICamera">
            <summary>
            Camera interface
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ICamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ICamera.LookDirection">
            <summary>
            Gets or sets the look direction.
            </summary>
            <value>
            The look direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ICamera.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ICamera.CreateLeftHandSystem">
            <summary>
            Gets or sets a value indicating whether [create left hand system].
            </summary>
            <value>
              <c>true</c> if [create left hand system]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ICamera.CreateViewMatrix">
            <summary>
            Creates the view matrix.
            </summary>
            <returns>A <see cref="T:SharpDX.Matrix" />.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ICamera.CreateProjectionMatrix(System.Single)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>A <see cref="T:SharpDX.Matrix" />.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ICamera.CreateProjectionMatrix(System.Single,System.Single,System.Single)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">The aspect ratio.</param>
            <param name="nearPlane">The near plane.</param>
            <param name="farPlane">The far plane.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IDevice2DResources">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice2DResources.Factory2D">
            <summary>
            Gets the factory2 d.
            </summary>
            <value>
            The factory2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice2DResources.Device2D">
            <summary>
            Gets the device2d.
            </summary>
            <value>
            The device2d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice2DResources.DeviceContext2D">
            <summary>
            Gets the device context2d.
            </summary>
            <value>
            The device context2d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice2DResources.WICImgFactory">
            <summary>
            Gets the wic img factory.
            </summary>
            <value>
            The wic img factory.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice2DResources.DirectWriteFactory">
            <summary>
            Gets the direct write factory.
            </summary>
            <value>
            The direct write factory.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IDevice3DResources">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.AdapterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.DriverType">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.StateManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.GeometryBufferManager">
            <summary>
            Gets the geometry buffer manager.
            </summary>
            <value>
            The geometry buffer manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.MaterialTextureManager">
            <summary>
            Gets the material texture manager.
            </summary>
            <value>
            The material texture manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.MaterialVariableManager">
            <summary>
            Gets the material variable manager.
            </summary>
            <value>
            The material variable manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.ConstantBufferPool">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDevice3DResources.DeviceContextPool">
            <summary>
            Gets the device context pool.
            </summary>
            <value>
            The device context pool.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IDeviceResources">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IDeviceResources.DisposingResources">
            <summary>
            Occurs when [on dispose resources].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IDeviceResources.Reinitialized">
            <summary>
            Occurs when [device created].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IEffectsManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IEffectsManager.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IEffectsManager.ShaderManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IEffectsManager.RenderTechniques">
            <summary>
            Get list of existing technique names
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.GetTechnique(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IEffectsManager.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.Reinitialize">
            <summary>
            Reinitializes all resources after calling <see cref="M:HelixToolkit.SharpDX.Core.IEffectsManager.DisposeAllResources"/>.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.DisposeAllResources">
            <summary>
            Disposes all resources. This is used to handle such as DeviceLost or DeviceRemoved Error
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.AddTechnique(HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription)">
            <summary>
            Add a technique by description
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.RemoveTechnique(System.String)">
            <summary>
            Remove a technique by its name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.RemoveAllTechniques">
            <summary>
            Removes all techniques.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.HasTechnique(System.String)">
            <summary>
            Determines whether the specified name has technique.
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if the specified name has technique; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IEffectsManager.InvalidateRender">
            <summary>
            Occurs when [on invalidate renderer].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.RaiseInvalidateRender">
            <summary>
            Invalidates the renderer.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IEffectsManager.GetResourceCountSummary">
            <summary>
            Outputs the resource count summary.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IGeometryBufferManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IGeometryBufferManager.Register``1(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Registers the specified model unique identifier.
            </summary>
            <typeparam name="T">Geometry Buffer Type</typeparam>
            <param name="modelGuid">The model unique identifier.</param>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IAttachableBufferModel.Topology">
            <summary>
            Gets or sets the topology.
            </summary>
            <value>
            The topology.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IAttachableBufferModel.VertexBuffer">
            <summary>
            Gets the vertex buffer.
            </summary>
            <value>
            The vertex buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IAttachableBufferModel.VertexStructSize">
            <summary>
            Gets the size of the vertex structure.
            </summary>
            <value>
            The size of the vertex structure.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IAttachableBufferModel.IndexBuffer">
            <summary>
            Gets the index buffer.
            </summary>
            <value>
            The index buffer.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IAttachableBufferModel.AttachBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer slot. It will be changed to next available slot after binding.</param>
            <param name="deviceResources"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IAttachableBufferModel.UpdateBuffers(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Updates the buffers.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceResources">The device resources.</param>
            <returns>True if buffer updated.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IGeometryBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IGeometryBufferModel.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IGeometryBufferModel.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IBillboardBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardBufferModel.TextureView">
            <summary>
            Gets the texture view.
            </summary>
            <value>
            The texture view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardBufferModel.Type">
            <summary>
            Gets the billboard type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IBoneSkinMeshBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IBoneSkinPreComputehBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IBoneSkinPreComputehBufferModel.BindSkinnedVertexBufferToOutput(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Binds the skinned vertex buffer to output.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IBoneSkinPreComputehBufferModel.UnBindSkinnedVertexBufferToOutput(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Uns the bind skinned vertex buffer to output.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IBoneSkinPreComputehBufferModel.ResetSkinnedVertexBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Resets the skinned vertex buffer.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IBoneSkinPreComputehBufferModel.CopySkinnedToArray(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,SharpDX.Vector3[])">
            <summary>
            Copies the skinned to array.
            </summary>
            <param name="context">The context.</param>
            <param name="array">The array.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IElementsBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IElementsBufferModel.ElementChanged">
            <summary>
            Occurs when [on element changed].
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IElementsBufferModel.HasElements">
            <summary>
            Gets a value indicating whether this instance has elements.
            </summary>
            <value>
              <c>true</c> if this instance has elements; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IElementsBufferModel.ElementCount">
            <summary>
            Gets the element count.
            </summary>
            <value>
            The element count.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IElementsBufferModel.DisposeAndClear">
            <summary>
            Disposes internal buffer and reuse the object
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IElementsBufferModel`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IElementsBufferModel`1.Elements">
            <summary>
            Gets or sets the elements.
            </summary>
            <value>
            The elements.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ILight3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ILight3D.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IMaterial">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IMaterialVariablePool">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IModelContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IModelContainer.Renderables">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IModelContainer.AttachViewport3DX(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            
            </summary>
            <param name="viewport"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IModelContainer.DettachViewport3DX(HelixToolkit.SharpDX.Core.IViewport3DX)">
            <summary>
            
            </summary>
            <param name="viewport"></param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IModelContainer.CurrentRenderHost">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IBillboardText">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.Texture">
            <summary>
            Gets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IBillboardText.DrawTexture(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Draws the texture.
            </summary>
            <param name="devices">The devices.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.BillboardVertices">
            <summary>
            Gets the billboard vertices.
            </summary>
            <value>
            The billboard vertices.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBillboardText.IsInitialized">
            <summary>
            Gets a value indicating whether this billboard internal is initialized.
            </summary>
            <value>
              <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardType">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardHorizontalAlignment">
            <summary>
            Shows billboard horizontally relative to the origin.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardVerticalAlignment">
            <summary>
            Shows billboard vertically relative to the origin.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.BufferSize">
            <summary>
            Gets the size of the buffer.
            </summary>
            <value>
            The size of the buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.Lights">
            <summary>
            Gets the light array
            </summary>
            <value>
            The lights.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.AmbientLight">
            <summary>
            Gets or sets the ambient light.
            </summary>
            <value>
            The ambient light.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.LightCount">
            <summary>
            Gets the light count.
            </summary>
            <value>
            The light count.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.ResetLightCount">
            <summary>
            Resets the light count. Must call before calling light render
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.IncrementLightCount">
            <summary>
            Increments the light count. Increment during each light render (except Ambient light).
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ILightsBufferProxy`1.UploadToBuffer(HelixToolkit.SharpDX.Core.Utilities.IBufferProxy,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Upload light models to constant buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IGUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IGUID.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IAttachable">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IAttachable.IsAttached">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IAttachable.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IAttachable.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IResourceSharing">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IResourceSharing.Attach(System.Guid)">
            <summary>
            Attaches the specified model unique identifier.
            </summary>
            <param name="modelGuid">The model unique identifier.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IResourceSharing.Detach(System.Guid)">
            <summary>
            Detaches the specified model unique identifier.
            </summary>
            <param name="modelGuid">The model unique identifier.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IHitable">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IHitable.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
             <param name="hitContext">Contains all the hit test variables.</param>
             <param name="hits"></param>
             <returns>Return all hitted details with distance from nearest to farest.</returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IHitable.IsHitTestVisible">
            <summary>
            Indicates, if this element should be hit-tested.        
            default is true
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IHitable.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable].
            Set to true if you want object to be hit tested even it is not rendering.
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoundChangeArgs`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BoundChangeArgs`1.NewBound">
            <summary>
            Gets or sets the new bound.
            </summary>
            <value>
            The new bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BoundChangeArgs`1.OldBound">
            <summary>
            Gets or sets the old bound.
            </summary>
            <value>
            The old bound.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoundChangeArgs`1.#ctor(`0@,`0@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BoundChangeArgs`1"/> class.
            </summary>
            <param name="newBound">The new bound.</param>
            <param name="oldBound">The old bound.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IBoundable">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.HasBound">
            <summary>
            Gets or sets a value indicating whether [bound enabled].
            </summary>
            <value>
              <c>true</c> if [bound enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBounds">
            <summary>
            Gets the original bound from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound"/>
            </summary>
            <value>
            The original bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBoundsSphere">
            <summary>
            Gets the original bound sphere from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere"/> 
            </summary>
            <value>
            The original bound sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.Bounds">
            <summary>
            Gets the bounds. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBounds"/>. If have instances, the bound will enclose all instances.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsWithTransform">
            <summary>
            Gets the bounds with transform. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.Bounds"/>. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.Bounds"/>
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsSphere">
            <summary>
            Gets or sets the bounds sphere. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBoundsSphere"/>. If have instances, the bound sphere will enclose all instances.
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsSphereWithTransform">
            <summary>
            Gets or sets the bounds sphere with transform. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsSphere"/>
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IBoundable.BoundChanged">
            <summary>
            Occurs when [on bound changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IBoundable.TransformBoundChanged">
            <summary>
            Occurs when [on transform bound changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IBoundable.BoundSphereChanged">
            <summary>
            Occurs when [on bound sphere changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IBoundable.TransformBoundSphereChanged">
            <summary>
            Occurs when [on transform bound sphere changed].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IInstancing.InstanceBuffer">
            <summary>
            Gets the instance buffer.
            </summary>
            <value>
            The instance buffer.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IOctreeManager">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IOctreeManager.OnOctreeCreated">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeManager.Octree">
            <summary>
            Gets the octree.
            </summary>
            <value>
            The octree.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeManager.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.IOctreeManager"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeManager.RequestUpdateOctree">
            <summary>
            Gets a value indicating whether [request update octree].
            </summary>
            <value>
              <c>true</c> if [request update octree]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeManager.Parameter">
            <summary>
            Gets or sets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.AddPendingItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Adds the pending item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.ProcessPendingItems">
            <summary>
            Processes the pending items.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.RebuildTree(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Rebuilds the tree.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.RemoveItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Removes the item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.RequestRebuild">
            <summary>
            Requests the rebuild.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeManager.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Normal hit test from top to bottom
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.IShaderPoolManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IShaderPoolManager.RegisterShader(HelixToolkit.SharpDX.Core.Shaders.ShaderDescription)">
            <summary>
            Registers the shader. Shader object live time is managed by ShaderPoolManager. Shader should not be disposed manually.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IShaderPoolManager.RegisterInputLayout(HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription)">
            <summary>
            Registers the input layout. Input layout object live time is managed by ShaderPoolManager. Input layout should not be disposed manually
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.BlendStatePool">
            <summary>
            Gets the blend state pool.
            </summary>
            <value>
            The blend state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.RasterStatePool">
            <summary>
            Gets the raster state pool.
            </summary>
            <value>
            The raster state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.DepthStencilStatePool">
            <summary>
            Gets the depth stencil state pool.
            </summary>
            <value>
            The depth stencil state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.SamplerStatePool">
            <summary>
            Gets the sampler state pool.
            </summary>
            <value>
            The sampler state pool.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.Register(SharpDX.Direct3D11.BlendStateDescription)">
            <summary>
            Registers the specified desc. This function increments state proxy internal reference counter. Must be disposed if not used.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.Register(SharpDX.Direct3D11.RasterizerStateDescription)">
            <summary>
            Registers the specified desc. This function increments state proxy internal reference counter. Must be disposed if not used.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.Register(SharpDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
            Registers the specified desc. This function increments state proxy internal reference counter. Must be disposed if not used.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IStatePoolManager.Register(SharpDX.Direct3D11.SamplerStateDescription)">
            <summary>
            Registers the specified desc. This function increments state proxy internal reference counter. Must be disposed if not used.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.IBufferPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IBufferPool.Register``1(System.Guid,SharpDX.Direct3D11.BufferDescription,System.Collections.Generic.IList{``0})">
            <summary>
            Register a buffer with object as its key
            </summary>
            <param name="guid"></param>
            <param name="description"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool">
            <summary>
            Pool to store and share constant buffers. Do not dispose constant buffer object externally.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool.Device">
            <summary>
            Gets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool.Register(HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription)">
            <summary>
            Registers the specified description.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool.Register(System.String,System.Int32)">
            <summary>
            Registers the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="structSize">Size of the structure.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool">
            <summary>
            Pool to store and share constant buffers. Do not dispose constant buffer object externally.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool.#ctor(SharpDX.Direct3D11.Device,HelixToolkit.Logger.LogWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="logger"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool.Create(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool.GetKey(HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ConstantBufferPool.Register(System.String,System.Int32)">
            <summary>
            Registers the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="structSize">Size of the structure.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3">
            <summary>
            Use to store state resources for dynamic creation/destory. Each register will increase the reference counter/>
            <para>User must call Dispose() to dispose the resources if not used.</para>
            </summary>
            <typeparam name="TKEY"></typeparam>
            <typeparam name="TVALUE"></typeparam>
            <typeparam name="TDescription"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.Device">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.Register(`2)">
            <summary>
            Each register will increase the reference counter
            Calling owner is responsible for dispose the obtained resource. Resource will be disposed automatically once reference counter = 0.
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.GetKey(`2@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.Create(SharpDX.Direct3D11.Device,`2@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolBase`3.CreateProxy(`1)">
            <summary>
            Creates the proxy.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3">
            <summary>
            Use to store resources which have long life time with limited numbers such as Constant buffers, Shaders, etc. 
            <para>Do not dispose the resource externally.</para>
            Resource life time is the same as the pool's life time. 
            <para>Do not use for dynamic allocated resources.</para>
            </summary>
            <typeparam name="TKEY"></typeparam>
            <typeparam name="TVALUE"></typeparam>
            <typeparam name="TDescription"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.Device">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.#ctor(SharpDX.Direct3D11.Device,HelixToolkit.Logger.LogWrapper)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="logger"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.Register(`2)">
            <summary>
            
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.Destory(`2)">
            <summary>
            Destory the value by its description.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.GetKey(`2@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LongLivedResourcePoolBase`3.Create(SharpDX.Direct3D11.Device,`2@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool">
            <summary>
            Pool to store and share shaders. Do not dispose shader object externally.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool.ConstantBufferPool">
            <summary>
            Gets or sets the constant buffer pool.
            </summary>
            <value>
            The constant buffer pool.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool.#ctor(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool,HelixToolkit.Logger.LogWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="cbPool">The cb pool.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool.GetKey(HelixToolkit.SharpDX.Core.Shaders.ShaderDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPool.Create(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.Shaders.ShaderDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.LayoutPool">
            <summary>
            Pool to store and share shader layouts. Do not dispose layout object externally.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LayoutPool.#ctor(SharpDX.Direct3D11.Device,HelixToolkit.Logger.LogWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.LayoutPool"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="logger"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LayoutPool.Create(SharpDX.Direct3D11.Device,System.Collections.Generic.KeyValuePair{System.Byte[],SharpDX.Direct3D11.InputElement[]}@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.LayoutPool.GetKey(System.Collections.Generic.KeyValuePair{System.Byte[],SharpDX.Direct3D11.InputElement[]}@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager.#ctor(SharpDX.Direct3D11.Device,HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool,HelixToolkit.Logger.LogWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="cbPool">The cb pool.</param>
            <param name="logger"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager.RegisterShader(HelixToolkit.SharpDX.Core.Shaders.ShaderDescription)">
            <summary>
            Registers the shader.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager.RegisterInputLayout(HelixToolkit.SharpDX.Core.Shaders.InputLayoutDescription)">
            <summary>
            Registers the input layout.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.ShaderPoolManager.OnDispose(System.Boolean)">
            <summary>
            Called when [dispose].
            </summary>
            <param name="disposeManagedResources">if set to <c>true</c> [dispose managed resources].</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.BlendStatePool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.BlendStatePool.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.BlendStatePool"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.BlendStatePool.Create(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BlendStateDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.BlendStatePool.GetKey(SharpDX.Direct3D11.BlendStateDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.DepthStencilStatePool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.DepthStencilStatePool.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.DepthStencilStatePool"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.DepthStencilStatePool.Create(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.DepthStencilStatePool.GetKey(SharpDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.RasterStatePool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.RasterStatePool.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.RasterStatePool"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.RasterStatePool.Create(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.RasterizerStateDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.RasterStatePool.GetKey(SharpDX.Direct3D11.RasterizerStateDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.SamplerStatePool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.SamplerStatePool.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.SamplerStatePool"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.SamplerStatePool.Create(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.SamplerStatePool.GetKey(SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>
            Gets the key.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.BlendStatePool">
            <summary>
            Gets or sets the blend state pool.
            </summary>
            <value>
            The blend state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.RasterStatePool">
            <summary>
            Gets or sets the raster state pool.
            </summary>
            <value>
            The raster state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.DepthStencilStatePool">
            <summary>
            Gets or sets the depth stencil state pool.
            </summary>
            <value>
            The depth stencil state pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.SamplerStatePool">
            <summary>
            Gets or sets the sampler state pool.
            </summary>
            <value>
            The sampler state pool.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.Register(SharpDX.Direct3D11.BlendStateDescription)">
            <summary>
            Registers the specified desc.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.Register(SharpDX.Direct3D11.RasterizerStateDescription)">
            <summary>
            Registers the specified desc.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.Register(SharpDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
            Registers the specified desc.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderManager.StatePoolManager.Register(SharpDX.Direct3D11.SamplerStateDescription)">
            <summary>
            Registers the specified desc.
            </summary>
            <param name="desc">The desc.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.IRandomSeed">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IRandomSeed.Seed">
            <summary>
            Gets the seed.
            </summary>
            <value>
            The seed.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.IRandomVector">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IRandomVector.RandomVector3">
            <summary>
            Gets the random vector3.
            </summary>
            <value>
            The random vector3.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Bitmap">
            <summary>
            Gets the bitmap.
            </summary>
            <value>
            The bitmap.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Size">
            <summary>
            Gets the bitmap size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.#ctor(System.String,SharpDX.Direct2D1.DeviceContext,SharpDX.Size2,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="context">The context.</param>
            <param name="size">The size.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.#ctor(System.String,SharpDX.Direct2D1.DeviceContext,SharpDX.DXGI.Surface,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="context">The context.</param>
            <param name="surface">The surface.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.CreateDescription(System.Single,System.Single,SharpDX.DXGI.Format,SharpDX.Direct2D1.AlphaMode,SharpDX.Direct2D1.BitmapOptions,SharpDX.Direct2D1.ColorContext)">
            <summary>
            Creates the description.
            </summary>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
            <param name="format">The format.</param>
            <param name="alphaMode">The alpha mode.</param>
            <param name="options">The options.</param>
            <param name="colorContext">The color context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.NewDescription(System.Single,System.Single,SharpDX.Direct2D1.PixelFormat,SharpDX.Direct2D1.BitmapOptions,SharpDX.Direct2D1.ColorContext)">
            <summary>
            News the description.
            </summary>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
            <param name="format">The format.</param>
            <param name="bitmapOptions">The bitmap options.</param>
            <param name="colorContext">The color context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Create(System.String,SharpDX.Direct2D1.DeviceContext,SharpDX.DXGI.Surface)">
            <summary>
            Creates by surface
            </summary>
            <param name="name">The name.</param>
            <param name="context">The context.</param>
            <param name="surface">The surface.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.Create(System.String,SharpDX.Direct2D1.DeviceContext,SharpDX.Size2,SharpDX.DXGI.Format)">
            <summary>
            Creates by size and format
            </summary>
            <param name="name">The name.</param>
            <param name="context">The context.</param>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.BitmapProxy)~SharpDX.Direct2D1.Bitmap1">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Utilities.BitmapProxy"/> to <see cref="T:SharpDX.Direct2D1.Bitmap1"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.Buffer">
            <summary>
            Raw Buffer
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.StructureSize">
            <summary>
            Element Size
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.ElementCount">
            <summary>
            Element count
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.Offset">
            <summary>
            Buffer offset in bytes
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.BindFlags">
            <summary>
            Buffer binding flag
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.buffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.StructureSize">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.StructureSize"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.ElementCount">
            <summary>
             <see cref="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.ElementCount"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.Offset">
            <summary>
            Buffer data offset in bytes.
            <see cref="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.Offset"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.Buffer">
            <summary>
             <see cref="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.Buffer"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.BindFlags">
            <summary>
             <see cref="P:HelixToolkit.SharpDX.Core.Utilities.IBufferProxy.BindFlags"/> 
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.BufferProxyBase.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags)">
            <summary>
            
            </summary>
            <param name="structureSize"></param>
            <param name="bindFlags"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.Initialized">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.#ctor(System.String,System.Int32,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,SharpDX.Direct3D11.ResourceUsage,System.Int32)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="structSize"></param>
             <param name="bindFlags"></param>
             <param name="cpuAccessFlags"></param>
             <param name="optionFlags"></param>
             <param name="usage"></param>
             <param name="strideSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.#ctor(HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription)">
             <summary>
            
             </summary>
             <param name="description"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.CreateBuffer(SharpDX.Direct3D11.Device)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.CreateBuffer(SharpDX.Direct3D11.Device)"/>
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@,System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@,System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="offset"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0[],System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0[],System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0[],System.Int32,System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0[],System.Int32,System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count"></param>
            <param name="offset"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Action{SharpDX.DataStream})">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.UploadDataToBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Action{SharpDX.DataStream})"/>
            </summary>
            <param name="context"></param>
            <param name="writeFuc"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.ResizeBuffer(SharpDX.Direct3D11.Device,System.Int32)">
            <summary>
            Special function to recreate existing constant buffer to new size.
            </summary>
            <param name="device"></param>
            <param name="structSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy)~SharpDX.Direct3D11.Buffer">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy"/> to <see cref="T:SharpDX.Direct3D11.Buffer"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.Item(System.String)">
            <summary>
            Gets the <see cref="T:HelixToolkit.SharpDX.Core.Shaders.ConstantBufferVariable"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:HelixToolkit.SharpDX.Core.Shaders.ConstantBufferVariable"/>.
            </value>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ConstantBufferProxy.TryGetVariableByName(System.String,HelixToolkit.SharpDX.Core.Shaders.ConstantBufferVariable@)">
            <summary>
            Tries the name of the get variable by.
            </summary>
            <param name="name">The name.</param>
            <param name="variable">The variable.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="context"></param>
             <param name="data"></param>
             <param name="count"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="context"></param>
             <param name="data"></param>
             <param name="count"></param>
             <param name="offset"></param>
             <param name="minBufferCount">Used to initialize a buffer which size is Max(count, minBufferCount). Only used in dynamic buffer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Uploads the data to buffer using data pointer.
            </summary>
            <param name="context">The context.</param>
            <param name="data">The data.</param>
            <param name="countByBytes">The count by bytes.</param>
            <param name="offsetByBytes">The offset by bytes.</param>
            <param name="minBufferCountByBytes">The minimum buffer count by bytes.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.CreateBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32)">
            <summary>
            Creates the buffer with size = count * structure size;
            </summary>
            <param name="context">The context.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.DisposeAndClear">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DisposeObject.DisposeAndClear"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.OptionFlags">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.ResourceOptionFlags,SharpDX.Direct3D11.ResourceUsage)">
             <summary>
            
             </summary>
             <param name="structureSize"></param>
             <param name="bindFlags"></param>
             <param name="optionFlags"></param>
             <param name="usage"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy"/> class.
            </summary>
            <param name="structureSize">Size of the structure.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="cpuAccess">The cpu access.</param>
            <param name="optionFlags">The option flags.</param>
            <param name="usage">The usage.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="minBufferCount">This is not being used in ImmutableBuffer</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.UploadDataToBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Uploads the data to buffer using data pointer.
            </summary>
            <param name="context">The context.</param>
            <param name="data">The data pointer.</param>
            <param name="countByBytes">The count by bytes.</param>
            <param name="offsetByBytes">The offset by bytes.</param>
            <param name="minBufferCountByBytes">The minimum buffer count by bytes.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImmutableBufferProxy.CreateBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32)">
            <summary>
            Creates the buffer with size of count * structure size.
            </summary>
            <param name="context">The context.</param>
            <param name="count">The element count.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.OptionFlags">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.Capacity">
            <summary>
            Gets the capacity in bytes.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.CapacityUsed">
            <summary>
            Gets the capacity used in bytes.
            </summary>
            <value>
            The capacity used.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Boolean)">
             <summary>
            
             </summary>
             <param name="structureSize"></param>
             <param name="bindFlags"></param>
             <param name="optionFlags"></param>
             <param name="lazyResize">If existing data size is smaller than buffer size, reuse existing. Otherwise create a new buffer with exact same size</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags,System.Boolean,SharpDX.Direct3D11.ResourceOptionFlags,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy"/> class.
            </summary>
            <param name="structureSize">Size of the structure.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="optionFlags">The option flags.</param>
            <param name="lazyResize">if set to <c>true</c> [lazy resize].</param>
            <param name="canOverWrite">if set to <c>true</c> [can over write].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.#ctor(System.Int32,SharpDX.Direct3D11.BindFlags,System.Boolean,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy"/> class.
            </summary>
            <param name="structureSize">Size of the structure.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="canOverWrite">if set to <c>true</c> [can over write].</param>
            <param name="cpuAccess">The cpu access.</param>
            <param name="optionFlags">The option flags.</param>
            <param name="lazyResize">if set to <c>true</c> [lazy resize].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Utilities.IElementsBufferProxy.UploadDataToBuffer``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="data"></param>
            <param name="count">Data Count</param>
            <param name="offset"></param>
            <param name="minBufferCount">Used to create a dynamic buffer with size of Max(count, minBufferCount).</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.UploadDataToBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Uploads the data pointer to buffer. 
            </summary>
            <param name="context">The context.</param>
            <param name="data">The data.</param>
            <param name="byteCount">The count by bytes.</param>
            <param name="byteOffset">The offset by bytes.</param>
            <param name="minBufferSizeByBytes">The minimum buffer count by bytes.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.EnsureBufferCapacity(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,System.Int32)">
            <summary>
            Ensures the buffer capacity is enough.
            </summary>
            <param name="context">The context.</param>
            <param name="count">The count.</param>
            <param name="minSizeCount">The minimum size count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.MapBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Action{SharpDX.DataStream})">
            <summary>
            Maps the buffer. Make sure to call <see cref="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.EnsureBufferCapacity(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32,System.Int32)"/> to make sure buffer has enough space
            </summary>
            <param name="context">The context.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.Initialize(SharpDX.Direct3D11.Device,System.Int32,System.Int32)">
            <summary>
            Initializes the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="count">The count.</param>
            <param name="minBufferCount">The minimum buffer count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.DynamicBufferProxy.CreateBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32)">
            <summary>
            Creates the buffer with size of count * structure size.
            </summary>
            <param name="context">The context.</param>
            <param name="count">The element count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StructuredBufferProxy.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StructuredBufferProxy"/> class.
            </summary>
            <param name="structureSize">Size of the structure.</param>
            <param name="lazyResize">If existing data size is smaller than buffer size, reuse existing. Otherwise create a new buffer with exact same size</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IFrameStatistics.AverageValue">
            <summary>
            Gets the average value.
            </summary>
            <value>
            The average value.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IFrameStatistics.AverageFrequency">
            <summary>
            Gets the average frequency.
            </summary>
            <value>
            The average frequency.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.IFrameStatistics.UpdateFrequency">
            <summary>
            Gets or sets the update frequency by number of samples
            </summary>
            <value>
            The update frequency.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.IFrameStatistics.Push(System.Double)">
            <summary>
            Pushes the specified latency by milliseconds
            </summary>
            <param name="latency">The latency.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.FrameStatistics.AverageValue">
            <summary>
            Average latency
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.FrameStatistics.AverageFrequency">
            <summary>
            Gets or sets the average frequency.
            </summary>
            <value>
            The average frequency.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.FrameStatistics.UpdateFrequency">
            <summary>
            Gets or sets the update frequency by number of samples, Default is 60
            </summary>
            <value>
            The update frequency.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.FrameStatistics.Push(System.Double)">
            <summary>
            Pushes the specified latency by milliseconds.
            </summary>
            <param name="latency">The latency.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.FPSStatistics">
            <summary>
            Gets the FPS statistics.
            </summary>
            <value>
            The FPS statistics.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.LatencyStatistics">
            <summary>
            Gets the render latency statistics.
            </summary>
            <value>
            The latency statistics.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.NumModel3D">
            <summary>
            Gets the number of model3d per frame.
            </summary>
            <value>
            The number model3d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.NumCore3D">
            <summary>
            Gets the number of render core3d per frame.
            </summary>
            <value>
            The number core3 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.NumTriangles">
            <summary>
            Gets the number triangles rendered in geometry model
            </summary>
            <value>
            The number triangles.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.NumDrawCalls">
            <summary>
            Gets the number draw calls per frame
            </summary>
            <value>
            The number draw calls.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.FrustumTestTime">
            <summary>
            Gets the frustum test time.
            </summary>
            <value>
            The frustum test time.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
            <value>
            The camera.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.FrameDetail">
            <summary>
            Gets or sets the frame detail.
            </summary>
            <value>
            The frame detail.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.RenderStatistics.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker">
            <summary>Rectangle packer using an algorithm by Javier Arevalo</summary>
            <remarks>
              <para>
                Original code by Javier Arevalo (jare at iguanademos dot com). Rewritten
                to C# / .NET by Markus Ewald (cygon at nuclex dot org). The following comments
                were written by the original author when he published his algorithm.
              </para>
              <para>
                You have a bunch of rectangular pieces. You need to arrange them in a
                rectangular surface so that they don't overlap, keeping the total area of the
                rectangle as small as possible. This is fairly common when arranging characters
                in a bitmapped font, lightmaps for a 3D engine, and I guess other situations as
                well.
              </para>
              <para>
                The idea of this algorithm is that, as we add rectangles, we can pre-select
                "interesting" places where we can try to add the next rectangles. For optimal
                results, the rectangles should be added in order. I initially tried using area
                as a sorting criteria, but it didn't work well with very tall or very flat
                rectangles. I then tried using the longest dimension as a selector, and it
                worked much better. So much for intuition...
              </para>
              <para>
                These "interesting" places are just to the right and just below the currently
                added rectangle. The first rectangle, obviously, goes at the top left, the next
                one would go either to the right or below this one, and so on. It is a weird way
                to do it, but it seems to work very nicely.
              </para>
              <para>
                The way we search here is fairly brute-force, the fact being that for most
                offline purposes the performance seems more than adequate. I have generated a
                japanese font with around 8500 characters and all the time was spent generating
                the bitmaps.
              </para>
              <para>
                Also, for all we care, we could grow the parent rectangle in a different way
                than power of two. It just happens that power of 2 is very convenient for
                graphics hardware textures.
              </para>
              <para>
                I'd be interested in hearing of other approaches to this problem. Make sure
                to post them on http://www.flipcode.com
              </para>
            </remarks>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.AnchorRankComparer">
            <summary>Compares the 'rank' of anchoring points</summary>
            <remarks>
              Anchoring points are potential locations for the placement of new rectangles.
              Each time a rectangle is inserted, an anchor point is generated on its upper
              right end and another one at its lower left end. The anchor points are kept
              in a list that is ordered by their closeness to the upper left corner of the
              packing area (their 'rank') so the packer favors positions that are closer to
              the upper left for new rectangles.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.AnchorRankComparer.Default">
            <summary>Provides a default instance for the anchor rank comparer</summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.AnchorRankComparer.Compare(SharpDX.Point,SharpDX.Point)">
            <summary>Compares the rank of two anchors against each other</summary>
            <param name="left">Left anchor point that will be compared</param>
            <param name="right">Right anchor point that will be compared</param>
            <returns>The relation of the two anchor point's ranks to each other</returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.actualPackingAreaHeight">
            <summary>Current height of the packing area</summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.actualPackingAreaWidth">
            <summary>Current width of the packing area</summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.anchors">
            <summary>Anchoring points where new rectangles can potentially be placed</summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.packedRectangles">
            <summary>Rectangles contained in the packing area</summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new rectangle packer</summary>
            <param name="packingAreaWidth">Maximum width of the packing area</param>
            <param name="packingAreaHeight">Maximum height of the packing area</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.TryPack(System.Int32,System.Int32,SharpDX.Point@)">
            <summary>Tries to allocate space for a rectangle in the packing area</summary>
            <param name="rectangleWidth">Width of the rectangle to allocate</param>
            <param name="rectangleHeight">Height of the rectangle to allocate</param>
            <param name="placement">Output parameter receiving the rectangle's placement</param>
            <returns>True if space for the rectangle could be allocated</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.OptimizePlacement(SharpDX.Point@,System.Int32,System.Int32)">
            <summary>
              Optimizes the rectangle's placement by moving it either left or up to fill
              any gaps resulting from rectangles blocking the anchors of the most optimal
              placements.
            </summary>
            <param name="placement">Placement to be optimized</param>
            <param name="rectangleWidth">Width of the rectangle to be optimized</param>
            <param name="rectangleHeight">Height of the rectangle to be optimized</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.SelectAnchorRecursive(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Searches for a free anchor and recursively enlarges the packing area
              if none can be found.
            </summary>
            <param name="rectangleWidth">Width of the rectangle to be placed</param>
            <param name="rectangleHeight">Height of the rectangle to be placed</param>
            <param name="testedPackingAreaWidth">Width of the tested packing area</param>
            <param name="testedPackingAreaHeight">Height of the tested packing area</param>
            <returns>
              Index of the anchor the rectangle is to be placed at or -1 if the rectangle
              does not fit in the packing area anymore.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.FindFirstFreeAnchor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Locates the first free anchor at which the rectangle fits</summary>
            <param name="rectangleWidth">Width of the rectangle to be placed</param>
            <param name="rectangleHeight">Height of the rectangle to be placed</param>
            <param name="testedPackingAreaWidth">Total width of the packing area</param>
            <param name="testedPackingAreaHeight">Total height of the packing area</param>
            <returns>The index of the first free anchor or -1 if none is found</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.IsFree(SharpDX.Rectangle@,System.Int32,System.Int32)">
            <summary>
              Determines whether the rectangle can be placed in the packing area
              at its current location.
            </summary>
            <param name="rectangle">Rectangle whose position to check</param>
            <param name="testedPackingAreaWidth">Total width of the packing area</param>
            <param name="testedPackingAreaHeight">Total height of the packing area</param>
            <returns>True if the rectangle can be placed at its current position</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ArevaloRectanglePacker.InsertAnchor(SharpDX.Point)">
            <summary>Inserts a new anchor point into the anchor list</summary>
            <param name="anchor">Anchor point that will be inserted</param>
            <remarks>
              This method tries to keep the anchor list ordered by ranking the anchors
              depending on the distance from the top left corner in the packing area.
            </remarks>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.ImagePacker">
            <summary>
            Pack a list of WIC.Bitmap into a single large bitmap
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.OutOfSpaceException">
            <summary>Insufficient space left in packing area to contain a given object</summary>
            <remarks>
              An exception being sent to you from deep space. Erm, no, wait, it's an exception
              that occurs when a packing algorithm runs out of space and is unable to fit
              the object you tried to pack into the remaining packing area.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.OutOfSpaceException.#ctor(System.String)">
            <summary>Initializes the exception with an error message</summary>
            <param name="message">Error message describing the cause of the exception</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker">
            <summary>Base class for rectangle packing algorithms</summary>
            <remarks>
              <para>
                By uniting all rectangle packers under this common base class, you can
                easily switch between different algorithms to find the most efficient or
                performant one for a given job.
              </para>
              <para>
                An almost exhaustive list of packing algorithms can be found here:
                http://www.csc.liv.ac.uk/~epa/surveyhtml.html
              </para>
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker.PackingAreaWidth">
            <summary>Maximum width the packing area is allowed to have</summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker.PackingAreaHeight">
            <summary>Maximum height the packing area is allowed to have</summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new rectangle packer</summary>
            <param name="packingAreaWidth">Width of the packing area</param>
            <param name="packingAreaHeight">Height of the packing area</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker.Pack(System.Int32,System.Int32)">
            <summary>Allocates space for a rectangle in the packing area</summary>
            <param name="rectangleWidth">Width of the rectangle to allocate</param>
            <param name="rectangleHeight">Height of the rectangle to allocate</param>
            <returns>The location at which the rectangle has been placed</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.RectanglePacker.TryPack(System.Int32,System.Int32,SharpDX.Point@)">
            <summary>Tries to allocate space for a rectangle in the packing area</summary>
            <param name="rectangleWidth">Width of the rectangle to allocate</param>
            <param name="rectangleHeight">Height of the rectangle to allocate</param>
            <param name="placement">Output parameter receiving the rectangle's placement</param>
            <returns>True if space for the rectangle could be allocated</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.SpritePackerBase`2.Pack(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,SharpDX.WIC.Bitmap@,System.Int32@,System.Int32@,SharpDX.RectangleF[]@)">
            <summary>
            Packs a collection of items into a single image.
            </summary>
            <param name="items">The list of file paths of the images to be combined.</param>
            <param name="requirePowerOfTwo">Whether or not the output image must have a power of two size.</param>
            <param name="requireSquareImage">Whether or not the output image must be a square.</param>
            <param name="maximumWidth">The maximum width of the output image.</param>
            <param name="maximumHeight">The maximum height of the output image.</param>
            <param name="imagePadding">The amount of blank space to insert in between individual images.</param>
            <param name="outputImage">The resulting output image.</param>
            <param name="outputMap">The resulting output map of placement rectangles for the images.</param>
            <param name="imageHeight">Output the merged image height</param>
            <param name="imageWidth">Output the merged image width</param>
            <returns>0 if the packing was successful, error code otherwise.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.SpritePackerBase`2.GetArray(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Gets the array.
            </summary>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.SpritePackerBase`2.GetSize(`1)">
            <summary>
            Gets the size.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.SpritePackerBase`2.DrawOntoOutputTarget(SharpDX.Direct2D1.WicRenderTarget)">
            <summary>
            Draws the onto output target.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ImagePacker.TextInfoExtPacker">
            <summary>
            Draw and pack a list of <see cref="T:HelixToolkit.SharpDX.Core.TextInfoExt"/> into a single large bitmap
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3">
             <summary>
            
             </summary>
             <typeparam name="INDEXTYPE"></typeparam>
             <typeparam name="NAMETYPE"></typeparam>
             <typeparam name="DATATYPE"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.MappingArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Datas">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Add(`0,`1,`2)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="name"></param>
            <param name="item"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Remove(`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Remove(`1)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.HasItem(`0)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.TryGetItem(`0,`2@)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.TryGetSlot(`1,`0@)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.TryGetName(`0,`1@)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.HasItem(`1)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.TryGetItem(`1,`2@)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Item(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.MappingCollection`3.Item(`1)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.BoundableNodeOctree.OctantDictionary">
            <summary>
            Only root contains dictionary
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.OnOctreeCreated">
            <summary>
            Occurs when [on octree created].
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.Octree">
            <summary>
            Gets or sets the octree.
            </summary>
            <value>
            The octree.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.mOctree">
            <summary>
            The m octree
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.Parameter">
            <summary>
            Gets or sets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.RequestUpdateOctree">
            <summary>
            Gets or sets a value indicating whether [request update octree].
            </summary>
            <value>
              <c>true</c> if [request update octree]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.AddPendingItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Adds the pending item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.RebuildTree(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Rebuilds the tree.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.RemoveItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Removes the item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.RequestRebuild">
            <summary>
            Requests the rebuild.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.ProcessPendingItems">
            <summary>
            Processes the pending items.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.OctreeManagerBase.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Normal hit test from top to bottom
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager">
            <summary>
            Use to create geometryModel3D octree for groups. Each ItemsModel3D must has its own manager, do not share between two ItemsModel3D
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.RebuildTree(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Rebuilds the tree.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.ProcessPendingItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.AddPendingItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Adds the pending item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.RemoveItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Removes the item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.GroupNodeGeometryBoundOctreeManager.RequestRebuild">
            <summary>
            Requests the rebuild.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.AddPendingItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Adds the pending item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.ProcessPendingItems">
            <summary>
            Processes the pending items.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.RebuildTree(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Rebuilds the tree.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.RemoveItem(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Removes the item.
            </summary>
            <param name="item">The item.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.InstancingRenderableOctreeManager.RequestRebuild">
            <summary>
            Requests the rebuild.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.#ctor(System.Collections.Generic.IList{SharpDX.Matrix},SharpDX.BoundingBox,HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree"/> class.
            </summary>
            <param name="instanceMatrix">The instance matrix.</param>
            <param name="geometryBound">The geometry bound.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.GetBoundingBoxFromItem(System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}@)">
            <summary>
            Gets the bounding box from item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.GetMaxBound">
            <summary>
            Gets the maximum bound.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.GetObjects">
            <summary>
            Gets the objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Hits the test current node exclude child.
            </summary>
            <param name="octant">The octant.</param>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry"></param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="rayModel">The ray model.</param>
            <param name="returnMultiple"></param>
            <param name="hits">The hits.</param>
            <param name="isIntersect">if set to <c>true</c> [is intersect].</param>
            <param name="hitThickness">The hit thickness.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            Finds the nearest point by sphere exclude child.
            </summary>
            <param name="octant">The octant.</param>
            <param name="context">The context.</param>
            <param name="sphere">The sphere.</param>
            <param name="points">The points.</param>
            <param name="isIntersect">if set to <c>true</c> [is intersect].</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree">
            <summary>
            Octree for batched geometry array
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.#ctor(HelixToolkit.SharpDX.Core.BatchedMeshGeometryConfig[],HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticInstancingModelOctree"/> class.
            </summary>
            <param name="geometries">Batched geometries.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.GetBoundingBoxFromItem(System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}@)">
            <summary>
            Gets the bounding box from item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.GetMaxBound">
            <summary>
            Gets the maximum bound.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.GetObjects">
            <summary>
            Gets the objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Hits the test current node exclude child.
            </summary>
            <param name="octant">The octant.</param>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry"></param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="rayWS">The ray ws.</param>
            <param name="rayModel">The ray model.</param>
            <param name="returnMultiple"></param>
            <param name="hits">The hits.</param>
            <param name="isIntersect">if set to <c>true</c> [is intersect].</param>
            <param name="hitThickness">The hit thickness.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticBatchedGeometryBoundsOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            Finds the nearest point by sphere exclude child.
            </summary>
            <param name="octant">The octant.</param>
            <param name="context">The context.</param>
            <param name="sphere">The sphere.</param>
            <param name="points">The points.</param>
            <param name="isIntersect">if set to <c>true</c> [is intersect].</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree">
            <summary>
            Static octree for line geometry
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.Indices">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree"/> class.
            </summary>
            <param name="positions">The positions.</param>
            <param name="indices">The indices.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.GetObjects">
            <summary>
            Gets the objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayModel"></param>
            <param name="returnMultiple"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticLineGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree">
            <summary>
            Static octree for mesh
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.Indices">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree"/> class.
            </summary>
            <param name="positions">The positions.</param>
            <param name="indices">The indices.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.GetObjects">
            <summary>
            Gets the objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayModel"></param>
            <param name="returnMultiple"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticMeshGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1">
            <summary>
            Base class for array based static octree.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant">
            <summary>
            Octant structure, size = 80 bytes
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.#ctor(System.Int32,System.Int32,SharpDX.BoundingBox@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant"/> struct.
            </summary>
            <param name="parent">The parent.</param>
            <param name="index">The index.</param>
            <param name="bound">The bound.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant"/> struct.
            </summary>
            <param name="parent">The parent.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.GetChildIndex(System.Int32)">
            <summary>
            Gets the index of the child.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.SetChildIndex(System.Int32,System.Int32)">
            <summary>
            Sets the index of the child.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:System.Int32"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Octant.HasChildAtIndex(System.Int32)">
            <summary>
            Determines whether [has child at index] [the specified index].
            </summary>
            <param name="index">The index.</param>
            <returns>
              <c>true</c> if [has child at index] [the specified index]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray">
            <summary>
            Octant array, used to manage a internal octant array, which is the storage for the entire octree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray.#ctor(SharpDX.BoundingBox,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray"/> class.
            </summary>
            <param name="bound">The bound.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray.Add(System.Int32,System.Int32,SharpDX.BoundingBox,HelixToolkit.SharpDX.Core.Utilities.StaticOctree{`0}.Octant@)">
            <summary>
            Adds the specified parent index.
            </summary>
            <param name="parentIndex">Index of the parent.</param>
            <param name="childIndex">Index of the child.</param>
            <param name="bound">The bound.</param>
            <param name="newParent">The parent out.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray.Compact">
            <summary>
            Compacts the octree array, remove all unused storage space at the end of the array.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArray.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Hit">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.OctantArraySize">
            <summary>
            Internal octant array size.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitPathBoundingBoxes">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.MIN_SIZE">
            <summary>
            The minumum size for enclosing region is a 1x1x1 cube.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Objects">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.TreeBuilt">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.Bound">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.#ctor(HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
             <summary>
            
             </summary>
             <param name="parameter"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.BuildTree">
            <summary>
            Call to build the tree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.GetMaxBound">
            <summary>
            Get the max bounding box of the octree
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.CheckDimension(SharpDX.BoundingBox@)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.BuildSubTree(System.Int32)">
            <summary>
            Build sub tree nodes
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.GetBoundingBoxFromItem(`0@)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.FindEnclosingBox(System.Int32)">
            <summary>
            This finds the dimensions of the bounding box necessary to tightly enclose all items in the object list.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.CreateOctants(SharpDX.BoundingBox@,System.Single)">
            <summary>
            Create child octant bounding boxes for current parent bounding box
            </summary>
            <param name="box"></param>
            <param name="minSize"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.IsContains(SharpDX.BoundingBox@,SharpDX.BoundingBox,`0@)">
             <summary>
            
             </summary>
             <param name="source"></param>
             <param name="target"></param>
             <param name="targetObj"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.TreeTraversal(System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}},System.Action{System.Int32},System.Func{System.Int32,System.Boolean})">
            <summary>
            Common function to traverse the tree
            </summary>
            <param name="stack"></param>
            <param name="process"></param>
            <param name="canVisitChildren"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="model"></param>
             <param name="geometry"></param>
             <param name="modelMatrix"></param>
             <param name="hits"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="model"></param>
             <param name="geometry"></param>
             <param name="modelMatrix"></param>
             <param name="returnMultiple"></param>
             <param name="hits"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry">The geometry.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="hits">The hits.</param>
            <param name="hitThickness">The hit thickness.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="model"></param>
             <param name="geometry"></param>
             <param name="modelMatrix"></param>
             <param name="returnMultiple"></param>
             <param name="hits"></param>
             <param name="hitThickness"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.FindNearestPointBySphere(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="sphere"></param>
             <param name="points"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.FindNearestPointFromPoint(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="point"></param>
             <param name="results"></param>
             <param name="heuristicSearchFactor"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.FindNearestPointByPointAndSearchRadius(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Single,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="point"></param>
            <param name="radius"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{`0}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            Find nearest point by sphere on current node only.
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="points"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{`0}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Hit test for current node.
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayModel"></param>
            <param name="returnMultiple">Return multiple hit results or only the closest one</param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticOctree`1.CreateOctreeLineModel">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree">
            <summary>
            Static octree for points
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.GetBoundingBoxFromItem(System.Int32@)">
            <summary>
            Gets the bounding box from item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.GetMaxBound">
            <summary>
            Gets the maximum bound.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.IsContains(SharpDX.BoundingBox@,SharpDX.BoundingBox,System.Int32@)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.GetObjects">
            <summary>
            Gets the objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Int32}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayModel"></param>
            <param name="returnMultiple"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StaticPointGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.Utilities.StaticOctree{System.Int32}.Octant@,HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="octant"></param>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs">
            <summary>
            Extended <see cref="T:System.EventArgs"/> to relay an <see cref="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Exception"/>.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Exception">
            <summary>
            The <see cref="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Exception"/> to be relayed.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Handled">
            <summary>
             Gets or sets a value indicating whether the <see cref="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Exception"/> is handled.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs"/> class.
            </summary>
            <param name="exception">The <see cref="P:HelixToolkit.SharpDX.Core.Utilities.RelayExceptionEventArgs.Exception"/> to be relayed.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1">
            <summary>
            A simple curcular ring buffer implementation
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.Add(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns>If buffer full, return false</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.RemoveLast">
            <summary>
            Remove the last element added into the buffer
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.RemoveFirst">
            <summary>
            Remove the first element added into the buffer
            </summary>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.Last">
            <summary>
            Get last added element
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.First">
            <summary>
            Get first added element
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.IsFull">
            <summary>
            If buffer is full
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.IsEmpty">
            <summary>
            If buffer is empty
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.Clear">
            <summary>
            Reset
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.SimpleRingBuffer`1.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.StateProxy`1">
            <summary>
            
            </summary>
            <typeparam name="StateType">The type of the tate type.</typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.StateProxy`1.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.StateProxy`1.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.StateProxy{`0})~`0">
            <summary>
            Performs an implicit conversion
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.RasterizerStateProxy">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.BlendStateProxy">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.DepthStencilStateProxy">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.SamplerStateProxy">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy">
            <summary>
            A proxy container to handle view resources
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.TextureView">
            <summary>
            Gets the texture view.
            </summary>
            <value>
            The texture view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.DepthStencilView">
            <summary>
            Gets the depth stencil view.
            </summary>
            <value>
            The depth stencil view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.RenderTargetView">
            <summary>
            Gets the render target view.
            </summary>
            <value>
            The render target view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.Resource">
            <summary>
            Gets the resource.
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="textureDesc">The texture desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="textureDesc">The texture desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="textureDesc">The texture desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="resource"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.#ctor(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(HelixToolkit.SharpDX.Core.TextureModel,System.Boolean,System.Boolean)">
            <summary>
            Creates the view from texture model.
            </summary>
            <param name="texture">The stream.</param>
            <param name="createSRV">Create ShaderResourceView</param>
            <param name="enableAutoGenMipMap">Enable auto mipmaps generation</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(SharpDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
            Creates the view.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(SharpDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
            Creates the view.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(SharpDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
            Creates the view.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateTextureView">
            <summary>
            Creates the view.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateRenderTargetView">
            <summary>
            Creates the render target.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(``0[],SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 1D texture view from data array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(``0[],System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 1D texture view from data array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="length">data length</param>
            <param name="format">The pixel format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(System.IntPtr,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the shader resource view from data ptr.
            </summary>
            <param name="dataPtr">The data PTR.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(``0[],System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 2D texture view from data array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(System.IntPtr,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the shader resource view from data ptr.
            </summary>
            <param name="dataPtr">The data PTR.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(``0[],System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the view from 3D texture byte array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pixels">The pixels.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(System.IntPtr,System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the view.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="dataPtr"></param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromColorArray(SharpDX.Color4[])">
            <summary>
            Creates the 1D texture view from color array.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromColorArray(SharpDX.Color4[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the 2D texture view from color array.
            </summary>
            <param name="array">The array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="createSRV"></param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(SharpDX.Direct3D11.Device,``0[],SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates ShaderResourceViewProxy from 2D texture array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="device">The device.</param>
            <param name="array">The array.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(SharpDX.Direct3D11.Device,System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Creates ShaderResourceViewProxy from common file formats such as Jpg, Bmp, DDS, Png, etc
            </summary>
            <param name="device">The device.</param>
            <param name="texture">The texture.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView``1(SharpDX.Direct3D11.Device,``0[],System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 2D texture view from data array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="device">The device.</param>
            <param name="array">The array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateView(SharpDX.Direct3D11.Device,System.IntPtr,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 2D texture view from raw pixel byte array
            </summary>
            <param name="device">The device.</param>
            <param name="dataPtr">The data PTR.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromColorArray(SharpDX.Direct3D11.Device,SharpDX.Color4[])">
            <summary>
            Creates the 1D texture view from color array.
            </summary>
            <param name="device"></param>
            <param name="array">The array.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromColorArray(SharpDX.Direct3D11.Device,SharpDX.Color4[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the 2D texture view from color array.
            </summary>
            <param name="device"></param>
            <param name="array">The array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="createSRV"></param>
            <param name="generateMipMaps"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromPixelData(SharpDX.Direct3D11.Device,System.Byte[],System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the 3D texture view from raw pixel array
            </summary>
            <param name="device">The device.</param>
            <param name="pixels">The pixels.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromPixelData(SharpDX.Direct3D11.Device,SharpDX.Half4[],System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the view from pixel data.
            </summary>
            <param name="device">The device.</param>
            <param name="pixels">The pixels.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.CreateViewFromPixelData(SharpDX.Direct3D11.Device,System.IntPtr,System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Boolean,System.Boolean)">
            <summary>
            Creates the view from pixel data.
            </summary>
            <param name="device">The device.</param>
            <param name="pixels">The pixels.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">The format.</param>
            <param name="createSRV">if set to <c>true</c> [create SRV].</param>
            <param name="generateMipMaps"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)~SharpDX.Direct3D11.ShaderResourceView">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> to <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)~SharpDX.Direct3D11.DepthStencilView">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> to <see cref="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.DepthStencilView"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.op_Implicit(HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy"/> to <see cref="P:HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy.RenderTargetView"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ScreenCapture.CaptureTexture(SharpDX.Direct3D11.DeviceContext,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D@)">
            <summary>
            Captures the texture.
            </summary>
            <param name="context">The context.</param>
            <param name="source">The source.</param>
            <param name="stagingTexture">The staging texture.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ScreenCapture.SaveWICTextureToFile(HelixToolkit.SharpDX.Core.IDeviceResources,SharpDX.Direct3D11.Texture2D,System.String,HelixToolkit.SharpDX.Core.Direct2DImageFormat)">
            <summary>
            Saves the wic texture to file.
            </summary>
            <param name="deviceResource">The device resource.</param>
            <param name="source">The source.</param>
            <param name="file">The file.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ScreenCapture.SaveWICTextureToFile(HelixToolkit.SharpDX.Core.IDeviceResources,SharpDX.Direct3D11.Texture2D,System.String,System.Guid)">
            <summary>
            Saves the wic texture to file.
            </summary>
            <param name="deviceResource">The device resource.</param>
            <param name="source">The source.</param>
            <param name="fileName">Name of the file.</param>
            <param name="containerFormat">The container format.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.ScreenCapture.SaveWICTextureToBitmapStream(HelixToolkit.SharpDX.Core.IDeviceResources,SharpDX.Direct3D11.Texture2D,System.IO.MemoryStream)">
            <summary>
            Saves the wic texture to bitmap stream.
            </summary>
            <param name="deviceResource">The device resource.</param>
            <param name="source">The source.</param>
            <param name="bitmapStream">The bitmap stream.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.TextureLoader">
            <summary>
            Utilities to load textures.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.FromFileAsResource(SharpDX.Direct3D11.Device,System.String)">
            <summary>
            Loads a texture from a file as a resource.
            </summary>
            <param name="device">The device.</param>
            <param name="fileName">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.FromFileAsShaderResourceView(SharpDX.Direct3D11.Device,System.String,System.Boolean)">
            <summary>
            Loads a texture from a file as a shader resource view.
            </summary>
            <param name="device">The device.</param>
            <param name="fileName">The file name.</param>
            <param name="disableAutoGenMipMap"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.FromMemoryAsShaderResourceView(SharpDX.Direct3D11.Device,System.Byte[],System.Boolean)">
            <summary>
            Loads a texture from a memory buffer as a shader resource view.
            </summary>
            <param name="device">The device.</param>
            <param name="memory">The memory buffer.</param>
            <param name="disableAutoGenMipMap"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.FromMemoryAsShaderResourceView(SharpDX.Direct3D11.Device,System.IO.Stream,System.Boolean)">
            <summary>
            Loads a texture from a memory buffer as a shader resource view.
            </summary>
            <param name="device">The device.</param>
            <param name="memory">The memory stream.</param>
            <param name="disableAutoGenMipMap"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.FromMemoryAsShaderResource(SharpDX.Direct3D11.Device,System.IO.Stream,System.Boolean)">
            <summary>
            Froms the memory as shader resource.
            </summary>
            <param name="device">The device.</param>
            <param name="memory">The memory.</param>
            <param name="disableAutoGenMipMap">if set to <c>true</c> [disable automatic gen mip map].</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TextureLoader.GenerateMipMaps(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.Texture,SharpDX.Direct3D11.Resource@)">
            <summary>
            Generates the mip maps.
            </summary>
            <param name="device">The device.</param>
            <param name="texture">The texture.</param>
            <param name="textMip">Returns a new texture with mipmaps if succeeded. Otherwise returns the input texture</param>
            <returns>True succeed. False: Format not supported.</returns>
            <exception cref="T:System.IO.InvalidDataException">Input texture is invalid.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.#ctor(System.String,System.IFormatProvider)">
            <summary> 
            Constructor for TokenizerHelper which accepts an IFormatProvider.
            If the IFormatProvider is null, we use the thread's IFormatProvider info. 
            We will use ',' as the list separator, unless it's the same as the
            decimal separator.  If it *is*, then we can't determine if, say, "23,5" is one
            number or two.  In this case, we will use ";" as the separator.
            </summary> 
            <param name="str"> The string which will be tokenized. </param>
            <param name="formatProvider"> The IFormatProvider which controls this tokenization. </param> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.#ctor(System.String,System.Char,System.Char)">
            <summary>
            Initialize the TokenizerHelper with the string to tokenize,
            the char which represents quotes and the list separator.
            </summary> 
            <param name="str"> The string to tokenize. </param>
            <param name="quoteChar"> The quote char. </param> 
            <param name="separator"> The list separator. </param> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.Initialize(System.String,System.Char,System.Char)">
            <summary>
            Initialize the TokenizerHelper with the string to tokenize,
            the char which represents quotes and the list separator.
            </summary> 
            <param name="str"> The string to tokenize. </param>
            <param name="quoteChar"> The quote char. </param> 
            <param name="separator"> The list separator. </param> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.LastTokenRequired">
            <summary> 
            Throws an exception if there is any non-whitespace left un-parsed.
            </summary> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.NextToken">
            <summary> 
            Advances to the NextToken
            </summary>
            <returns>true if next token was found, false if at end of string</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.NextTokenRequired">
            <summary> 
            Advances to the NextToken, throwing an exception if not present
            </summary>
            <returns>The next token found</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.NextTokenRequired(System.Boolean)">
            <summary>
            Advances to the NextToken, throwing an exception if not present 
            </summary> 
            <returns>The next token found</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.NextToken(System.Boolean)">
            <summary>
            Advances to the NextToken
            </summary>
            <returns>true if next token was found, false if at end of string</returns> 
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.TokenizerHelper.NextToken(System.Boolean,System.Char)">
            <summary>
            Advances to the NextToken.  A separator character can be specified
            which overrides the one previously set. 
            </summary>
            <returns>true if next token was found, false if at end of string</returns> 
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.uav">
            <summary>
            The uav
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.srv">
            <summary>
            The SRV
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.UAV">
            <summary>
            Get UnorderedAccessView
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.SRV">
            <summary>
            Get ShaderResourceView
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BufferDescription@,SharpDX.Direct3D11.UnorderedAccessViewDescription@,SharpDX.Direct3D11.ShaderResourceViewDescription@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="bufferDesc">The buffer desc.</param>
            <param name="uavDesc">The uav desc.</param>
            <param name="srvDesc">The SRV desc.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.UAVBufferViewProxy.CopyCount(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Copies the count.
            </summary>
            <param name="device">The device.</param>
            <param name="destBuffer">The dest buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.GenerateGradients(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates gradients using a central differences scheme.
            </summary>
            <param name="data">Normalized voxel data</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
            <param name="sampleSize">The size/radius of the sample to take.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.FilterNxNxN(SharpDX.Half4[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Applies an NxNxN filter to the gradients. 
            Should be an odd number of samples. 3 used by default.
            </summary>
            <param name="data">Gradient data from <see cref="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.GenerateGradients(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)"/></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
            <param name="n"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.SampleNxNxN(SharpDX.Half4[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Samples the sub-volume graident volume and returns the average.
            Should be an odd number of samples.
            </summary>
            <param name="data"></param>
            <param name="depth"></param>
            <param name="height"></param>
            <param name="width"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.SampleGradients(SharpDX.Half4[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Samples the gradient volume
            </summary>
            <param name="data"></param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Utilities.VolumeDataHelper.SampleVolume(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Samples the volume.
            </summary>
            <param name="data">The data.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ViewMatrix">
            <summary>
            Gets the view matrix.
            </summary>
            <value>
            The view matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ViewMatrixInv">
            <summary>
            Gets the inversed view matrix.
            </summary>
            <value>
            The inversed view matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ProjectionMatrix">
            <summary>
            Gets the projection matrix.
            </summary>
            <value>
            The projection matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ViewportMatrix">
            <summary>
            Gets the viewport matrix.
            </summary>
            <value>
            The viewport matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ScreenViewProjectionMatrix">
            <summary>
            Gets the screen view projection matrix.
            </summary>
            <value>
            The screen view projection matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.IsPerspective">
            <summary>
            Gets a value indicating whether this instance is perspective.
            </summary>
            <value>
              <c>true</c> if this instance is perspective; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.DpiScale">
            <summary>
            Gets the dpi scale.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderMatrices.CameraParams">
            <summary>
            Gets the bounding frustum.
            </summary>
            <value>
            The bounding frustum.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderMatrices.Update">
            <summary>
            Updates all the internal metrices.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ITextureModelRepository">
            <summary>
            Used to cache texture models. Reuse existing texture model to avoid duplicate texture loading.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureModelRepository.Create(System.IO.Stream)">
            <summary>
            Creates texture model from a specified stream such as memory stream or file stream.
            <para>This is used for implicit conversion from a Stream to TextureModel</para>
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureModelRepository.Create(System.String)">
            <summary>
            Creates texture model from a specified texture path
            </summary>
            <param name="texturePath">The texture path.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ITextureInfoLoader">
            <summary>
            Loads texture info and uploads texture to GPU on demand.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureInfoLoader.Load(System.Guid)">
            <summary>
            Called before GPU texture resource creation.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureInfoLoader.Complete(System.Guid,HelixToolkit.SharpDX.Core.TextureInfo,System.Boolean)">
            <summary>
            Called after GPU texture resource creation.
            </summary>
            <param name="id">The identifier.</param>
            <param name="info">The information.</param>
            <param name="succeeded">if set to <c>true</c> [succeeded].</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IViewport3DX">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewport3DX.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewport3DX.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.IsShadowMappingEnabled">
            <summary>
            Gets a value indicating whether this instance is shadow mapping enabled.
            </summary>
            <value>
              <c>true</c> if this instance is shadow mapping enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.CameraCore">
            <summary>
            Gets the camera core.
            </summary>
            <value>
            The camera core.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewport3DX.Update(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="timeStamp"></param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.Renderables">
            <summary>
            Gets the renderables.
            </summary>
            <value>
            The renderables.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.D2DRenderables">
            <summary>
            Gets the d2 d renderables.
            </summary>
            <value>
            The d2 d renderables.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewport3DX.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IViewport3DX.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IViewport3DX.ViewportRectangle">
            <summary>
            Gets the viewport rectangle.
            </summary>
            <value>
            The viewport rectangle.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IRenderHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.ExceptionOccurred">
            <summary>
            Fired whenever an exception occurred on this object.
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.OnNewRenderTargetTexture">
            <summary>
            Occurs when [on new render target texture].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.StartRenderLoop">
            <summary>
            Occurs when [start render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.StopRenderLoop">
            <summary>
            Occurs when [stop render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.Rendered">
            <summary>
            Occurs when each render frame finished rendering.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.Device">
            <summary>
            Gets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.ImmediateDeviceContext">
            <summary>
            Gets the immediate device context.
            </summary>
            <value>
            The immediate device context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.Device2D">
            <summary>
            Gets the device2d.
            </summary>
            <value>
            The device2d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.ClearColor">
            <summary>
            Gets or sets the color of the clear.
            </summary>
            <value>
            The color of the clear.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.IsShadowMapEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is shadow map enabled.
            </summary>
            <value>
              <c>true</c> if this instance is shadow map enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.Viewport">
            <summary>
            Gets or sets the viewport.
            </summary>
            <value>
            The viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderContext">
            <summary>
            Gets the render context.
            </summary>
            <value>
            The render context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.Renderer">
            <summary>
            Renderer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.SetDefaultRenderTargets(System.Boolean)">
            <summary>
            Sets the default render targets.
            </summary>
            <param name="clear">if set to <c>true</c> [clear].</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderTechnique">
            <summary>
            This technique is used for the entire render pass 
            by all Element3D if not specified otherwise in
            the elements itself
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.FeatureLevel">
            <summary>
            Gets the feature level.
            </summary>
            <value>
            The feature level.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.IsDeferredLighting">
            <summary>
            Gets a value indicating whether this instance is deferred lighting.
            </summary>
            <value>
              <c>true</c> if this instance is deferred lighting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.DpiScale">
            <summary>
            Gets or sets the dpi scale.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.IsBusy">
            <summary>
            Indicates if DPFCanvas busy on rendering.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.EnableRenderFrustum">
            <summary>
            Gets or sets a value indicating whether [enable render frustum].
            </summary>
            <value>
              <c>true</c> if [enable render frustum]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.EnableSharingModelMode">
            <summary>
            Gets or sets a value indicating whether [enable sharing model mode].
            </summary>
            <value>
              <c>true</c> if [enable sharing model mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.SharedModelContainer">
            <summary>
            Gets or sets the shared model container.
            </summary>
            <value>
            The shared model container.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.IsRendering">
            <summary>
            Gets or sets a value indicating whether this instance is rendering.
            </summary>
            <value>
              <c>true</c> if this instance is rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderTargetBufferView">
            <summary>
            Gets the color buffer view.
            </summary>
            <value>
            The color buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.DepthStencilBufferView">
            <summary>
            Gets the depth stencil buffer view.
            </summary>
            <value>
            The depth stencil buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.D2DTarget">
            <summary>
            Gets the d2d target.
            </summary>
            <value>
            The d2d target.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameFlattenedScene">
            <summary>
            Gets the current frame flattened scene graph
            </summary>
            <value>
            The per frame renderable.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameLights">
            <summary>
            Gets the current frame lights
            </summary>
            <value>
            The per frame lights.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameNodesWithPostEffect">
            <summary>
            Gets the per frame nodes with post effects. It is the subset of <see cref="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameOpaqueNodes"/>
            </summary>
            <value>
            Gets the per frame nodes with post effects.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameOpaqueNodes">
            <summary>
            Gets the per frame nodes for opaque rendering. <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Opaque"/>
            <para>This does not include <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Transparent"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Particle"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PreProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PostProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Light"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.ScreenSpaced"/></para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameOpaqueNodesInFrustum">
            <summary>
            Gets the per frame opaque nodes in frustum.
            </summary>
            <value>
            The per frame opaque nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameTransparentNodesInFrustum">
            <summary>
            Gets the per frame transparent nodes in frustum.
            </summary>
            <value>
            The per frame transparent nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameParticleNodes">
            <summary>
            Gets the per frame particle nodes. <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Particle"/>
            </summary>
            <value>
            The per frame particle nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.PerFrameTransparentNodes">
            <summary>
            Gets the per frame transparent nodes. , <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Transparent"/>
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.StartD3D(System.Int32,System.Int32)">
            <summary>
            Starts the d3 d.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.EndD3D">
            <summary>
            Ends the d3 d.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.StartRendering">
            <summary>
            Starts the rendering. Trigger <see cref="E:HelixToolkit.SharpDX.Core.IRenderHost.StartRenderLoop"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.StopRendering">
            <summary>
            Stops the rendering. Trigger <see cref="E:HelixToolkit.SharpDX.Core.IRenderHost.StopRenderLoop"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.UpdateAndRender">
            <summary>
            Updates the and render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph. This also calls <see cref="M:HelixToolkit.SharpDX.Core.IRenderHost.InvalidatePerFrameRenderables"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.InvalidatePerFrameRenderables">
            <summary>
            Invalidates the per frame renderables. Called when <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsRenderable"/> changed or <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderType"/> changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.ShowRenderDetail">
            <summary>
            Gets or sets a value indicating whether [show statistics].
            </summary>
            <value>
              <c>true</c> if [show statistics]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderStatistics">
            <summary>
            Gets the render statistics.
            </summary>
            <value>
            The render statistics.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderConfiguration">
            <summary>
            Gets or sets the render configuration.
            </summary>
            <value>
            The render configuration.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderHost.RenderBuffer">
            <summary>
            Gets the render buffer.
            </summary>
            <value>
            The render buffer.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IRenderHost.SceneGraphUpdated">
            <summary>
            Occurs when [scene graph updated].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderHost.ClearRenderTarget(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean,System.Boolean)">
            <summary>
            Clears the render target.
            </summary>
            <param name="context">The context.</param>
            <param name="clearBackBuffer">if set to <c>true</c> [clear back buffer].</param>
            <param name="clearDepthStencilBuffer">if set to <c>true</c> [clear depth stencil buffer].</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IRenderTechnique">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.IsNull">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Layout">
            <summary>
            Input layout for all passes
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.ShaderPassNames">
            <summary>
            All shader pass names
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.String)">
            <summary>
            Get pass by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderTechnique.GetPass(System.Int32)">
            <summary>
            Get pass by index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IRenderTechnique.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderTechnique.AddPass(HelixToolkit.SharpDX.Core.Shaders.ShaderPassDescription)">
            <summary>
            Adds the pass.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IRenderTechnique.RemovePass(System.String)">
            <summary>
            Removes the pass.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureResourceManager.Register(HelixToolkit.SharpDX.Core.TextureModel)">
            <summary>
            Registers the specified texture stream. This creates mipmaps automatically
            </summary>
            <param name="textureStream">The texture stream.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ITextureResourceManager.Register(HelixToolkit.SharpDX.Core.TextureModel,System.Boolean)">
            <summary>
            Registers the specified texture stream.
            </summary>
            <param name="textureStream">The texture stream.</param>
            <param name="enableAutoGenMipMap">if set to <c>false</c> [disable automatic gen mip map].</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ITransform">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform.ModelMatrix">
            <summary>
            Local transform
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform.ParentMatrix">
            <summary>
            Transform from its parent
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform.TotalModelMatrix">
            <summary>
            Total model transform by ModelMatrix * ParentMatrix
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ITransform2D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform2D.ModelMatrix">
            <summary>
            Gets or sets the model matrix.
            </summary>
            <value>
            The model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform2D.ParentMatrix">
            <summary>
            Gets or sets the parent matrix.
            </summary>
            <value>
            The parent matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ITransform2D.TotalModelMatrix">
            <summary>
            Gets the total model matrix.
            </summary>
            <value>
            The total model matrix.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel.Initialized">
            <summary>
            Gets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel"/> is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel"/> is changed.
            </summary>
            <value>
              <c>true</c> if changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel.Buffer">
            <summary>
            Gets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel.AttachBuffer(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Int32@)">
            <summary>
            Attaches the buffer.
            </summary>
            <param name="context">The context.</param>
            <param name="vertexBufferStartSlot">The vertex buffer slot. Returns the next available slot after binding</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IVertexExtraBufferModel.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Cameras.CameraCore.CreateLeftHandSystem">
            <summary>
            Gets or sets a value indicating whether to create a left hand system.
            </summary>
            <value>
            <c>true</c> if creating a left hand system; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraCore.AnimateTo(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Single)">
            <summary>
            Animates to.
            </summary>
            <param name="newPosition">The new position.</param>
            <param name="newDirection">The new direction.</param>
            <param name="newUpDirection">The new up direction.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraCore.OnTimeStep">
            <summary>
            Called when [time step] to update camera animation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Cameras.ProjectionCameraCore.FarPlaneDistance">
            <summary>
            Gets or sets the far plane distance.
            </summary>
            <value>
            The far plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Cameras.ProjectionCameraCore.NearPlaneDistance">
            <summary>
            Gets or sets the near plane distance.
            </summary>
            <value>
            The near plane distance.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraMath.RotateTrackball(HelixToolkit.SharpDX.Core.CameraMode,SharpDX.Vector2@,SharpDX.Vector2@,SharpDX.Vector3@,System.Single,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.Cameras.CameraCore,System.Int32,SharpDX.Vector3@,SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            Rotates the trackball.
            </summary>
            <param name="cameraMode">The camera mode.</param>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="rotateAround">The rotate around.</param>
            <param name="sensitivity">The sensitivity.</param>
            <param name="viewportWidth">Width of the viewport.</param>
            <param name="viewportHeight">Height of the viewport.</param>
            <param name="camera">The camera.</param>
            <param name="invertFactor">The invert factor. Right Handed System = 1; LeftHandedSystem = -1;</param>
            <param name="newPosition">The new position.</param>
            <param name="newLookDirection">The new look direction.</param>
            <param name="newUpDirection">The new up direction.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraMath.ProjectToTrackball(SharpDX.Vector2,System.Double,System.Double)">
            <summary>
            Projects a screen position to the trackball unit sphere.
            </summary>
            <param name="point">
            The screen position.
            </param>
            <param name="w">
            The width of the viewport.
            </param>
            <param name="h">
            The height of the viewport.
            </param>
            <returns>
            A trackball coordinate.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraMath.RotateTurnball(HelixToolkit.SharpDX.Core.CameraMode,SharpDX.Vector2@,SharpDX.Vector2@,SharpDX.Vector3@,System.Single,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.Cameras.CameraCore,System.Int32,SharpDX.Vector3@,SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            Rotates around three axes.
            </summary>
            <param name="cameraMode">The camera mode.</param>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="rotateAround">The rotate around.</param>
            <param name="sensitivity">The sensitivity.</param>
            <param name="viewportWidth">Width of the viewport.</param>
            <param name="viewportHeight">Height of the viewport.</param>
            <param name="camera">The camera.</param>
            <param name="invertFactor">The invert factor. Right Handed = 1; Left Handed = -1</param>
            <param name="newPosition">The new position.</param>
            <param name="newLookDirection">The new look direction.</param>
            <param name="newUpDirection">The new up direction.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraMath.InitTurnballRotationAxes(SharpDX.Vector2,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.Cameras.CameraCore,SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            Initializes the 'turn-ball' rotation axes from the specified point.
            </summary>
            <param name="p1">
            The point.
            </param>
            <param name="camera"></param>
            <param name="rotationAxisX"></param>
            <param name="rotationAxisY"></param>
            <param name="viewportHeight"></param>
            <param name="viewportWidth"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Cameras.CameraMath.RotateTurntable(HelixToolkit.SharpDX.Core.CameraMode,SharpDX.Vector2@,SharpDX.Vector3@,System.Single,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.Cameras.CameraCore,System.Int32,SharpDX.Vector3,SharpDX.Vector3@,SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            Rotates using turntable.
            </summary>
            <param name="cameraMode">The camera mode.</param>
            <param name="delta">The delta.</param>
            <param name="rotateAround">The rotate around.</param>
            <param name="sensitivity">The sensitivity.</param>
            <param name="viewportWidth">Width of the viewport.</param>
            <param name="viewportHeight">Height of the viewport.</param>
            <param name="camera">The camera.</param>
            <param name="invertFactor">The invert factor. Right Handed = 1; Left Handed = -1;</param>
            <param name="modelUpDirection">The model up direction.</param>
            <param name="newPosition">The new position.</param>
            <param name="newLookDirection">The new look direction.</param>
            <param name="newUpDirection">The new up direction.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.CameraMode">
            <summary>
            Camera movement modes.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraMode.Inspect">
            <summary>
            Orbits around a point (fixed target position, move closer target when zooming).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraMode.WalkAround">
            <summary>
            Walk around (fixed camera position when rotating, move in camera direction when zooming).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraMode.FixedPosition">
            <summary>
            Fixed camera target, change field of view when zooming.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.CameraRotationMode">
            <summary>
            Camera rotation modes.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraRotationMode.Turntable">
            <summary>
            Turntable is constrained to two axes of rotation (model up and right direction)
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraRotationMode.Turnball">
            <summary>
            Turnball using three axes (look direction, right direction and up direction (on the left/right edges)).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CameraRotationMode.Trackball">
            <summary>
            Using a virtual trackball.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardImage3D.MaskColor">
            <summary>
            If color in image is equal to the mask color, the color will set to transparent in image.
            Default color is Transparent, which did not mask any color.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ImageInfo.HorizontalAlignment">
            <summary>
            Sets or gets the horizontal alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardHorizontalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ImageInfo.VerticalAlignment">
            <summary>
            Sets or gets the vertical alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardVerticalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.BillboardMaterialCore.FixedSize">
            <summary>
            Gets or sets a value indicating whether [fixed size].
            </summary>
            <value>
              <c>true</c> if [fixed size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.BillboardMaterialCore.SamplerDescription">
            <summary>
            Billboard texture sampler description
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.GenericMaterialCore.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPass,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.GenericMaterialCore"/> class.
            </summary>
            <param name="shaderPass">The shader pass. Currently only supports pixel shader parameter properties</param>
            <param name="modelMaterialConstantBufferName">Name of the model material constant buffer in pixel shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.GenericMeshMaterialCore.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPass,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.GenericMeshMaterialCore"/> class.
            </summary>
            <param name="shaderPass">The shader pass. Currently only supports pixel shader parameter properties</param>
            <param name="modelMaterialConstantBufferName">Name of the model material constant buffer in pixel shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.GenericLineMaterialCore.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPass,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.GenericLineMaterialCore"/> class.
            </summary>
            <param name="shaderPass">The shader pass. Currently only supports pixel shader parameter properties</param>
            <param name="modelMaterialConstantBufferName">Name of the model material constant buffer in pixel shader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.GenericPointMaterialCore.#ctor(HelixToolkit.SharpDX.Core.Shaders.ShaderPass,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.GenericPointMaterialCore"/> class.
            </summary>
            <param name="shaderPass">The shader pass. Currently only supports pixel shader parameter properties</param>
            <param name="modelMaterialConstantBufferName">Name of the model material constant buffer in pixel shader.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineArrowHeadMaterialCore.ArrowSize">
            <summary>
            Gets or sets the size of the arrow.
            </summary>
            <value>
            The size of the arrow.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.Thickness">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.Smoothness">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.LineColor">
            <summary>
            Final Line Color = LineColor * PerVertexLineColor
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.FixedSize">
            <summary>
            Gets or sets a value indicating whether [fixed size].
            </summary>
            <value>
              <c>true</c> if [fixed size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.TextureScale">
            <summary>
            Gets or sets the texture scale.
            </summary>
            <value>
            The texture scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.AlphaThreshold">
            <summary>
            Gets or sets the alpha threshold. Pixel with color alpha value smaller than threshold will be set to transparent.
            <para>This is used to avoid sampler color interpolation effects.</para>
            </summary>
            <value>
            The alpha threshold
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialCore.SamplerDescription">
            <summary>
            Billboard texture sampler description
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AlbedoColor">
            <summary>
            Gets or sets the color of the albedo.
            </summary>
            <value>
            The color of the albedo.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.EmissiveColor">
            <summary>
            Gets or sets the color of the emissive.
            </summary>
            <value>
            The color of the emissive.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MetallicFactor">
            <summary>
            Gets or sets the metallic factor. If RMA map is used, for each pixel, metallic factor = <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MetallicFactor"/> * RMA map B Channel
            </summary>
            <value>
            The metallic factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessFactor">
            <summary>
            Gets or sets the roughness factor. If RMA map is used, for each pixel, roughness factor = <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessFactor"/> * RMA map G Channel
            </summary>
            <value>
            The roughness factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcclusionFactor">
            <summary>
            Gets or sets the ambient occlusion factor. If RMA map is used, for each pixel, ambient occlusion factor = <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcclusionFactor"/> * RMA map R Channel
            </summary>
            <value>
            The ambient occlusion factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.ReflectanceFactor">
            <summary>
            Gets or sets the reflectance factor.
            </summary>
            <value>
            The reflectance factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.ClearCoatStrength">
            <summary>
            Gets or sets the clear coat strength.
            </summary>
            <value>
            The clear coat strength.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.ClearCoatRoughness">
            <summary>
            Gets or sets the clear coat roughness.
            </summary>
            <value>
            The clear coat roughness.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RenderDisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RenderShadowMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RenderEnvironmentMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RenderIrradianceMap">
            <summary>
            Gets or sets a value indicating whether [render irrandiance map].
            </summary>
            <value>
              <c>true</c> if [render irrandiance map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RenderEmissiveMap">
            <summary>
            Gets or sets a value indicating whether [render emissive map].
            </summary>
            <value>
              <c>true</c> if [render emissive map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.EnableAutoTangent">
            <summary>
            Gets or sets a value indicating whether [enable automatic tangent].
            </summary>
            <value>
              <c>true</c> if [enable automatic tangent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AlbedoMap">
            <summary>
            Gets or sets the albedo map.
            </summary>
            <value>
            The albedo map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AlbedoMapFilePath">
            <summary>
            Gets or sets the albedo map file path. Used for export only
            </summary>
            <value>
            The albedo map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.EmissiveMap">
            <summary>
            Gets or sets the emissive map.
            </summary>
            <value>
            The emissive map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.EmissiveMapFilePath">
            <summary>
            Gets or sets the emissive map file path. Only for export
            </summary>
            <value>
            The emissive map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.NormalMap">
            <summary>
            Gets or sets the NormalMap.
            </summary>
            <value>
            NormalMap
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.NormalMapFilePath">
            <summary>
            Gets or sets the normal map file path. Only for export
            </summary>
            <value>
            The normal map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.DisplacementMap">
            <summary>
            Gets or sets the DisplacementMap.
            </summary>
            <value>
            DisplacementMap
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.DisplacementMapFilePath">
            <summary>
            Gets or sets the displacement map file path. Only for export
            </summary>
            <value>
            The displacement map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.IrradianceMap">
            <summary>
            Gets or sets the irradiance map.
            </summary>
            <value>
            The irradiance map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.IrradianceMapFilePath">
            <summary>
            Gets or sets the irradiance map file path. Only for export
            </summary>
            <value>
            The irradiance map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessMetallicMap">
            <summary>
            Gets or sets the Roughness, Metallic map.
            glTF2 defines occlusion as R channel, roughness as G channel, metalness as B channel.
            If provides RMA map in one texture, set both <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessMetallicMap"/> and <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcculsionMap"/> to the same texture.
            </summary>
            <value>
            The rma map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessMetallicMapFilePath">
            <summary>
            Gets or sets the rma map file path. Only for export
            </summary>
            <value>
            The rma map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcculsionMap">
            <summary>
            Gets or sets the separate Ambient Occlusion map. 
            glTF2 defines occlusion as R channel, roughness as G channel, metalness as B channel.
            If provides RMA map in one texture, set both <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.RoughnessMetallicMap"/> and <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcculsionMap"/> to the same texture.
            </summary>
            <value>
            The ao map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.AmbientOcculsionMapFilePath">
            <summary>
            Gets or sets the ao map file path.
            </summary>
            <value>
            The ao map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.DisplacementMapScaleMask">
            <summary>
            Gets or sets the DisplacementMapScaleMask.
            </summary>
            <value>
            DisplacementMapScaleMask
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.UVTransform">
            <summary>
            Gets or sets the uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.SurfaceMapSampler">
            <summary>
            Gets or sets the surface map sampler.
            </summary>
            <value>
            The surface map sampler.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.DisplacementMapSampler">
            <summary>
            Gets or sets the DisplacementMapSampler.
            </summary>
            <value>
            DisplacementMapSampler
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.IBLSampler">
            <summary>
            Gets or sets the IBL sampler.
            </summary>
            <value>
            The IBL sampler.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MinDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MinTessellationDistance"/>.
            </summary>
            <value>
            The minimum distance tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MaxDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.MaxDistanceTessellationFactor"/>
            </summary>
            <value>
            The maximum distance tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vert color blending factor.
            Diffuse = (1- <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.VertexColorBlendingFactor"/>) * Diffuse + <see cref="P:HelixToolkit.SharpDX.Core.Model.PBRMaterialCore.VertexColorBlendingFactor"/> * Vertex Color
            </summary>
            <value>
            The vert color blending factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.Figure">
            <summary>
            Gets or sets the figure.
            </summary>
            <value>
            The figure.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.FigureRatio">
            <summary>
            Gets or sets the figure ratio.
            </summary>
            <value>
            The figure ratio.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.PointColor">
            <summary>
            Final Point Color = PointColor * PerVertexPointColor
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.FixedSize">
            <summary>
            Gets or sets a value indicating whether [fixed size].
            </summary>
            <value>
              <c>true</c> if [fixed size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.EnableColorBlending">
            <summary>
            Gets or sets a value indicating whether [enable blending].
            <para>Once enabled, final color 
            = <see cref="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.BlendingFactor"/> * <see cref="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.PointColor"/> + (1 - <see cref="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.BlendingFactor"/>) * Vertex Color.</para>
            </summary>
            <value>
              <c>true</c> if [enable blending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.BlendingFactor">
            <summary>
            Gets or sets the blending factor.
            <para>Used when <see cref="P:HelixToolkit.SharpDX.Core.Model.PointMaterialCore.EnableColorBlending"/> = true.</para>
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.BillboardMaterialVariable.ShaderTextureName">
            <summary>
            Set texture variable name insider shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.BillboardMaterialVariable.ShaderTextureSamplerName">
            <summary>
            Set texture sampler variable name inside shader for binding
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.BillboardMaterialVariable.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.BillboardMaterialCore,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.BillboardMaterialVariable"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The core.</param>
            <param name="billboardPassName">Name of the billboard pass.</param>
            <param name="billboardOITPassName">Name of the billboard oit pass.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables.ShaderStripeTexXName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables.ShaderSamplerDiffuseTexName">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore)">
            <summary>
            
            </summary>
            <param name="manager"></param>
            <param name="technique"></param>
            <param name="materialCore"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.PixelShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="shader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialVariables.OnDispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.ShaderDiffuseTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.SamplerDiffuseTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.SamplerShadowMapName">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The material core.</param>
            <param name="materialPassName">Name of the material pass.</param>
            <param name="wireframePassName">Name of the wireframe pass.</param>
            <param name="materialOITPassName">Name of the material oit pass.</param>
            <param name="wireframeOITPassName">Name of the wireframe oit pass.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.#ctor(System.String,HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables"/> class. This construct will be using the PassName pass into constructor only.
            </summary>
            <param name="passName">Name of the pass.</param>
            <param name="manager">The manager.</param>
            <param name="technique"></param>
            <param name="material">The material.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.PixelShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="shader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialVariables.OnDispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.LineArrowMaterialVariable.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.LineArrowHeadMaterialCore,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The material core.</param>
            <param name="linePassName">Name of the line pass.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable.ShaderTextureName">
            <summary>
            Set texture variable name insider shader for binding
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable.ShaderTextureSamplerName">
            <summary>
            Set texture sampler variable name inside shader for binding
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.LineMaterialCore,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.LineMaterialVariable"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The material core.</param>
            <param name="linePassName">Name of the line pass.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PassOnlyMaterialVariable">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PassOnlyMaterialVariable.#ctor(System.String,HelixToolkit.SharpDX.Core.IRenderTechnique,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.PassOnlyMaterialVariable"/> class.
            </summary>
            <param name="passName">Name of the pass.</param>
            <param name="technique">The technique.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="wireframePassName">Name of the wireframe pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.EffectAttributeNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.IEffectAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.EffectAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.EffectAttributes"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.AddAttribute(System.String,System.Object)">
            <summary>
            Adds the attribute.
            </summary>
            <param name="attName">Name of the att.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.RemoveAttribute(System.String)">
            <summary>
            Removes the attribute.
            </summary>
            <param name="attName">Name of the att.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.GetAttribute(System.String)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="attName">Name of the att.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.TryGetAttribute(System.String,System.Object@)">
            <summary>
            Tries the get attribute.
            </summary>
            <param name="attName">Name of the att.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.Parse(System.String)">
            <summary>
            Parses the specified att string.
            </summary>
            <param name="attString">The att string.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EffectAttributes.Parse(System.String,HelixToolkit.SharpDX.Core.Model.IEffectAttributeParser)">
            <summary>
            Parses the specified att string.
            </summary>
            <param name="attString">The att string.</param>
            <param name="parser">The parser.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.IEffectAttributeParser">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.EffectParserConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.DefaultEffectAttributeParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.DefaultEffectAttributeParser.Parse(System.String)">
            <summary>
            Parses the specified att string.
            </summary>
            <param name="attString">The att string.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.OriginalBounds">
            <summary>
            Gets the original bound from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound"/>
            </summary>
            <value>
            The original bound.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.OriginalBoundsSphere">
            <summary>
            Gets the original bound sphere from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere"/> 
            </summary>
            <value>
            The original bound sphere.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.Bounds">
            <summary>
            Gets the bounds. Usually same as <see cref="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.OriginalBounds"/>. If have instances, the bound will enclose all instances.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.BoundsWithTransform">
            <summary>
            Gets the bounds with transform. Usually same as <see cref="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.Bounds"/>. If have transform, the bound is the transformed <see cref="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.Bounds"/>
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.BoundsSphere">
            <summary>
            Gets the bounds sphere. Usually same as <see cref="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.OriginalBoundsSphere"/>. If have instances, the bound sphere will enclose all instances.
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.BoundsSphereWithTransform">
            <summary>
            Gets the bounds sphere with transform. If have transform, the bound is the transformed <see cref="F:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.BoundsSphere"/>
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Components.GeometryBoundManager.CheckGeometry">
            <summary>
            <para>Check geometry validity.</para>
            Return false if (this.geometryInternal == null || this.geometryInternal.Positions == null || this.geometryInternal.Positions.Count == 0 || this.geometryInternal.Indices == null || this.geometryInternal.Indices.Count == 0)
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse.
            </summary>
            <value>
            The color of the diffuse.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.ColorStripeX">
            <summary>
            Gets or sets the color stripe x. Use texture coordinate X for sampling
            </summary>
            <value>
            The color stripe x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.ColorStripeY">
            <summary>
            Gets or sets the color stripe y. Use texture coordinate Y for sampling
            </summary>
            <value>
            The color stripe y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.ColorStripeXEnabled">
            <summary>
            Gets or sets a value indicating whether [color stripe x enabled].
            </summary>
            <value>
              <c>true</c> if [color stripe x enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.ColorStripeYEnabled">
            <summary>
            Gets or sets a value indicating whether [color stripe y enabled].
            </summary>
            <value>
              <c>true</c> if [color stripe y enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.ColorStripeMaterialCore.ColorStripeSampler">
            <summary>
            Gets or sets the DiffuseMapSampler.
            </summary>
            <value>
            DiffuseMapSampler
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse.
            </summary>
            <value>
            The color of the diffuse.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.DiffuseMap">
            <summary>
            Gets or sets the diffuse map.
            </summary>
            <value>
            The diffuse map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.DiffuseMapFilePath">
            <summary>
            Gets or sets the diffuse map file path. Only for export
            </summary>
            <value>
            The diffuse map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.UVTransform">
            <summary>
            Gets or sets the uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.DiffuseMapSampler">
            <summary>
            Gets or sets the DiffuseMapSampler.
            </summary>
            <value>
            DiffuseMapSampler
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.RenderDiffuseMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.EnableUnLit">
            <summary>
            Gets or sets a value indicating whether disable lighting. Directly render diffuse color and diffuse map
            </summary>
            <value>
              <c>true</c> if [enable un lit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vert color blending factor.
            Diffuse = (1- <see cref="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.VertexColorBlendingFactor"/>) * Diffuse + <see cref="P:HelixToolkit.SharpDX.Core.Model.DiffuseMaterialCore.VertexColorBlendingFactor"/> * Vertex Color
            </summary>
            <value>
            The vert color blending factor.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.BindMaterialResources(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Binds the material resources.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="shaderPass">The shader pass.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.GetPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.Draw(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.IAttachableBufferModel,System.Int32)">
            <summary>
            Draws the specified device context.
            </summary>
            <param name="deviceContext">The device context.</param>
            <param name="bufferModel">The buffer model.</param>
            <param name="instanceCount">The instance count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.GetShadowPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the shadow pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.GetWireframePass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the wireframe pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.EmptyMaterialVariable.GetDepthPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the depth pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.MaterialCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialCore.CreateMaterialVariables(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique)">
            <summary>
            Creates the material variables.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.MaterialVariable">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.MaterialVariable.ID">
            <summary>
            Gets or sets the identifier. Used for material sorting
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.MaterialVariable.MaterialCB">
            <summary>
            Gets the material cb.
            </summary>
            <value>
            The material cb.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.MaterialVariable.NonMaterialCB">
            <summary>
            Gets the non material cb. Used for non material related rendering such as Shadow map
            </summary>
            <value>
            The non material cb.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Shaders.ConstantBufferDescription,HelixToolkit.SharpDX.Core.Model.MaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.MaterialVariable"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="meshMaterialConstantBufferDesc">The Constant Buffer description</param>
            <param name="materialCore"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.BindMaterialResources(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Binds the material textures, samplers, etc,.
            </summary>
            <param name="context"></param>
            <param name="deviceContext">The device context.</param>
            <param name="shaderPass">The shader pass.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.GetPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.GetShadowPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the shadow pass.
            </summary>
            <param name="renderType"></param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.GetWireframePass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the wireframe pass.
            </summary>
            <param name="renderType"></param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.GetDepthPass(HelixToolkit.SharpDX.Core.RenderType,HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Gets the depth pass.
            </summary>
            <param name="renderType">Type of the render.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.GetPassByName(System.String)">
            <summary>
            Gets the name of the pass by.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.UpdateMaterialStruct``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@,System.Int32)">
            <summary>
            Updates the material structure. And upload data to constant buffer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="structSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.UpdateNonMaterialStruct``1(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,``0@,System.Int32)">
            <summary>
            Updates the non material structure.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="structSize">Size of the structure.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.Draw(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.IAttachableBufferModel,System.Int32)">
            <summary>
            Draws the specified device context.
            </summary>
            <param name="deviceContext">The device context.</param>
            <param name="bufferModel">Geometry buffer model.</param>
            <param name="instanceCount">The instance count.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.WriteValue``1(System.String,``0@)">
            <summary>
            Writes the value to internal buffer array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.WriteValue``1(System.String,``0)">
            <summary>
            Writes the value to internal buffer array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.WriteValue``1(``0@,System.Int32)">
            <summary>
            Writes the value to internal buffer array with offset
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.MaterialVariable.OnDispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.NormalMaterialCore">
            <summary>
            Vertex Normal Material
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.ColorMaterialCore">
            <summary>
            Vertex Color Material
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PositionMaterialCore">
            <summary>
            Vertex Position Material
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.NormalVectorMaterialCore">
            <summary>
            Vertex Normal Vector Material
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.AmbientColor">
            <summary>
            Gets or sets the color of the ambient.
            </summary>
            <value>
            The color of the ambient.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse.
            </summary>
            <value>
            The color of the diffuse.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.EmissiveColor">
            <summary>
            Gets or sets the color of the emissive.
            </summary>
            <value>
            The color of the emissive.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.ReflectiveColor">
            <summary>
            Gets or sets the color of the reflective.
            </summary>
            <value>
            The color of the reflective.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.SpecularColor">
            <summary>
            Gets or sets the color of the specular.
            </summary>
            <value>
            The color of the specular.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.SpecularShininess">
            <summary>
            Gets or sets the specular shininess.
            </summary>
            <value>
            The specular shininess.
            </value>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseMap">
            <summary>
            Gets or sets the diffuse map.
            </summary>
            <value>
            The diffuse map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseMapFilePath">
            <summary>
            Gets or sets the diffuse map file path. For export only
            </summary>
            <value>
            The diffuse map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseAlphaMap">
            <summary>
            Gets or sets the DiffuseAlphaMap.
            </summary>
            <value>
            DiffuseAlphaMap
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseAlphaMapFilePath">
            <summary>
            Gets or sets the diffuse alpha map file path. For export only
            </summary>
            <value>
            The diffuse alpha map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.NormalMap">
            <summary>
            Gets or sets the NormalMap.
            </summary>
            <value>
            NormalMap
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.NormalMapFilePath">
            <summary>
            Gets or sets the normal map file path. For export only
            </summary>
            <value>
            The normal map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.SpecularColorMap">
            <summary>
            Gets or sets the specular color map.
            </summary>
            <value>
            The specular color map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.SpecularColorMapFilePath">
            <summary>
            Gets or sets the specular color map file path. For export only
            </summary>
            <value>
            The specular color map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DisplacementMap">
            <summary>
            Gets or sets the DisplacementMap.
            </summary>
            <value>
            DisplacementMap
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DisplacementMapFilePath">
            <summary>
            Gets or sets the displacement file path. For export only
            </summary>
            <value>
            The displacement file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.EmissiveMap">
            <summary>
            Gets or sets the emissive map.
            </summary>
            <value>
            The emissive map.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.EmissiveMapFilePath">
            <summary>
            Gets or sets the emissive map file path. For export only
            </summary>
            <value>
            The emissive map file path.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DisplacementMapScaleMask">
            <summary>
            Gets or sets the DisplacementMapScaleMask.
            </summary>
            <value>
            DisplacementMapScaleMask
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.UVTransform">
            <summary>
            Gets or sets the uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DiffuseMapSampler">
            <summary>
            Gets or sets the DiffuseMapSampler.
            </summary>
            <value>
            DiffuseMapSampler
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.DisplacementMapSampler">
            <summary>
            Gets or sets the DisplacementMapSampler.
            </summary>
            <value>
            DisplacementMapSampler
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderDiffuseMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderDiffuseAlphaMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderNormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderSpecularColorMap">
            <summary>
            Gets or sets a value indicating whether [render specular color map].
            </summary>
            <value>
              <c>true</c> if [render specular color map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderDisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderEmissiveMap">
            <summary>
            Gets or sets a value indicating whether [render emissive map].
            </summary>
            <value>
              <c>true</c> if [render emissive map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.EnableAutoTangent">
            <summary>
            Gets or sets a value indicating whether [enable automatic tangent].
            </summary>
            <value>
              <c>true</c> if [enable automatic tangent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.MinDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.MinTessellationDistance"/>.
            </summary>
            <value>
            The minimum distance tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.MaxDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.MaxDistanceTessellationFactor"/>
            </summary>
            <value>
            The maximum distance tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderShadowMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.RenderEnvironmentMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vert color blending factor.
            Diffuse = (1- <see cref="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.VertexColorBlendingFactor"/>) * Diffuse + <see cref="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialCore.VertexColorBlendingFactor"/> * Vertex Color
            </summary>
            <value>
            The vert color blending factor.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Light3DSceneShared">
            <summary>
            Used to hold shared variables for Lights per scene
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Light3DSceneShared.#ctor(HelixToolkit.SharpDX.Core.ShaderManager.IConstantBufferPool)">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.LightsBufferModel">
            <summary>
            Default Light Model
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.LightsBufferModel.HasEnvironmentMap">
            <summary>
            Gets or sets a value indicating whether the scene has environment map.
            </summary>
            <value>
              <c>true</c> if the scene has environment map; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.LightsBufferModel.EnvironmentMapMipLevels">
            <summary>
            Gets or sets the environment map mip levels.
            </summary>
            <value>
            The environment map mip levels.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PBRMaterialVariable">
            <summary>
            Physics based rendering material
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PBRMaterialVariable.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.VertexShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="shader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PBRMaterialVariable.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.PixelShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
            <param name="shader"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PointMaterialVariable">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PointMaterialVariable.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.PointMaterialCore,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.PointMaterialVariable"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The material core.</param>
            <param name="pointPassName">Name of the point pass.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.SampleDistance">
            <summary>
            Gets or sets the step size, controls the quality.
            </summary>
            <value>
            The size of the step.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.MaxIterations">
            <summary>
            Gets or sets the iteration. Usually set to VolumeDepth.
            </summary>
            <value>
            The iteration.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.IterationOffset">
            <summary>
            Gets or sets the iteration offset. This can be used to achieve cross section
            </summary>
            <value>
            The iteration offset.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.IsoValue">
            <summary>
            Gets or sets the iso value. Only data with isovalue > sepecified iso value will be displayed.
            Value must be normalized to 0~1. Default = 1, show all data.
            </summary>
            <value>
            The iso value.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.IVolumeTextureMaterial.TransferMap">
            <summary>
            Gets or sets the transfer map.
            </summary>
            <value>
            The transfer map.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1">
            <summary>
            Abstract class for VolumeTextureMaterial
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.SampleDistance">
            <summary>
            Gets or sets the step size, controls the quality.
            </summary>
            <value>
            The size of the step.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.MaxIterations">
            <summary>
            Gets or sets the iteration. Usually set to VolumeDepth.
            </summary>
            <value>
            The iteration.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.IterationOffset">
            <summary>
            Gets or sets the iteration offset. This can be used to achieve cross section
            </summary>
            <value>
            The iteration offset.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.IsoValue">
            <summary>
            Gets or sets the iso value. Only data with isovalue > sepecified iso value will be displayed
            Value must be normalized to 0~1. Default = 1, show all data.
            </summary>
            <value>
            The iso value.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.VolumeTextureDDS3DMaterialCore">
            <summary>
            Default Volume Texture Material. Supports 3D DDS memory stream as <see cref="P:HelixToolkit.SharpDX.Core.Model.VolumeTextureMaterialCoreBase`1.VolumeTexture"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.VolumeTextureRawDataMaterialCore">
            <summary>
            Used to use raw data as Volume 3D texture. 
            User must create their own data reader to read texture files as pixel byte[] and pass the necessary information as <see cref="T:HelixToolkit.SharpDX.Core.Model.VolumeTextureParams"/>
            <para>
            Pixel Byte[] is equal to Width * Height * Depth * BytesPerPixel.
            </para>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.VolumeTextureDiffuseMaterialCore">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.MetaDataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Metadata">
            <summary>
            Represents a container for holding metadata, representing as key-value pairs.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Metadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Metadata"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Metadata.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Metadata"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Metadata.Entry">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Metadata.Entry.#ctor(HelixToolkit.SharpDX.Core.Model.MetaDataType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Metadata.Entry"/> struct.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Metadata.Entry.DataType">
            <summary>
            Gets the type of the data.
            </summary>
            <value>
            The type of the data.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Metadata.Entry.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.OrderKey">
            <summary>
            Render order key
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParametricSurface3DNode.AddTriangle(HelixToolkit.SharpDX.Core.MeshGeometry3D,System.Int32,System.Int32,System.Int32)">
            <summary>
            The add triangle.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
            <param name="i1">
            The i 1.
            </param>
            <param name="i2">
            The i 2.
            </param>
            <param name="i3">
            The i 3.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParametricSurface3DNode.Evaluate(System.Double,System.Double,SharpDX.Vector2@)">
            <summary>
            Evaluates the surface at the specified u,v parameters.
            </summary>
            <param name="u">
            The u parameter.
            </param>
            <param name="v">
            The v parameter.
            </param>
            <param name="textureCoord">
            The texture coordinates.
            </param>
            <returns>
            The evaluated <see cref="T:SharpDX.Vector3"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParametricSurface3DNode.IsDefined(SharpDX.Vector3)">
            <summary>
            Determines whether the specified point is defined.
            </summary>
            <param name="point">
            The point.
            </param>
            <returns>
            The is defined.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode">
            <summary>
            Static mesh batching. Supports multiple <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Materials"/>. All geometries are merged into single buffer for rendering. Indivisual material color infomations are encoded into vertex buffer.
            <para>
            <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Material"/> is used if <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Materials"/> = null. And also used for shared material texture binding.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OriginalBounds">
            <summary>
            Gets the original bound from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound"/>
            </summary>
            <value>
            The original bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OriginalBoundsSphere">
            <summary>
            Gets the original bound sphere from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere"/> 
            </summary>
            <value>
            The original bound sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Bounds">
            <summary>
            Gets the bounds. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OriginalBounds"/>. If have instances, the bound will enclose all instances.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.BoundsWithTransform">
            <summary>
            Gets the bounds with transform. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Bounds"/>. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Bounds"/>
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.BoundsSphere">
            <summary>
            Gets the bounds sphere. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OriginalBoundsSphere"/>. If have instances, the bound sphere will enclose all instances.
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.BoundsSphereWithTransform">
            <summary>
            Gets the bounds sphere with transform. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.BoundsSphere"/>
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.DepthBias">
            <summary>
            Gets or sets the depth bias.
            </summary>
            <value>
            The depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.SlopeScaledDepthBias">
            <summary>
            Gets or sets the slope scaled depth bias.
            </summary>
            <value>
            The slope scaled depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.IsMSAAEnabled">
            <summary>
            Gets or sets a value indicating whether Multisampling Anti-Aliasing enabled.
            </summary>
            <value>
              <c>true</c> if this instance is msaa enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.IsScissorEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is scissor enabled.
            </summary>
            <value>
              <c>true</c> if this instance is scissor enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>
            The fill mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.IsDepthClipEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is depth clip enabled.
            </summary>
            <value>
              <c>true</c> if this instance is depth clip enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.FrontCCW">
            <summary>
            Gets or sets a value indicating whether [front CCW].
            </summary>
            <value>
              <c>true</c> if [front CCW]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CullMode">
            <summary>
            Gets or sets the cull mode.
            </summary>
            <value>
            The cull mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.EnableViewFrustumCheck">
            <summary>
            Gets or sets a value indicating whether [enable view frustum check].
            </summary>
            <value>
              <c>true</c> if [enable view frustum check]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.PostEffects">
            <summary>
            Gets or sets the post effects.
            </summary>
            <value>
            The post effects.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.IsThrowingShadow">
            <summary>
            Gets or sets a value indicating whether this instance is throwing shadow.
            </summary>
            <value>
              <c>true</c> if this instance is throwing shadow; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.InvertNormal">
            <summary>
            Gets or sets a value indicating whether [invert normal].
            </summary>
            <value>
              <c>true</c> if [invert normal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.WireframeColor">
            <summary>
            Gets or sets the color of the wireframe.
            </summary>
            <value>
            The color of the wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.RenderWireframe">
            <summary>
            Gets or sets a value indicating whether [render wireframe].
            </summary>
            <value>
              <c>true</c> if [render wireframe]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.IsTransparent">
            <summary>
            Specifiy if model material is transparent.
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.Material">
             <summary>
            
             </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CreateRasterStateFunc">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnCreateRasterState">
            <summary>
            Create raster state description delegate.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnCreateRasterState"/> is set, then <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CreateRasterState"/> will not be called.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnRasterStateChanged">
            <summary>
            Called when [raster state changed].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CreateRasterState">
            <summary>
            Create raster state description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.AttachMaterial">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            This function initialize the Geometry Buffer and Instance Buffer
            </summary>
            <param name="host"></param>
            <returns>
            Return true if attached
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.OnDetach">
            <summary>
            Used to override Detach
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.TestViewFrustum(SharpDX.BoundingFrustum@)">
            <summary>
            Views the frustum test.
            </summary>
            <param name="viewFrustum">The view frustum.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.CanHitTest(HelixToolkit.SharpDX.Core.HitTestContext)">
            <summary>
            Determines whether this instance [can hit test] the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance [can hit test] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BatchedMeshNode.UpdateNotRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the not render.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneGroupNode.Bones">
            <summary>
            Gets or sets the bones.
            </summary>
            <value>
            The bones.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneGroupNode.HasBoneGroup">
            <summary>
            Always return false for bone groups
            </summary>
            <value>
              <c>true</c> if this instance has bone group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ContinuousRenderNode">
            <summary>
            Use this node to keep update rendering in each frame.
            <para>Default behavior for render host is lazy rendering. 
            Only property changes trigger a render inside render loop. 
            However, sometimes user want to keep updating rendering for each frame such as doing shader animation using TimeStamp.
            Use this node to invalidate rendering and keep render host busy.</para>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.AutoSpacing">
            <summary>
            Gets or sets a value indicating whether [automatic spacing].
            </summary>
            <value>
              <c>true</c> if [automatic spacing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.AutoSpacingRate">
            <summary>
            Gets or sets the automatic spacing rate.
            </summary>
            <value>
            The automatic spacing rate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.AcutalSpacing">
            <summary>
            Gets the acutal spacing.
            </summary>
            <value>
            The acutal spacing.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.GridSpacing">
            <summary>
            Gets or sets the grid spacing.
            </summary>
            <value>
            The grid spacing.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.GridThickness">
            <summary>
            Gets or sets the grid thickness.
            </summary>
            <value>
            The grid thickness.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.FadingFactor">
            <summary>
            Gets or sets the fading factor.
            </summary>
            <value>
            The fading factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.PlaneColor">
            <summary>
            Gets or sets the color of the plane.
            </summary>
            <value>
            The color of the plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.GridColor">
            <summary>
            Gets or sets the color of the grid.
            </summary>
            <value>
            The color of the grid.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.RenderShadowMap">
            <summary>
            Gets or sets a value indicating whether [render shadow map].
            </summary>
            <value>
              <c>true</c> if [render shadow map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.UpAxis">
            <summary>
            Gets or sets up axis.
            </summary>
            <value>
            Up axis.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.Offset">
            <summary>
            Gets or sets the axis plane offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.GridPattern">
            <summary>
            Gets or sets the type of the grid.
            </summary>
            <value>
            The type of the grid.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.AxisPlaneGridNode"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.TopMostGroupNode">
            <summary>
            Provides a way to render child elements always on top of other elements.
            This is rendered at the same level of screen spaced group items.
            Child items do not support post effects.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.GridDensity">
            <summary>
            Gets or sets the grid density.
            </summary>
            <value>
            The grid density.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.DimmingFactor">
            <summary>
            Gets or sets the dimming factor.
            </summary>
            <value>
            The dimming factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.BlendingFactor">
            <summary>
            Gets or sets the blending factor for grid and original mesh color blending
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.XRayDrawingPassName">
            <summary>
            Gets or sets the name of the x ray drawing pass. This is the final pass to draw mesh and grid overlay onto render target
            </summary>
            <value>
            The name of the x ray drawing pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRayGrid.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenQuadNode.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenQuadNode.Sampler">
            <summary>
            Gets or sets the sampler.
            </summary>
            <value>
            The sampler.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.VolumeTextureNode.Material">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.Instances">
            <summary>
            Gets or sets the instances.
            </summary>
            <value>
            The instances.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.HasInstances">
            <summary>
            Gets a value indicating whether this instance has instances.
            </summary>
            <value>
              <c>true</c> if this instance has instances; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.InstanceBuffer">
            <summary>
            Gets the instance buffer.
            </summary>
            <value>
            The instance buffer.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.InstancesChanged">
            <summary>
            Instanceses the changed.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.reuseVertexArrayBuffer">
            <summary>
            The reuse vertex array buffer
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CreateRasterStateFunc">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCreateRasterState">
            <summary>
            Create raster state description delegate.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCreateRasterState"/> is set, then <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CreateRasterState"/> will not be called.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BufferModelInternal">
            <summary>
            Gets the buffer model internal.
            </summary>
            <value>
            The buffer model internal.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.GeometryValid">
            <summary>
            Gets a value indicating whether [geometry valid].
            </summary>
            <value>
              <c>true</c> if [geometry valid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundManager">
            <summary>
            Gets or sets the bound manager.
            </summary>
            <value>
            The bound manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OriginalBounds">
            <summary>
            Gets the original bound from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound"/>
            </summary>
            <value>
            The original bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OriginalBoundsSphere">
            <summary>
            Gets the original bound sphere from the geometry. Same as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere"/> 
            </summary>
            <value>
            The original bound sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.Bounds">
            <summary>
            Gets the bounds. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OriginalBounds"/>. If have instances, the bound will enclose all instances.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsWithTransform">
            <summary>
            Gets the bounds with transform. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.Bounds"/>. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.Bounds"/>
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsSphere">
            <summary>
            Gets the bounds sphere. Usually same as <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OriginalBoundsSphere"/>. If have instances, the bound sphere will enclose all instances.
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsSphereWithTransform">
            <summary>
            Gets the bounds sphere with transform. If have transform, the bound is the transformed <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsSphere"/>
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.DepthBias">
            <summary>
            Gets or sets the depth bias.
            </summary>
            <value>
            The depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.SlopeScaledDepthBias">
            <summary>
            Gets or sets the slope scaled depth bias.
            </summary>
            <value>
            The slope scaled depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.IsMSAAEnabled">
            <summary>
            Gets or sets a value indicating whether Multisampling Anti-Aliasing enabled.
            </summary>
            <value>
              <c>true</c> if this instance is msaa enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.IsScissorEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is scissor enabled.
            </summary>
            <value>
              <c>true</c> if this instance is scissor enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>
            The fill mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.IsDepthClipEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is depth clip enabled.
            </summary>
            <value>
              <c>true</c> if this instance is depth clip enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.EnableViewFrustumCheck">
            <summary>
            Gets or sets a value indicating whether [enable view frustum check].
            </summary>
            <value>
              <c>true</c> if [enable view frustum check]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.PostEffects">
            <summary>
            Gets or sets the post effects.
            </summary>
            <value>
            The post effects.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.IsThrowingShadow">
            <summary>
            Gets or sets a value indicating whether this instance is throwing shadow.
            </summary>
            <value>
              <c>true</c> if this instance is throwing shadow; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCheckGeometry(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [check geometry].
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCreateBufferModel(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [create buffer model].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnRasterStateChanged">
            <summary>
            Called when [raster state changed].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnGeometryChanged(HelixToolkit.SharpDX.Core.Geometry3D,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [geometry changed].
            </summary>
            <param name="newGeometry">The new geometry.</param>
            <param name="oldGeometry">The old geometry.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CreateRasterState">
            <summary>
            Create raster state description.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCreateRasterState"/> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnCreateRasterState"/> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CreateRasterState"/> will be called.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            This function initialize the Geometry Buffer and Instance Buffer
            </summary>
            <param name="host"></param>
            <returns>
            Return true if attached
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.OnDetach">
            <summary>
            Used to override Detach
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.TestViewFrustum(SharpDX.BoundingFrustum@)">
            <summary>
            Views the frustum test.
            </summary>
            <param name="viewFrustum">The view frustum.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.PreHitTestOnBounds(HelixToolkit.SharpDX.Core.HitTestContext)">
            <summary>
            Pre hit test on <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsWithTransform"/> and <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.BoundsSphereWithTransform"/>. 
            If return false, <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnHitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)"/> will not be called.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.CanHitTest(HelixToolkit.SharpDX.Core.HitTestContext)">
            <summary>
            Determines whether this instance [can hit test] the specified context.
            </summary>
            <param name="context">The hit context.</param>
            <returns>
              <c>true</c> if this instance [can hit test] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GeometryNode.UpdateNotRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the not render.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnChildNodeChangedArgs.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>
            The node.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnChildNodeChangedArgs.Operation">
            <summary>
            Gets or sets a value indicating whether [add =true or remove = false].
            </summary>
            <value>
              <c>true</c> if [add or remove]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnChildNodeChangedArgs.#ctor(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.Operation)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnChildNodeChangedArgs"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="operation">if set to <c>true</c> [add or remove].</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.Metadata">
            <summary>
            Gets or sets the metadata.
            Metadata is used to store additional data to describe the scene node.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.AddChildNode(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Adds the child node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">SceneNode already attach to a different node</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.MoveChildNode(System.Int32,System.Int32)">
            <summary>
            Moves the child node.
            </summary>
            <param name="fromIndex">From index.</param>
            <param name="toIndex">To index.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.InsertChildNode(System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Inserts the child node.
            </summary>
            <param name="index">The index.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.TransferChildNode(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase)">
            <summary>
            Transfers the child node from current group node to another group node.
            </summary>
            <param name="targetGroup">The target group.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.RemoveChildNode(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Removes the child node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.TryGetNode(System.Guid,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode@)">
            <summary>
            Tries the get node.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnHitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="context">The context.</param>
            <param name="totalModelMatrix">The total model matrix.</param>
            <param name="ray">The ray.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNodeBase.OnDispose(System.Boolean)">
            <summary>
            Called when [dispose].
            </summary>
            <param name="disposeManagedResources">if set to <c>true</c> [dispose managed resources].</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MaterialGeometryNode.IsTransparent">
            <summary>
            Specifiy if model material is transparent.
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MaterialGeometryNode.Material">
             <summary>
            
             </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnCreateBufferModel(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [create buffer model].
            </summary>
            <param name="modelGuid"></param>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnCheckGeometry(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [check geometry].
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.CreateRasterState">
            <summary>
            Create raster state description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BillboardNode.OnHitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="context">The context.</param>
            <param name="totalModelMatrix">The total model matrix.</param>
            <param name="ray">The ray.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.BoneMatrices">
            <summary>
            Gets or sets the bone matrices.
            </summary>
            <value>
            The bone matrices.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.Bones">
            <summary>
            Gets or sets the bones.
            </summary>
            <value>
            The bones.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.IsSkeletonNode">
            <summary>
            Gets or sets a value indicating whether this node is used to show skeleton. Only used as an indication.
            </summary>
            <value>
              <c>true</c> if this node is used to show skeleton; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.HasBoneGroup">
            <summary>
            Gets or sets a value indicating whether this node has bone group. 
            <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.BoneGroupNode"/> shares bones with multiple <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode"/>
            </summary>
            <value>
              <c>true</c> if this instance has bone group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.CreateSkeletonNode(HelixToolkit.SharpDX.Core.Model.MaterialCore,System.String,System.Single)">
            <summary>
            Creates the skeleton node.
            </summary>
            <param name="material">The material.</param>
            <param name="effectName">Name of the effect.</param>
            <param name="scale">The scale.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.CreateSkeletonNode(HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode,HelixToolkit.SharpDX.Core.Model.MaterialCore,System.String,System.Single)">
            <summary>
            Creates the skeleton node.
            </summary>
            <param name="node">The node.</param>
            <param name="material">The material.</param>
            <param name="effectName">Name of the effect.</param>
            <param name="scale">The scale.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.TryGetSkinnedVertices(HelixToolkit.SharpDX.Core.IEffectsManager)">
            <summary>
            Try to get skinned vertices. Skinned vertices are copied from GPU.
            </summary>
            <param name="manager"></param>
            <returns>New array with vertex positions</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.TryGetSkinnedVertices(HelixToolkit.SharpDX.Core.IEffectsManager,SharpDX.Vector3[])">
            <summary>
            Try to get skinned vertices. Skinned vertices are copied from GPU.
            </summary>
            <param name="manager"></param>
            <param name="array">Vertex positions will be copied into this array</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.TryGetSkinnedVerticesCache">
            <summary>
            Get the skinned vertices cache used for hit test.
            This cache will only be updated after each hit test.
            To get latest skinned vertices, please use <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.TryGetSkinnedVertices(HelixToolkit.SharpDX.Core.IEffectsManager)"/>. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.SetWeight(System.Int32,System.Single)">
            <summary>
            Make sure to use SetWeight so that the mutation of elements can be seen
            </summary>
            <param name="i">index</param>
            <param name="w">weight, typically 0-1</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.BoneSkinMeshNode.WeightUpdated">
            <summary>
            Tells the render core to update it's morph target weight buffer
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.AxisXColor">
            <summary>
            Gets or sets the color of the axis x.
            </summary>
            <value>
            The color of the axis x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.AxisYColor">
            <summary>
            Gets or sets the color of the axis y.
            </summary>
            <value>
            The color of the axis y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.AxisZColor">
            <summary>
            Gets or sets the color of the axis z.
            </summary>
            <value>
            The color of the axis z.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.LabelColor">
            <summary>
            Gets or sets the color of the label.
            </summary>
            <value>
            The color of the label.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.LabelX">
            <summary>
            Gets or sets the label x.
            </summary>
            <value>
            The label x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.LabelY">
            <summary>
            Gets or sets the label y.
            </summary>
            <value>
            The label y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.LabelZ">
            <summary>
            Gets or sets the label z.
            </summary>
            <value>
            The label z.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CoordinateSystemNode.UpdateAxisColor(HelixToolkit.SharpDX.Core.Geometry3D,System.Int32,SharpDX.Color4,System.String,SharpDX.Color4)">
             <summary>
            
             </summary>
             <param name="mesh"></param>
             <param name="which"></param>
             <param name="color"></param>
             <param name="label"></param>
             <param name="labelColor"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.CuttingOperation">
            <summary>
            Gets or sets the cutting operation.
            </summary>
            <value>
            The cutting operation.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.CrossSectionColor">
            <summary>
            Gets or sets the color of the cross section.
            </summary>
            <value>
            The color of the cross section.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane1">
            <summary>
            Gets or sets a value indicating whether [enable plane1].
            </summary>
            <value>
              <c>true</c> if [enable plane1]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane2">
            <summary>
            Gets or sets a value indicating whether [enable plane2].
            </summary>
            <value>
              <c>true</c> if [enable plane2]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane3">
            <summary>
            Gets or sets a value indicating whether [enable plane3].
            </summary>
            <value>
              <c>true</c> if [enable plane3]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane4">
            <summary>
            Gets or sets a value indicating whether [enable plane4].
            </summary>
            <value>
              <c>true</c> if [enable plane4]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane5">
            <summary>
            Gets or sets a value indicating whether [enable plane5].
            </summary>
            <value>
              <c>true</c> if [enable plane5]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane6">
            <summary>
            Gets or sets a value indicating whether [enable plane6].
            </summary>
            <value>
              <c>true</c> if [enable plane6]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane7">
            <summary>
            Gets or sets a value indicating whether [enable plane7].
            </summary>
            <value>
              <c>true</c> if [enable plane7]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.EnablePlane8">
            <summary>
            Gets or sets a value indicating whether [enable plane8].
            </summary>
            <value>
              <c>true</c> if [enable plane8]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane1">
            <summary>
            Gets or sets the plane1.
            </summary>
            <value>
            The plane1.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane2">
            <summary>
            Gets or sets the plane2.
            </summary>
            <value>
            The plane2.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane3">
            <summary>
            Gets or sets the plane3.
            </summary>
            <value>
            The plane3.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane4">
            <summary>
            Gets or sets the plane4.
            </summary>
            <value>
            The plane4.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane5">
            <summary>
            Gets or sets the plane5.
            </summary>
            <value>
            The plane5.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane6">
            <summary>
            Gets or sets the plane6.
            </summary>
            <value>
            The plane6.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane7">
            <summary>
            Gets or sets the plane7.
            </summary>
            <value>
            The plane7.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.Plane8">
            <summary>
            Gets or sets the plane8.
            </summary>
            <value>
            The plane8.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.PlaneToVector(SharpDX.Plane@)">
            <summary>
            The PlaneToVector
            </summary>
            <param name="p">The <see cref="T:SharpDX.Plane"/></param>
            <returns>The <see cref="T:SharpDX.Vector4"/></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.CrossSectionMeshNode.RemoveAllButClosest(System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult},System.Int32)">
            <summary>
            Removes all but the closes hit point, this is done here despite similar checks being done further up the call stack. 
            This minimizes the risk of breaking callers assumptions of one hit per object
            </summary>
            <param name="hits">All hits so far</param>
            <param name="hitsBeforeCheck">The number of hits before this object was processed</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.DepthPrepassNode">
            <summary>
            Do a depth prepass before rendering.
            <para>Must customize the DefaultEffectsManager and set DepthStencilState to DefaultDepthStencilDescriptions.DSSDepthEqualNoWrite in default ShaderPass from EffectsManager to achieve best performance.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.EnableReflector">
            <summary>
            Gets or sets a value indicating whether [enable reflector].
            </summary>
            <value>
              <c>true</c> if [enable reflector]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.Center">
            <summary>
            Gets or sets the center.
            </summary>
            <value>
            The center.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.FaceSize">
            <summary>
            Gets or sets the size of the face.
            </summary>
            <value>
            The size of the face.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.NearField">
            <summary>
            Gets or sets the near field.
            </summary>
            <value>
            The near field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.FarField">
            <summary>
            Gets or sets the far field.
            </summary>
            <value>
            The far field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.IsLeftHanded">
            <summary>
            Gets or sets a value indicating whether this coordinate system is left handed.
            </summary>
            <value>
              <c>true</c> if this coordinate system is left handed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.IsDynamicScene">
            <summary>
            Gets or sets a value indicating whether this scene is dynamic scene.
            If true, reflection map will be updated in each frame. Otherwise it will only be updated if scene graph or visibility changed.
            </summary>
            <value>
              <c>true</c> if this instance is dynamic scene; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.BindCubeMap(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Binds the cube map.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.DynamicReflectionNode.UnBindCubeMap(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Uns the bind cube map.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode.Texture">
            <summary>
            Gets or sets the environment texture. Must be 3D cube texture
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode"/> class. Default is using SkyBox. To use SkyDome, pass true into the constructor
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode"/> class. Default is using SkyBox. To use SkyDome, pass true into the constructor
            </summary>
            <param name="useSkyDome">if set to <c>true</c> [use sky dome].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.EnvironmentMapNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [create render technique].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.GroupNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.GroupNode.Octree">
            <summary>
            Gets the octree in OctreeManager.
            </summary>
            <value>
            The octree.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNode.UpdateNotRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the not render.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.GroupNode.OnHitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="context">The context.</param>
            <param name="totalModelMatrix">The total model matrix.</param>
            <param name="ray">The ray.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.InstanceParamArray">
            <summary>
            Gets or sets the instance parameter array.
            </summary>
            <value>
            The instance parameter array.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.instanceParamBuffer">
            <summary>
            The instance parameter buffer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            To override Attach routine, please override this.
            </summary>
            <param name="host"></param>
            <returns>
            Return true if attached
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingBillboardNode.OnDetach">
            <summary>
            Used to override Detach
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.InstanceIdentifiers">
            <summary>
            Gets or sets the instance identifiers.
            </summary>
            <value>
            The instance identifiers.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.InstanceParamArray">
            <summary>
            Gets or sets the instance parameter array.
            </summary>
            <value>
            The instance parameter array.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.OctreeManager">
            <summary>
            Gets or sets the octree manager.
            </summary>
            <value>
            The octree manager.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.instanceParamBuffer">
            <summary>
            The instance parameter buffer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [create render technique].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.UpdateNotRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the not render.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.InstancesChanged">
            <summary>
            Instanceses the changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.InstancingMeshNode.BuildOctree">
            <summary>
            Builds the octree.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.AmbientLightNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.AmbientLightNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.DirectionalLightNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.LightNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.LightNode.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.LightNode.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.PointLightNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.PointLightNode.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.PointLightNode.Attenuation">
            <summary>
            Gets or sets the attenuation.
            </summary>
            <value>
            The attenuation.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.PointLightNode.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>
            The range.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointLightNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.Resolution">
            <summary>
            Gets or sets the resolution.
            </summary>
            <value>
            The resolution.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.Bias">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.Intensity">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.FarField">
            <summary>
            Gets or sets the far field.
            </summary>
            <value>
            The far field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.NearField">
            <summary>
            Gets or sets the near field.
            </summary>
            <value>
            The far field.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.LightCamera">
            <summary>
            Distance of the directional light from origin
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.AutoCoverCompleteScene">
            <summary>
            Gets or sets a value indicating whether shadow map should automatically cover complete scene. Only effective with directional light.
            <para>Limitation: Currently unable to properly cover BoneSkinned model animation.</para>
            </summary>
            <value>
              <c>true</c> if [automatic cover complete scene]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.IsSceneDynamic">
            <summary>
            Gets or sets a value indicating whether the scene is dynamic. Only effective if <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.AutoCoverCompleteScene"/> is true.
            <para>Setting to true will force shadow map to update the shadow camera for each frame. May impact the performance.</para>
            </summary>
            <value>
              <c>true</c> if scene is dynamic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.CastSceneScale">
            <summary>
            Gets or sets the shadow cast scene scale. Only effective if <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.AutoCoverCompleteScene"/> is true.
            <para>
            This is used if the mesh render shadow is much bigger than the meshes casting shadow.
            The shadow cast camera has to cover the shadow rendering region, otherwise the shadow maybe cut off.
            Increase the value to increase the shadow cast camera rendering region.
            </para>
            </summary>
            <value>
            Region scale for shadow cast.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.AssignDefaultValuesToCore(HelixToolkit.SharpDX.Core.Core.RenderCore)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            To override Attach routine, please override this.
            </summary>
            <param name="host"></param>
            <returns>
            Return true if attached
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ShadowMapNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode.FallOff">
            <summary>
            Gets or sets the fall off.
            </summary>
            <value>
            The fall off.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode.InnerAngle">
            <summary>
            Gets or sets the inner angle.
            </summary>
            <value>
            The inner angle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode.OuterAngle">
            <summary>
            Gets or sets the outer angle.
            </summary>
            <value>
            The outer angle.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SpotLightNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.LineNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.OnCreateBufferModel(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [create buffer model].
            </summary>
            <param name="modelGuid"></param>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.CreateRasterState">
            <summary>
            Create raster state description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
             <summary>
             Override this function to set render technique during Attach Host.
            <para>If<see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then<see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of<see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
             </summary>
             <param name="host"></param>
             <returns>
             Return RenderTechnique
             </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.LineNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.FrontCCW">
            <summary>
            Gets or sets a value indicating whether [front CCW].
            </summary>
            <value>
              <c>true</c> if [front CCW]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.CullMode">
            <summary>
            Gets or sets the cull mode.
            </summary>
            <value>
            The cull mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.InvertNormal">
            <summary>
            Gets or sets a value indicating whether [invert normal].
            </summary>
            <value>
              <c>true</c> if [invert normal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.WireframeColor">
            <summary>
            Gets or sets the color of the wireframe.
            </summary>
            <value>
            The color of the wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.RenderWireframe">
            <summary>
            Gets or sets a value indicating whether [render wireframe].
            </summary>
            <value>
              <c>true</c> if [render wireframe]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.DynamicReflector">
            <summary>
            Gets or sets the dynamic reflector.
            </summary>
            <value>
            The dynamic reflector.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.OnCreateBufferModel(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [create buffer model].
            </summary>
            <param name="modelGuid"></param>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.MeshNode.CreateRasterState">
            <summary>
            Create raster state description.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshOutlineNode.EnableOutline">
            <summary>
            Gets or sets a value indicating whether [enable outline].
            </summary>
            <value>
              <c>true</c> if [enable outline]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshOutlineNode.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>
            The color of the outline.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshOutlineNode.IsDrawGeometry">
            <summary>
            Gets or sets a value indicating whether this instance is draw geometry.
            </summary>
            <value>
              <c>true</c> if this instance is draw geometry; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.MeshOutlineNode.OutlineFadingFactor">
            <summary>
            Gets or sets the outline fading factor.
            </summary>
            <value>
            The outline fading factor.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.MeshOutlineNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ParticleCount">
            <summary>
            Gets or sets the particle count.
            </summary>
            <value>
            The particle count.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.EmitterLocation">
            <summary>
            Gets or sets the emitter location.
            </summary>
            <value>
            The emitter location.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.EmitterRadius">
            <summary>
            Gets or sets the emitter radius.
            </summary>
            <value>
            The emitter radius.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ConsumerLocation">
            <summary>
            Gets or sets the consumer location.
            </summary>
            <value>
            The consumer location.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ConsumerRadius">
            <summary>
            Gets or sets the consumer radius.
            </summary>
            <value>
            The consumer radius.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ConsumerGravity">
            <summary>
            Gets or sets the consumer gravity.
            </summary>
            <value>
            The consumer gravity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.InitialEnergy">
            <summary>
            Gets or sets the initial energy.
            </summary>
            <value>
            The initial energy.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.EnergyDissipationRate">
            <summary>
            Gets or sets the energy dissipation rate.
            </summary>
            <value>
            The energy dissipation rate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.RandomVectorGenerator">
            <summary>
            Gets or sets the random vector generator.
            </summary>
            <value>
            The random vector generator.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ParticleTexture">
            <summary>
            Gets or sets the particle texture.
            </summary>
            <value>
            The particle texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.NumTextureColumn">
            <summary>
            Gets or sets the number texture column.
            </summary>
            <value>
            The number texture column.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.NumTextureRow">
            <summary>
            Gets or sets the number texture row.
            </summary>
            <value>
            The number texture row.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.ParticleSize">
            <summary>
            Gets or sets the size of the particle.
            </summary>
            <value>
            The size of the particle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.InitialVelocity">
            <summary>
            Gets or sets the initial velocity.
            </summary>
            <value>
            The initial velocity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.InitAcceleration">
            <summary>
            Gets or sets the initialize acceleration.
            </summary>
            <value>
            The initialize acceleration.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.DomainBoundMax">
            <summary>
            Gets or sets the domain bound maximum.
            </summary>
            <value>
            The domain bound maximum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.DomainBoundMin">
            <summary>
            Gets or sets the domain bound minimum.
            </summary>
            <value>
            The domain bound minimum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.CumulateAtBound">
            <summary>
            Gets or sets a value indicating whether [cumulate at bound].
            </summary>
            <value>
              <c>true</c> if [cumulate at bound]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.BlendColor">
            <summary>
            Gets or sets the color of the blend.
            </summary>
            <value>
            The color of the blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.AnimateSpriteByEnergy">
            <summary>
            Gets or sets a value indicating whether [animate sprite by energy].
            </summary>
            <value>
              <c>true</c> if [animate sprite by energy]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.Turbulance">
            <summary>
            Gets or sets the turbulance.
            </summary>
            <value>
            The turbulance.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.Blend">
            <summary>
            Gets or sets the blend.
            </summary>
            <value>
            The blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.AlphaBlend">
            <summary>
            Gets or sets the alpha blend.
            </summary>
            <value>
            The alpha blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.SourceBlend">
            <summary>
            Gets or sets the source blend.
            </summary>
            <value>
            The source blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.DestBlend">
            <summary>
            Gets or sets the dest blend.
            </summary>
            <value>
            The dest blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.SourceAlphaBlend">
            <summary>
            Gets or sets the source alpha blend.
            </summary>
            <value>
            The source alpha blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.DestAlphaBlend">
            <summary>
            Gets or sets the dest alpha blend.
            </summary>
            <value>
            The dest alpha blend.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.BlendFactor">
            <summary>
            Gets or sets the blend factor for blending
            </summary>
            <value>
            The blend factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.SampleMask">
            <summary>
            Gets or sets the sample mask for blending
            </summary>
            <value>
            The sample mask.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.Instances">
            <summary>
            Gets or sets the instances.
            </summary>
            <value>
            The instances.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.HasInstances">
            <summary>
            Gets a value indicating whether this instance has instances.
            </summary>
            <value>
              <c>true</c> if this instance has instances; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.EnableViewFrustumCheck">
            <summary>
            Gets or sets a value indicating whether [enable view frustum check].
            </summary>
            <value>
              <c>true</c> if [enable view frustum check]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.InstanceBuffer">
            <summary>
            Gets the instance buffer.
            </summary>
            <value>
            The instance buffer.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [create render technique].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.Update(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ParticleStormNode.TestViewFrustum(SharpDX.BoundingFrustum@)">
            <summary>
            Tests the view frustum.
            </summary>
            <param name="viewFrustum">The view frustum.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.PointNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.DistanceRayToPoint(SharpDX.Ray,SharpDX.Vector3)">
            <summary>
            Distances the ray to point.
            </summary>
            <param name="r">The r.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.OnCreateBufferModel(System.Guid,HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Called when [create buffer model].
            </summary>
            <param name="modelGuid"></param>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.CreateRasterState">
            <summary>
            Create raster state description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.PointNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.GUID">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TotalModelMatrixInternal">
            <summary>
            Do not assgin this field. This is updated by <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.ComputeTransformMatrix"/>.
            Used as field only for performance consideration.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TotalModelMatrix">
            <summary>
            Gets the total model matrix.
            </summary>
            <value>
            The total model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderOrderKey">
            <summary>
            Gets or sets the order key.
            </summary>
            <value>
            The render order key.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderOrder">
            <summary>
            Gets or sets the render order. Manually specify the render order
            </summary>
            <value>
            The render order.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.NeedMatrixUpdate">
            <summary>
            Gets or sets a value indicating whether [need matrix update].
            </summary>
            <value>
              <c>true</c> if [need matrix update]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.ModelMatrix">
            <summary>
            Gets or sets the model matrix.
            </summary>
            <value>
            The model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsRenderable">
            <summary>
            Gets or sets a value indicating whether this instance is renderable.
            </summary>
            <value>
              <c>true</c> if this instance is renderable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsAttached">
            <summary>
            If this has been attached onto renderhost.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderHost">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.EffectsManager">
            <summary>
            Gets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.ItemsInternal">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Items">
            <summary>
            Gets the readonly child items from outside UI component access.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.ItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <value>
            The items count.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsHitTestVisible">
            <summary>
            Gets or sets a value indicating whether this instance is hit test visible.
            </summary>
            <value>
              <c>true</c> if this instance is hit test visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable] even it is not rendered.
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderType">
            <summary>
            Gets or sets the type of the render.
            </summary>
            <value>
            The type of the render.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.EffectTechnique">
            <summary>
            Gets the effects technique.
            </summary>
            <value>
            The effects technique.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsAnimationNode">
            <summary>
            Gets or sets a value indicating whether this node is animation node.
            </summary>
            <value>
              <c>true</c> if this instance is animation node; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsAnimationNodeRoot">
            <summary>
            Gets a value indicating whether this node is animation node root.
            </summary>
            <value>
              <c>true</c> if this node is animation node root; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnTransformChanged(SharpDX.Matrix@)">
            <summary>
            Transforms the changed.
            </summary>
            <param name="totalTransform">The total transform.</param>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TransformChanged">
            <summary>
            Occurs when [on transform changed].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.SetRenderTechniqueFunc">
             <summary>
            
             </summary>
             <param name="host"></param>
             <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique">
            <summary>
            A delegate function to change render technique.
            <para>There are two ways to set render technique, one is use this <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique"/> delegate.
            The other one is to override the <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)"/> function.</para>
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique"/> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique"/> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)"/> function will be called.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique"/> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique"/> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)"/> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>Return RenderTechnique</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.AssignDefaultValuesToCore(HelixToolkit.SharpDX.Core.Core.RenderCore)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.WrapperSource">
            <summary>
            Gets or sets the wrapper source used for such as hit test model, etc. The wrapper must set this so the <see cref="P:HelixToolkit.SharpDX.Core.HitTestResult.ModelHit"/> is the wrapper.
            </summary>
            <value>
            The hit test source.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Tag">
            <summary>
            Gets or sets the tag. This can be used to attach an external view model or property class object
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsInFrustum">
            <summary>
            Gets or sets a value indicating whether this instance is in frustum in current frame.
            </summary>
            <value>
              <c>true</c> if this instance is in frustum; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.VisibleChanged">
            <summary>
            Occurs when [visible changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Attached">
            <summary>
            Occurs when [attached].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Detached">
            <summary>
            Occurs when [detached].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.MouseDown">
            <summary>
            Occurs when [mouse down].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.MouseMove">
            <summary>
            Occurs when [mouse move].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.MouseUp">
            <summary>
            Occurs when [mouse up].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            <para>Attaches the element to the specified host. To overide Attach, please override <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)"/> function.</para>
            <para>To set different render technique instead of using technique from host, override <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)"/></para>
            <para>Attach Flow: <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)"/> -> Set RenderHost -> Get Effect -> <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)"/> -> <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.InvalidateSceneGraph"/></para>
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            To override Attach routine, please override this.
            </summary>
            <param name="host"></param>
            <returns>Return true if attached</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnAttached">
            <summary>
            Called when [attached] and <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.IsAttached"/> = true.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Detach">
            <summary>
            Detaches the element from the host. Override <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnDetach"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnDetach">
            <summary>
            Used to override Detach
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.InvalidateRender">
            <summary>
            Tries to invalidate the current render, causes re-render
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph. Use this if scene graph has been changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.InvalidatePerFrameRenderables">
            <summary>
            Invalidates the per frame renderables.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Update(HelixToolkit.SharpDX.Core.RenderContext)">
            <summary>
            Updates the element total transforms, determine renderability, etc. by the specified time span.
            </summary>
            <param name="context">The time since last update.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.UpdateRenderOrderKey">
            <summary>
            Updates the render order key.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.UpdateNotRender(HelixToolkit.SharpDX.Core.RenderContext)">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.CanRender(HelixToolkit.SharpDX.Core.RenderContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Render(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderShadow(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the shadow.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderCustom(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Renders the custom.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RenderDepth(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.ShaderPass)">
            <summary>
            Renders the custom.
            </summary>
            <param name="context">The context.</param>
            <param name="deviceContext">The device context.</param>
            <param name="pass"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TestViewFrustum(SharpDX.BoundingFrustum@)">
            <summary>
            View frustum test.
            </summary>
            <param name="viewFrustum">The frustum.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.CanHitTest(HelixToolkit.SharpDX.Core.HitTestContext)">
            <summary>
            Determines whether this instance [can hit test] the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance [can hit test] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnHitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="context">The context.</param>
            <param name="totalModelMatrix">The total model matrix.</param>
            <param name="ray">The ray.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.MaxBound">
            <summary>
            The maximum bound
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.MaxBoundSphere">
            <summary>
            The maximum bound sphere
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OriginalBounds">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBounds"/>
            </summary>
            <value>
            The original bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OriginalBoundsSphere">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.OriginalBoundsSphere"/>
            </summary>
            <value>
            The original bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.Bounds">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.Bounds"/>
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.BoundsWithTransform">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsWithTransform"/>
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.BoundsSphere">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsSphere"/>
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.BoundsSphereWithTransform">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IBoundable.BoundsSphereWithTransform"/>
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.HasBound">
            <summary>
            Gets or sets a value indicating whether this instance has bound.
            </summary>
            <value>
              <c>true</c> if this instance has bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.BoundChanged">
            <summary>
            Occurs when [on bound changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TransformBoundChanged">
            <summary>
            Occurs when [on transform bound changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.BoundSphereChanged">
            <summary>
            Occurs when [on bound sphere changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TransformBoundSphereChanged">
            <summary>
            Occurs when [on transform bound sphere changed].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RaiseOnTransformBoundChanged(HelixToolkit.SharpDX.Core.BoundChangeArgs{SharpDX.BoundingBox})">
            <summary>
            Raises the on transform bound changed.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RaiseOnBoundChanged(HelixToolkit.SharpDX.Core.BoundChangeArgs{SharpDX.BoundingBox})">
            <summary>
            Raises the on bound changed.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RaiseOnTransformBoundSphereChanged(HelixToolkit.SharpDX.Core.BoundChangeArgs{SharpDX.BoundingSphere})">
            <summary>
            Raises the on transform bound sphere changed.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RaiseOnBoundSphereChanged(HelixToolkit.SharpDX.Core.BoundChangeArgs{SharpDX.BoundingSphere})">
            <summary>
            Raises the on bound sphere changed.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.postEffectNames">
            <summary>
            Gets or sets the post effects.
            </summary>
            <value>
            The post effects.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.PostEffectNames">
            <summary>
            Gets the post effect names.
            </summary>
            <value>
            The post effect names.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.HasAnyPostEffect">
            <summary>
            Gets a value indicating whether this instance has any post effect.
            </summary>
            <value>
              <c>true</c> if this instance has any post effect; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.AddPostEffect(HelixToolkit.SharpDX.Core.Model.IEffectAttributes)">
            <summary>
            Adds the post effect.
            </summary>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RemovePostEffect(System.String)">
            <summary>
            Removes the post effect.
            </summary>
            <param name="effectName">Name of the effect.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.HasPostEffect(System.String)">
            <summary>
            Determines whether [has post effect] [the specified effect name].
            </summary>
            <param name="effectName">Name of the effect.</param>
            <returns>
              <c>true</c> if [has post effect] [the specified effect name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.TryGetPostEffect(System.String,HelixToolkit.SharpDX.Core.Model.IEffectAttributes@)">
            <summary>
            Tries the get post effect.
            </summary>
            <param name="effectName">Name of the effect.</param>
            <param name="effect">The effect.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.ClearPostEffect">
            <summary>
            Clears the post effect.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.RemoveSelf">
            <summary>
            Removes self from scene graph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.SetAffectsRender``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.SetAffectsSceneGraph``1(``0@,``0)">
            <summary>
            Sets the affects scene graph.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField">The backing field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.ThresholdColor">
            <summary>
            Gets or sets the color of the threshold.
            </summary>
            <value>
            The color of the threshold.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.BloomExtractIntensity">
            <summary>
            Gets or sets the bloom extract intensity.
            </summary>
            <value>
            The bloom extract intensity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.BloomPassIntensity">
            <summary>
            Gets or sets the bloom pass intensity.
            </summary>
            <value>
            The bloom pass intensity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.BloomCombineIntensity">
            <summary>
            Gets or sets the bloom combine intensity.
            </summary>
            <value>
            The bloom combine intensity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.BloomCombineSaturation">
            <summary>
            Gets or sets the bloom combine saturation.
            </summary>
            <value>
            The bloom combine saturation.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBloom.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
            <value>
            The draw mode.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectBorderHighlight.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.ScaleX">
            <summary>
            Gets or sets the scale x.
            </summary>
            <value>
            The scale x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.ScaleY">
            <summary>
            Gets or sets the scale y.
            </summary>
            <value>
            The scale y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Override this function to set render technique during Attach Host.
            <para>If <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> is set, then <see cref="F:HelixToolkit.SharpDX.Core.Model.Scene.SceneNode.OnSetRenderTechnique" /> instead of <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectMeshOutlineBlur.OnCreateRenderTechnique(HelixToolkit.SharpDX.Core.IRenderHost)" /> function will be called.</para>
            </summary>
            <param name="host"></param>
            <returns>
            Return RenderTechnique
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay.OutlineFadingFactor">
            <summary>
            Gets or sets the outline fading factor.
            </summary>
            <value>
            The outline fading factor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay.EnableDoublePass">
            <summary>
            Gets or sets a value indicating whether [enable double pass].
            </summary>
            <value>
              <c>true</c> if [enable double pass]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.NodePostEffectXRay.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.CaptureRectangle">
            <summary>
            Gets or sets the capture rectangle.
            </summary>
            <value>
            The capture rectangle.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.DisplayIndex">
            <summary>
            Gets or sets the display index.
            </summary>
            <value>
            The display index.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.StretchToFill">
            <summary>
            Gets or sets a value indicating whether [stretch to fill].
            </summary>
            <value>
              <c>true</c> if [stretch to fill]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.ShowMouseCursor">
            <summary>
            Gets or sets a value indicating whether [show mouse cursor].
            </summary>
            <value>
              <c>true</c> if [show mouse cursor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ScreenDuplicationNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode">
            <summary>
            Screen Spaced node uses a fixed camera to render model (Mainly used for view box and coordinate system rendering) onto screen which is separated from viewport camera.
            <para>
            Default fix camera is perspective camera with FOV 45 degree and camera distance = 20. Look direction is always looking at (0,0,0).
            </para>
            <para>
            User must properly scale the model to fit into the camera frustum. The usual maximum size is from (5,5,5) to (-5,-5,-5) bounding box.
            </para>
            <para>
            User can use <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.SizeScale"/> to scale the size of the rendering.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.RelativeScreenLocationX">
            <summary>
            Gets or sets the relative screen location x.
            </summary>
            <value>
            The relative screen location x.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.RelativeScreenLocationY">
            <summary>
            Gets or sets the relative screen location y.
            </summary>
            <value>
            The relative screen location y.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.SizeScale">
            <summary>
            Gets or sets the size scale.
            </summary>
            <value>
            The size scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.Mode">
            <summary>
            Gets or sets the mode. Includes <see cref="F:HelixToolkit.SharpDX.Core.ScreenSpacedMode.RelativeScreenSpaced"/> and <see cref="F:HelixToolkit.SharpDX.Core.ScreenSpacedMode.AbsolutePosition3D"/>
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.AbsolutePosition3D">
            <summary>
            Gets or sets the absolute position. <see cref="F:HelixToolkit.SharpDX.Core.ScreenSpacedMode.AbsolutePosition3D"/>
            </summary>
            <value>
            The absolute position.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.CameraType">
            <summary>
            Only being used when <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.Mode"/> is RelativeScreenSpaced
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.FarPlane">
            <summary>
            Gets or sets the far plane for screen spaced camera
            </summary>
            <value>
            The far plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.NearPlane">
            <summary>
            Gets or sets the near plane for screen spaced camera
            </summary>
            <value>
            The near plane.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.NeedClearDepthBuffer">
            <summary>
            Gets or sets a value indicating whether [need clear depth buffer].
            </summary>
            <value>
              <c>true</c> if [need clear depth buffer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.OnCreateRenderCore">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Called when [attach].
            </summary>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene.ScreenSpacedNode.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.SortingMethod">
            <summary>
            Used for geometry sorting
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SortingMethod.BoundingBoxCenter">
            <summary>
            Sort on the distance from camera to bounding bound center.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SortingMethod.BoundingBoxCorners">
            <summary>
            Sort on the minimum distance from camera to bounding bound corners.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Model.Scene.SortingMethod.BoundingSphereSurface">
            <summary>
            Sort on the minimum distance from camera to bounding sphere surface.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SortingGroupNode.EnableSorting">
            <summary>
            Gets or sets a value indicating whether [enable sorting].
            </summary>
            <value>
              <c>true</c> if [enable sorting]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SortingGroupNode.SortingInterval">
            <summary>
            Gets or sets the sorting interval by milliseconds. Default is 500ms.
            </summary>
            <value>
            The sorting interval.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SortingGroupNode.LastSortTime">
            <summary>
            Gets or sets the last sort time.
            </summary>
            <value>
            The last sort time.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SortingGroupNode.SortTransparentOnly">
            <summary>
            Gets or sets a value indicating whether [sort transparent only].
            </summary>
            <value>
              <c>true</c> if [sort transparent only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.SortingGroupNode.SortingMethod">
            <summary>
            Gets or sets the sorting method.
            </summary>
            <value>
            The sorting method.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene.ViewBoxNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ViewBoxNode.ViewBoxTexture">
            <summary>
            Gets or sets the view box texture.
            </summary>
            <value>
            The view box texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ViewBoxNode.EnableEdgeClick">
            <summary>
            Gets or sets a value indicating whether [enable edge click].
            </summary>
            <value>
              <c>true</c> if [enable edge click]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene.ViewBoxNode.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables">
            <summary>
            Default PhongMaterial Variables
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderAlphaTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderDiffuseTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderNormalTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderDisplaceTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderShadowTexName">
            <summary>
            Gets or sets the name of the shader shadow tex.
            </summary>
            <value>
            The name of the shader shadow tex.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderSpecularTexName">
            <summary>
            Gets the shader specular texture.
            </summary>
            <value>
            The shader specular texture.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderEmissiveTexName">
            <summary>
            Gets the name of the shader emissive tex.
            </summary>
            <value>
            The name of the shader emissive tex.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderSamplerDiffuseTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderSamplerDisplaceTexName">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.ShaderSamplerShadowMapName">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.#ctor(HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.PhongMaterialCore,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="technique">The technique.</param>
            <param name="materialCore">The material core.</param>
            <param name="materialPassName">Name of the material pass.</param>
            <param name="wireframePassName">Name of the wireframe pass.</param>
            <param name="materialOITPassName">Name of the material oit pass.</param>
            <param name="wireframeOITPassName">Name of the wireframe oit pass.</param>
            <param name="shadowPassName">Name of the shadow pass.</param>
            <param name="tessellationPassName">Name of the tessellation pass.</param>
            <param name="tessellationOITPassName">Name of the tessellation oit pass.</param>
            <param name="depthPassName">Name of the depth pass</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.#ctor(System.String,HelixToolkit.SharpDX.Core.IEffectsManager,HelixToolkit.SharpDX.Core.IRenderTechnique,HelixToolkit.SharpDX.Core.Model.PhongMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables"/> class. This construct will be using the PassName pass into constructor only.
            </summary>
            <param name="passName">Name of the pass.</param>
            <param name="manager">The manager.</param>
            <param name="technique"></param>
            <param name="material">The material.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.VertexShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="shader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.OnBindMaterialTextures(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Shaders.PixelShader)">
            <summary>
            Actual bindings
            </summary>
            <param name="context"></param>
            <param name="deviceContext"></param>
            <param name="shader"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.PhongMaterialVariables.OnDispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D">
             <summary>
            
             </summary>
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Visibility">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsHitTestVisible">
            <summary>
            Gets or sets a value indicating whether this instance is hit test visible.
            </summary>
            <value>
              <c>true</c> if this instance is hit test visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.WrapperSource">
            <summary>
            Gets or sets the wrapper source used to link the external wrapper with the node.
            </summary>
            <value>
            The hit test source.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsAttached">
            <summary>
            Gets or sets a value indicating whether this instance is attached.
            </summary>
            <value>
              <c>true</c> if this instance is attached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsRenderable">
            <summary>
            Gets or sets a value indicating whether this instance is renderable.
            </summary>
            <value>
              <c>true</c> if this instance is renderable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RenderCore">
            <summary>
            Gets or sets the render core.
            </summary>
            <value>
            The render core.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RenderHost">
            <summary>
            Gets or sets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.ItemsInternal">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Items">
            <summary>
            Gets the items as readonly. Expose for outside for UI access or bindings
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.ModelMatrix">
            <summary>
            Gets or sets the model matrix.
            </summary>
            <value>
            The model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.LayoutTranslate">
            <summary>
            Gets or sets the layout translate.
            </summary>
            <value>
            The layout translate.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.ParentMatrix">
            <summary>
            Gets or sets the parent matrix.
            </summary>
            <value>
            The parent matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.TotalModelMatrix">
            <summary>
            Gets or sets the total model matrix.
            </summary>
            <value>
            The total model matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RelativeMatrix">
            <summary>
            Gets or sets the transform matrix relative to its parent
            </summary>
            <value>
            The relative matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.LayoutBoundWithTransform">
            <summary>
            Gets or sets the layout bound with transform.
            </summary>
            <value>
            The layout bound with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether this instance is mouse over.
            </summary>
            <value>
              <c>true</c> if this instance is mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.CreateRenderCore">
            <summary>
            Creates the render core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            <para>Attaches the element to the specified host. To overide Attach, please override <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)"/> function.</para>
            <para>Attach Flow: Set RenderHost -> Get Effect ->
            <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)"/> -> <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)"/> -> <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.InvalidateRender"/></para>
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnAttach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            To override Attach routine, please override this.
            </summary>
            <param name="host"></param>
            <returns>Return true if attached</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Update(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Updates the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.TransformChanged(SharpDX.Matrix3x2@)">
            <summary>
            Transforms the changed.
            </summary>
            <param name="totalTransform">The total transform.</param>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnTransformChanged">
            <summary>
            Occurs when [on transform changed].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Attached">
            <summary>
            Occurs when [on attached].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Detached">
            <summary>
            Occurs when [on detached].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.UpdateRequested">
            <summary>
            Occurs when [on update].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.CanRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            <para>Determine if this can be rendered.</para>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.Render(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            <para>Renders the element in the specified context. To override Render, please override <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)"/></para>
            <para>Uses <see cref="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.CanRender(HelixToolkit.SharpDX.Core.RenderContext2D)"/>  to call OnRender or not. </para>
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RenderBitmapCache(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Renders the bitmap cache to a render target only.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnRender(HelixToolkit.SharpDX.Core.RenderContext2D)">
            <summary>
            Called when [render].
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.CanHitTest">
            <summary>
            Determines whether this instance [can hit test].
            </summary>
            <returns>
              <c>true</c> if this instance [can hit test]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.OnHitTest(SharpDX.Vector2@,HelixToolkit.SharpDX.Core.HitTest2DResult@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="mousePoint">The mouse point.</param>
            <param name="hitResult">The hit result.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.HitTest(SharpDX.Vector2,HelixToolkit.SharpDX.Core.HitTest2DResult@)">
            <summary>
            Hits the test.
            </summary>
            <param name="mousePoint">The mouse point.</param>
            <param name="hitResult">The hit result.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RenderCore_OnInvalidateRenderer(System.Object,System.EventArgs)">
            <summary>
            Use InvalidateVisual if render update required.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.SetAffectsRender``1(``0@,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="backingField"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.SetAffectsMeasure``1(``0@,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="backingField"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "F:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.MinimumBitmapSize" -->
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.EnableBitmapCache">
            <summary>
            Gets or sets a value indicating whether [enable bitmap cache].
            </summary>
            <value>
              <c>true</c> if [enable bitmap cache]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsBitmapCacheValid">
            <summary>
            Gets or sets a value indicating whether this instance is bitmap cache valid.
            </summary>
            <value>
              <c>true</c> if this instance is bitmap cache valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.EnsureBitmapCache(HelixToolkit.SharpDX.Core.RenderContext2D,SharpDX.Size2,System.Int32)">
            <summary>
            Ensures the bitmap cache.
            </summary>
            <param name="context">The context.</param>
            <param name="size">The size.</param>
            <param name="maxSize">The maximum size.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsMeasureDirty">
            <summary>
            Gets or sets a value indicating whether this instance is measure dirty.
            </summary>
            <value>
              <c>true</c> if this instance is measure dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsArrangeDirty">
            <summary>
            Gets or sets a value indicating whether this instance is arrange dirty.
            </summary>
            <value>
              <c>true</c> if this instance is arrange dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsTransformDirty">
            <summary>
            Gets or sets a value indicating whether this instance is transform dirty.
            </summary>
            <value>
              <c>true</c> if this instance is transform dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.IsVisualDirty">
            <summary>
            Gets or sets a value indicating whether this instance is visual dirty.
            </summary>
            <value>
              <c>true</c> if this instance is visual dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.RenderSize">
            <summary>
            Gets the render size. Same as the <see cref="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.LayoutBound"/> size
            </summary>
            <value>
            The size of the render.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.DesiredSize">
            <summary>
            Gets the size of the desired size after measure.
            </summary>
            <value>
            The size of the desired.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.UnclippedDesiredSize">
            <summary>
            Gets the size of the unclipped desired size after measure.
            </summary>
            <value>
            The size of the unclipped desired.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.LayoutClipBound">
            <summary>
            Gets or sets the layout clip bound. This bound includes the margin.
            </summary>
            <value>
            The layout clip bound.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D.LayoutBound">
            <summary>
            Gets the size of the actual layout bound without margin.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.PanelNode2D.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.PanelNode2D.RemoveChildNode(HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D)">
            <summary>
            Removes the child node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Model.Scene2D.PanelNode2D.TryGetNode(System.Guid,HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D@)">
            <summary>
            Tries the get node.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.TextureModel">
            <summary>
            Texture model contains <see cref="P:HelixToolkit.SharpDX.Core.TextureModel.TextureInfoLoader"/> and a Guid to identify specific texture.
            <see cref="P:HelixToolkit.SharpDX.Core.TextureModel.TextureInfoLoader"/> is being called to load texture during GPU texture resource creation.
            <para>
            Helixtoolkit provides basic implementation for texture info loaders.
            </para>
            <para>
            User can provide own implementation for <see cref="P:HelixToolkit.SharpDX.Core.TextureModel.TextureInfoLoader"/> for better texture resource/data management.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureModel.TextureModelRepository">
            <summary>
            Gets or sets the texture model repository.
            Repository is used to load texture from file path.
            <para>
            You can customize the repository to provider your own implementation. Helixtoolkit will ask repository to load texture on-demand.
            Set <see cref="!:CanAutoCloseStream"/> can let HelixToolkit close the stream after texture being uploaded into GPU for memory saving.
            </para>
            </summary>
            <value>
            The texture model repository.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureModel.Guid">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureModel.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureModel.TextureInfoLoader">
            <summary>
            Gets the texture information loader.
            </summary>
            <value>
            The texture information loader.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.Guid,HelixToolkit.SharpDX.Core.ITextureInfoLoader)">
            <summary>
            Provides interface for user defined texture loader. 
            HelixToolkit will call <see cref="M:HelixToolkit.SharpDX.Core.ITextureInfoLoader.Load(System.Guid)"/> to start loading content into GPU.
            HelixToolkit will call <see cref="!:ITextureInfoLoader.Complete(Guid)"/> once content has been loaded into GPU.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="loader">The loader.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="stream">The compressed texture stream. Supports Jpg, Bmp, Png, Tiff, DDS, Wmp</param>
            <param name="autoCloseStream">Close the stream after being uploaded into GPU. 
            Use with caution since the stream cannot be re-used after being closed.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(SharpDX.Color4[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="colorArray">The color array.</param>
            <param name="width">The width.</param>
            <exception cref="T:System.ArgumentException">Width = {width} does not equal to the Color Array Length {colorArray.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(SharpDX.Color4[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="colorArray">The color array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:System.ArgumentException">Width * Height = {width * height} does not equal to the Color Array Length {colorArray.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(SharpDX.Color4[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="colorArray">The color array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <exception cref="T:System.ArgumentException">Width * Height * Depth = {width * height * depth} does not equal to the Color Array Length {colorArray.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <exception cref="T:System.ArgumentException">Width = {width} does not correspond to the Data Array Length {data.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:System.ArgumentException">Width * Height = {width * height} does not correspond to the Data Array Length {data.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <exception cref="T:System.ArgumentException">Width * Height * Depth = {width * height * depth} does not correspond to the Data Array Length {data.Length}</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="textureFile">The texture file.</param>
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <exception cref="T:System.ArgumentException">Width = {width} does not correspond to the Data Length</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:System.ArgumentException">Width * Height = {width * height} does not correspond to the Data Length</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="data">The image data.</param>
            <param name="pixelFormat">The image pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <exception cref="T:System.ArgumentException">Width * Height * Depth = {width * height * depth} does not correspond to the Data Length</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/> class.
            </summary>
            <param name="textureFile">The texture file.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.Create(System.IO.Stream)">
            <summary>
            Creates texture model from specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.Create(System.String)">
            <summary>
            Creates texture model from specified texture path.
            </summary>
            <param name="texturePath">The texture path.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.Load">
            <summary>
            Loads the texture info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.Complete(HelixToolkit.SharpDX.Core.TextureInfo,System.Boolean)">
            <summary>
            Completes loading
            </summary>
            <param name="info">The information.</param>
            <param name="succ">if set to <c>true</c> [succ].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureModel.op_Implicit(System.IO.Stream)~HelixToolkit.SharpDX.Core.TextureModel">
            <summary>
            Performs an implicit conversion from <see cref="!:CompressedStream"/> to <see cref="T:HelixToolkit.SharpDX.Core.TextureModel"/>.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.TextureInfo">
            <summary>
            Stream texture data.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Texture">
            <summary>
            The texture stream
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.TextureRaw">
            <summary>
            Gets the texture raw bytes.
            </summary>
            <value>
            The texture raw.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Color4Array">
            <summary>
            Gets the color4 array.
            </summary>
            <value>
            The color4 array.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.RawPointer">
            <summary>
            Gets the raw pointer.
            </summary>
            <value>
            The raw pointer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.IsCompressed">
            <summary>
            Whether the texture is a compressed data format, such as Jepg, Png, DDS.
            Set <see cref="P:HelixToolkit.SharpDX.Core.TextureInfo.IsCompressed"/>= false for such as Color4[] array content.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.PixelFormat">
            <summary>
            The pixel format. Only used by non-compressed texture data.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Width">
            <summary>
            The texture width. Only used by non-compressed texture data.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Height">
            <summary>
            The height. Only used by non-compressed texture data.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.GenerateMipMaps">
            <summary>
            The generate mip maps automatically after being loaded.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Dimension">
            <summary>
            Gets the texture dimension.
            </summary>
            <value>
            The dimension.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextureInfo.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a compressed texture stream
            </summary>
            <param name="texture">The texture.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IO.Stream,SharpDX.DXGI.Format,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 1D texture stream
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IO.Stream,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 2D texture stream
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IO.Stream,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 3D texture stream
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Depth cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 1D texture data
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 2D texture data
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.Byte[],SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 3D texture data
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Depth cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(SharpDX.Color4[],System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 1D color4 data
            </summary>
            <param name="texture">The texture.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(SharpDX.Color4[],System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 1D color4 data
            </summary>
            <param name="texture">The texture.</param>
            <param name="width">The width.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(SharpDX.Color4[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 2D color4 data
            </summary>
            <param name="texture">The texture.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(SharpDX.Color4[],System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 3D color4 data
            </summary>
            <param name="texture">The texture.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Depth cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 1D texture raw pointer
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentNullException">Texture cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 2D texture raw pointer
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentException">Height cannot be zero.</exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureInfo.#ctor(System.IntPtr,SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create <see cref="T:HelixToolkit.SharpDX.Core.TextureInfo"/> with a non-compressed 3D texture raw pointer
            </summary>
            <param name="texture">The texture.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="generateMipMaps">if set to <c>true</c> [generate mip maps].</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Depth cannot be zero.</exception>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BoneSkinnedMeshGeometry3D.VertexBoneIds">
            <summary>
            Gets or sets the vertex bone ids and bone weights.
            </summary>
            <value>
            The vertex bone ids.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoneSkinnedMeshGeometry3D.CreateNodeBasedBoneMatrices(System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Animations.Bone},SharpDX.Matrix@)">
            <summary>
            Creates the node based bone matrices.
            </summary>
            <param name="bones">The bones.</param>
            <param name="rootInvTransform">The root inv transform.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BoneSkinnedMeshGeometry3D.CreateNodeBasedBoneMatrices(System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Animations.Bone},SharpDX.Matrix@,SharpDX.Matrix[]@)">
            <summary>
            Creates the node based bone matrices.
            </summary>
            <param name="bones">The bones.</param>
            <param name="matrices"></param>
            <param name="rootInvTransform"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.VertexShaderType">
            <summary>
            Used for static function overloading
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Constants">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.NumShaderStages">
            <summary>
            Number of shader stages
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.CanBindTextureStages">
            <summary>
            Stages that can bind textures
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.VertexIdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.HullIdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.DomainIdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.GeometryIdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.PixelIdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Constants.ComputeIdx">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Constants.ToIndex(HelixToolkit.SharpDX.Core.ShaderStage)">
            <summary>
            Convert shader stage into 0~5 stage numbers
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Constants.ToShaderStage(System.Int32)">
            <summary>
            To the shader stage.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Constants.GetNullShader(HelixToolkit.SharpDX.Core.ShaderStage)">
            <summary>
            Gets the null shader.
            </summary>
            <param name="stage">The stage.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardBase.DrawTexture(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Draws the texture and fill the billboardverties. Called during initialize vertex buffer.
            </summary>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardBase.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Object,System.Boolean)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="hits">The hits.</param>
            <param name="originalSource">The original source.</param>
            <param name="fixedSize">if set to <c>true</c> [fixed size].</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardBase.HitTestFixedSize(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Object,System.Int32)">
            <summary>
            Hits the size of the test fixed.
            </summary>
            <param name="context">The context.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="hits">The hits.</param>
            <param name="originalSource">The original source.</param>
            <param name="count">The count of vertices in <see cref="P:HelixToolkit.SharpDX.Core.BillboardBase.BillboardVertices"/>.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardBase.HitTestNonFixedSize(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Matrix@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Object,System.Int32)">
            <summary>
            Hits the size of the test non fixed.
            </summary>
            <param name="context">The context.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="hits">The hits.</param>
            <param name="originalSource">The original source.</param>
            <param name="count">The count of vertices in <see cref="P:HelixToolkit.SharpDX.Core.BillboardBase.BillboardVertices"/>.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardSingleImage3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.Type">
            <summary>
            Billboard type, <see cref="T:HelixToolkit.SharpDX.Core.BillboardType"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.Center">
            <summary>
            Billboard center location
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.MaskColor">
            <summary>
            If color in image is equal to the mask color, the color will set to transparent in image.
            Default color is Transparent, which did not mask any color.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.Angle">
            <summary>
            Gets or sets the rotation angle in radians.
            </summary>
            <value>
            The angle in radians.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.HorizontalAlignment">
            <summary>
            Sets or gets the horizontal alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardHorizontalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.VerticalAlignment">
            <summary>
            Sets or gets the vertical alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardVerticalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BillboardSingleImage3D"/> class.
            </summary>
            <param name="imageStream">The image stream.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.#ctor(HelixToolkit.SharpDX.Core.TextureModel,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BillboardSingleImage3D"/> class.
            </summary>
            <param name="texture">The image texture.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.UpdateBounds">
            <summary>
            Updates the bounds.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleImage3D.OnUpdateTextureAndBillboardVertices(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [draw texture].
            </summary>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardSingleText3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.Type">
            <summary>
            Billboard type, <see cref="T:HelixToolkit.SharpDX.Core.BillboardType"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.TextInfo">
            <summary>
            Gets or sets the text information.
            </summary>
            <value>
            The text information.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>
            The color of the font.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>
            The color of the background.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>
            The size of the font.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.FontWeight">
            <summary>
            Gets or sets the font weight.
            </summary>
            <value>
            The font weight.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
            <value>
            The font style.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.HorizontalAlignment">
            <summary>
            Sets or gets the horizontal alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardHorizontalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.BillboardSingleText3D.VerticalAlignment">
            <summary>
            Sets or gets the vertical alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardVerticalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleText3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BillboardSingleText3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleText3D.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.BillboardSingleText3D"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleText3D.UpdateBounds">
            <summary>
            Updates the bounds.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BillboardSingleText3D.OnUpdateTextureAndBillboardVertices(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Called when [draw texture].
            </summary>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextInfo.Angle">
            <summary>
            Gets or sets the rotation angle in radians.
            </summary>
            <value>
            The angle in radians.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextInfo.HorizontalAlignment">
            <summary>
            Sets or gets the horizontal alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardHorizontalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.TextInfo.VerticalAlignment">
            <summary>
            Sets or gets the vertical alignment. Default = <see cref="F:HelixToolkit.SharpDX.Core.BillboardVerticalAlignment.Center"/>
            <para>
            For example, when sets horizontal and vertical alignment to top/left,
            billboard's bottom/right point will be anchored at the billboard origin.
            </para>
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.Indices">
            <summary>
            Indices, can be triangle list, line list, etc.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.Positions">
            <summary>
            Vertex Positions
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound">
            <summary>
            Geometry AABB
            </summary>       
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere">
            <summary>
            Geometry Bounding Sphere
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.Colors">
            <summary>
            Vertex Color
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.Octree">
            <summary>
            TO use Octree during hit test to improve hit performance, please call UpdateOctree after model created.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.OctreeDirty">
            <summary>
            Gets or sets a value indicating whether [octree dirty], needs update.
            </summary>
            <value>
              <c>true</c> if [octree dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.IsDynamic">
            <summary>
            Gets or sets a value indicating whether this instance is dynamic. Must be set before passing to GeometryModel3D.
            <para>When set to true, the internal vertex/index buffer will be created using dynamic buffer.</para> 
            <para>Default is false, which is using immutable.</para>
            <para>Dynamic buffer is useful if user streaming similar sizes of Vertices/Indices into this geometry, this will avoid unnecessary buffer creation and reuse the existing dynamic buffer if the max size less than the size of existing buffer.</para>
            </summary>
            <value>
              <c>true</c> if this instance is dynamic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.PreDefinedVertexCount">
            <summary>
            The pre defined vertex count. Only used when <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.IsDynamic"/> = true.
            <para>The pre define vertex count allows user to initialize a dynamic buffer with a minimum pre-define size.</para>
            <para>Example: If the vertex count increments from 0 to around 3000 during vertex array streaming, 
            pre-define a size of 3000 for this geometry allows the dynamic buffer to be reused and avoid recreating dynamic buffer 3000 times.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.PreDefinedIndexCount">
            <summary>
            The pre defined index count. Used when <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.IsDynamic"/> = true.
             <para>The pre define index count allows user to initialize a dynamic buffer with a minimum pre-define size.</para>
            <para>Example: If the index count increments from 0 to around 3000 during index array streaming, 
            pre-define a size of 3000 for this geometry allows the dynamic buffer to be reused and avoid recreating dynamic buffer 3000 times.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.IsTransient">
            <summary>
            Gets a value indicating whether the geometry data are transient. Call <see cref="M:HelixToolkit.SharpDX.Core.Geometry3D.SetAsTransient"/> to set this flag to true.
            <para>
            When this is true, geometry3D data will be cleared once being loaded into GPU.
            </para>
            <para>
            This geometry3D can only be used by one Model3D in one Viewport.
            Must not be shared.
            Hit test is disabled as well.
            </para>
            <para>
            Useful when loading a large geometry for view only and free up memory after geometry data being uploaded to GPU.
            </para>
            </summary>
            <value>
              <c>true</c> if this instance is transient; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Geometry3D.DisableUpdateBound">
            <summary>
            The disable update bound, only used in <see cref="M:HelixToolkit.SharpDX.Core.Geometry3D.AssignTo(HelixToolkit.SharpDX.Core.Geometry3D)"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Geometry3D.OctreeParameter">
            <summary>
            Gets or sets the octree parameter.
            </summary>
            <value>
            The octree parameter.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Geometry3D"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Geometry3D"/> class.
            </summary>
            <param name="isDynamic">if set to <c>true</c> [is dynamic].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateVertices">
            <summary>
            Call to manually update vertex buffer. Use with <see cref="P:HelixToolkit.SharpDX.Core.Model.ObservableObject.DisablePropertyChangedEvent"/>
            <para>This is useful if user want to reuse existing <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Positions"/> list and update vertex value inside the list.</para>
            <para>Note: For performance purpose, this will not cause bounding box update. 
            User must manually call <see cref="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateBounds"/> to refresh geometry bounding box.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateTriangles">
            <summary>
            Call to manually update triangle buffer.
            <para>This is useful if user want to reuse existing <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Indices"/> object and update index value inside the list.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateColors">
            <summary>
            Call to manually update vertex color buffer.
            <para>This is useful if user want to reuse existing <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Colors"/> object and update color value inside the list.</para>
            <para>Make sure the <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Colors"/> count equal to the <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Positions"/> count</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateOctree(System.Boolean)">
            <summary>
            Create Octree for current model.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.CreateOctree(HelixToolkit.SharpDX.Core.OctreeBuildParameter)">
            <summary>
            Override to create different octree in subclasses.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.ClearOctree">
            <summary>
            Set octree to null
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.ManualSetOctree(HelixToolkit.SharpDX.Core.IOctreeBasic)">
            <summary>
            Manuals the set octree.
            </summary>
            <param name="octree">The octree.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.AssignTo(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Assigns internal properties to another geometry3D. This does not assign <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.IsDynamic"/>/<see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.PreDefinedIndexCount"/>/<see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.PreDefinedVertexCount"/>
            <para>
            Following properties are assigned:
            <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Positions"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Indices"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Colors"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Bound"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.BoundingSphere"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Octree"/>, <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.OctreeParameter"/>
            </para>
            <para>Override <see cref="M:HelixToolkit.SharpDX.Core.Geometry3D.OnAssignTo(HelixToolkit.SharpDX.Core.Geometry3D)"/> to assign custom properties in child class</para>
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.UpdateBounds">
            <summary>
            Manually call this function to update AABB and Bounding Sphere
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.SetAsTransient">
            <summary>
            Sets this geometry as transient.
            <para>
            Once this is called, this geometry will be marked as <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.IsTransient"/> = true.
            </para>
            <para>
            This function must be called before geometry is attached to a model for rendering. 
            Or before the model is attached to a viewport for rendering.
            </para>
            <para>
            A transient geometry is being used to save memory. All geometry data will be cleared once being uploaded into GPU.
            Should not be shared with multiple models.
            </para>
            A transient geometry does not support hit test.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Geometry3D.ClearAllGeometryData">
            <summary>
            Clears all geometry data.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshGeometry3D.SmallTriangleHitTestScaling">
            <summary>
            Used to scale up small triangle during hit test.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshGeometry3D.SmallTriangleEdgeLengthSquare">
            <summary>
            Used to determine if the triangle is small.
            Small triangle is defined as any edge length square is smaller than
            <see cref="F:HelixToolkit.SharpDX.Core.MeshGeometry3D.SmallTriangleEdgeLengthSquare"/>.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshGeometry3D.EnableSmallTriangleHitTestScaling">
            <summary>
            Used to enable small triangle hit test. It uses <see cref="F:HelixToolkit.SharpDX.Core.MeshGeometry3D.SmallTriangleEdgeLengthSquare"/>
            to determine if triangle is too small. If it is too small, scale up the triangle before
            hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.Normals">
            <summary>
            Does not raise property changed event
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.TextureCoordinates">
            <summary>
            Texture Coordinates
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.Tangents">
            <summary>
            Does not raise property changed event
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.BiTangents">
            <summary>
            Does not raise property changed event
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.TriangleIndices">
            <summary>
            A proxy member for <see cref="P:HelixToolkit.SharpDX.Core.Geometry3D.Indices"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometry3D.Merge(HelixToolkit.SharpDX.Core.MeshGeometry3D[])">
            <summary>
            Merge meshes into one
            </summary>
            <param name="meshes"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometry3D.ReturnMultipleHitsOnHitTest">
            <summary>
            Callers should set this property to true before calling HitTest if the callers need multiple hits throughout the geometry.
            This is useful when the geometry is cut by a plane.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometry3D.UpdateTextureCoordinates">
            <summary>
            Call to manually update texture coordinate buffer.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DefaultVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BatchedMeshVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.LinesVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointsVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.CubeVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardVertex">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BillboardInstanceParameter">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.InstanceParameter">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoneIds">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoneMatricesStruct">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Particle">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ParticlePerFrame">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ParticleInsertParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ParticleCountIndirectArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ShadowMapParamStruct">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.GlobalTransformStruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.View">
            <summary>
            The view matrix
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.Projection">
            <summary>
            The projection matrix
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.ViewProjection">
            <summary>
            The view projection matrix
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.Frustum">
            <summary>
            The frustum [fov,asepct-ratio,near,far]  
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.Viewport">
            <summary>
            The viewport [w,h,1/w,1/h]      
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.GlobalTransformStruct.EyePos">
            <summary>
            The eye position
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.SimpleMeshStruct">
            <summary>
            Used for simple mesh rendering without materials. Such as ShadowPass
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ModelStruct">
            <summary>
            Used combine with <see cref="T:HelixToolkit.SharpDX.Core.PhongPBRMaterialStruct"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PhongPBRMaterialStruct">
            <summary>
            Used combine with <see cref="T:HelixToolkit.SharpDX.Core.ModelStruct"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointLineModelStruct">
            <summary>
            Used combine with <see cref="T:HelixToolkit.SharpDX.Core.PointLineMaterialStruct"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointLineMaterialStruct">
            <summary>
            Used combine with <see cref="T:HelixToolkit.SharpDX.Core.PointLineModelStruct"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ParticleModelStruct">
            <summary>
            Used combine with <see cref="T:HelixToolkit.SharpDX.Core.PointLineMaterialStruct"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.LightStruct">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ClipPlaneStruct">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.UVTransform">
            <summary>
            2D UV Transform
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.UVTransform.Rotation">
            <summary>
            The rotation by radian
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.UVTransform.Scaling">
            <summary>
            The scaling
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.UVTransform.Translation">
            <summary>
            The translation
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.UVTransform.HasUVTransform">
            <summary>
            Gets a value indicating whether this instance has uv transform.
            </summary>
            <value>
              <c>true</c> if this instance has uv transform; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/> struct.
            </summary>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.#ctor(SharpDX.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/> struct.
            </summary>
            <param name="translation">The translation.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.#ctor(System.Single,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/> struct.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="scaling">The scaling.</param>
            <param name="translation">The translation.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/> struct.
            </summary>
            <param name="rotation">The rotation.</param>
            <param name="scalingX">The scaling x.</param>
            <param name="scalingY">The scaling y.</param>
            <param name="translationX">The translation x.</param>
            <param name="translationY">The translation y.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.op_Implicit(HelixToolkit.SharpDX.Core.UVTransform)~SharpDX.Matrix">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/> to <see cref="T:SharpDX.Matrix"/>.
            </summary>
            <param name="uvTransform">The uv transform.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.UVTransform.op_Implicit(SharpDX.Matrix)~HelixToolkit.SharpDX.Core.UVTransform">
            <summary>
            Performs an implicit conversion from <see cref="T:SharpDX.Matrix"/> to <see cref="T:HelixToolkit.SharpDX.Core.UVTransform"/>.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ScreenDuplicationModelStruct">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.perFrameFlattenedScene">
            <summary>
            The pending renderables
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.lightNodes">
            <summary>
            The light renderables
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.opaqueNodes">
            <summary>
            The pending render nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.opaqueNodesInFrustum">
            <summary>
            The opaque nodes in frustum
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.transparentNodes">
            <summary>
            The transparent nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.transparentNodesInFrustum">
            <summary>
            The transparent nodes in frustum
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.particleNodes">
            <summary>
            The particle nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.preProcNodes">
            <summary>
            The pending render nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.postProcNodes">
            <summary>
            The pending render nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.nodesForPostRender">
            <summary>
            The render nodes for post render
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.screenSpacedNodes">
            <summary>
            The pending render nodes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.viewportRenderable2D">
            <summary>
            The viewport renderable2D
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.needUpdateCores">
            <summary>
            The need update cores
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameFlattenedScene">
            <summary>
            Gets the current frame flattened scene graph. KeyValuePair.Key is the depth of the node.
            </summary>
            <value>
            Gets the current frame flattened scene graph
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameLights">
            <summary>
            Gets the per frame lights.
            </summary>
            <value>
            The per frame lights.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameOpaqueNodes">
            <summary>
            Gets the per frame nodes for opaque rendering. <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Opaque"/>
            <para>This does not include <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Transparent"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Particle"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PreProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PostProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Light"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.ScreenSpaced"/></para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameOpaqueNodesInFrustum">
            <summary>
            Gets the per frame opaque nodes in frustum.
            </summary>
            <value>
            The per frame opaque nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameTransparentNodesInFrustum">
            <summary>
            Gets the per frame transparent nodes in frustum.
            </summary>
            <value>
            The per frame transparent nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameTransparentNodes">
            <summary>
            Gets the per frame transparent nodes. , <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Transparent"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Particle"/>
            <para>This does not include <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Opaque"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PreProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.PostProc"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.Light"/>, <see cref="F:HelixToolkit.SharpDX.Core.RenderType.ScreenSpaced"/></para>
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameParticleNodes">
            <summary>
            Gets the per frame transparent nodes.
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameNodesWithPostEffect">
            <summary>
            Gets the per frame post effects cores. It is the subset of <see cref="P:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PerFrameOpaqueNodes"/>
            </summary>
            <value>
            The per frame post effects cores.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.#ctor(System.Func{HelixToolkit.SharpDX.Core.IDevice3DResources,HelixToolkit.SharpDX.Core.Render.IRenderer})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost"/> class.
            </summary>
            <param name="createRenderer">The create renderer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.CreateRenderBuffer">
            <summary>
            Creates the render buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PreRender(System.Boolean,System.Boolean)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PreRender(System.Boolean,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.OnRender(System.TimeSpan)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnRender(System.TimeSpan)"/>
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.PostRender">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PostRender"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.OnRender2D(System.TimeSpan)">
            <summary>
            Called when [render2 d].
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DefaultRenderHost.OnEndingD3D">
            <summary>
            Called when [ending d3 d].
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.RenderD2D">
            <summary>
            The render d2d
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.UpdatePerFrameData">
            <summary>
            The update global variable
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.RenderLights">
            <summary>
            Gets or sets a value indicating whether [render lights].
            </summary>
            <value>
              <c>true</c> if [render lights]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.ClearEachFrame">
            <summary>
            Gets or sets a value indicating whether [clear render target before each frame].
            </summary>
            <value>
              <c>true</c> if [clear render target before each frame]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.AutoUpdateOctree">
            <summary>
            Auto update octree in geometry during rendering. 
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.EnableOITRendering">
            <summary>
            Gets or sets a value indicating whether [enable oit rendering].
            </summary>
            <value>
              <c>true</c> if [enable oit rendering]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.OITWeightPower">
            <summary>
            Gets or sets the OIT weight power used for color weight calculation. Default = 3.
            </summary>
            <value>
            The OIT weight power.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.OITWeightDepthSlope">
            <summary>
            Gets or sets the oit weight depth slope. Used to increase resolution for particular range of depth values. 
            <para>If value = 2, the depth range from 0-0.5 expands to 0-1 to increase resolution. However, values from 0.5 - 1 will be pushed to 1</para>
            </summary>
            <value>
            The oit weight depth slope.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.OITWeightMode">
            <summary>
            Gets or sets the oit weight mode.
            <para>Please refer to http://jcgt.org/published/0002/02/09/ </para>
            <para>Linear0: eq7; Linear1: eq8; Linear2: eq9; NonLinear: eq10</para>
            </summary>
            <value>
            The oit weight mode.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.FXAALevel">
            <summary>
            Enable FXAA. If MSAA used, FXAA will be disabled automatically
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.EnableRenderOrder">
            <summary>
            Gets or sets a value indicating whether [enable render order] specified by user.
            </summary>
            <value>
              <c>true</c> if [enable render order]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.EnableVSync">
            <summary>
            Gets or sets a value indicating whether [enable vertical synchronize].
            </summary>
            <value>
              <c>true</c> if [enable v synchronize]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.EnableSSAO">
            <summary>
            Gets or sets a value indicating whether [enable SSAO].
            </summary>
            <value>
              <c>true</c> if [enable SSAO]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.SSAORadius">
            <summary>
            The SSAO sampling radius
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.SSAOBias">
            <summary>
            The ssao bias
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.SSAOIntensity">
            <summary>
            The ssao intensity
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.SSAOQuality">
            <summary>
            The ssao quality
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostConfiguration.MinimumUpdateCount">
            <summary>
            The update count. Used to render at least N frames for each InvalidateRenderer. 
            D3DImage sometimes not getting refresh if only render once.
            Default = 6.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.Draw(System.Int32,System.Int32)">
            <summary>
            Draw non-indexed, non-instanced primitives.
            </summary>
            <param name="vertexCount">Number of vertices to draw.</param>
            <param name="startVertexLocation">Index of the first vertex, which is usually an offset in a vertex buffer.</param>
            <remarks>
                Draw submits work to the rendering pipeline.The vertex data for a draw call normally
               comes from a vertex buffer that is bound to the pipeline.Even without any vertex
                buffer bound to the pipeline, you can generate your own vertex data in your vertex
                shader by using the SV_VertexID system-value semantic to determine the current
                vertex that the runtime is processing.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawAuto">
            <summary>
            Draw geometry of an unknown size.
            </summary>
            <remarks>
                A draw API submits work to the rendering pipeline. This API submits work of an
                unknown size that was processed by the input assembler, vertex shader, and stream-output
                stages; the work may or may not have gone through the geometry-shader stage.After
                data has been streamed out to stream-output stage buffers, those buffers can
                be again bound to the Input Assembler stage at input slot 0 and DrawAuto will
                draw them without the application needing to know the amount of data that was
                written to the buffers. A measurement of the amount of data written to the SO
                stage buffers is maintained internally when the data is streamed out. This means
                that the CPU does not need to fetch the measurement before re-binding the data
                that was streamed as input data. Although this amount is tracked internally,
                it is still the responsibility of applications to use input layouts to describe
                the format of the data in the SO stage buffers so that the layouts are available
                when the buffers are again bound to the input assembler.The following diagram
                shows the DrawAuto process.Calling DrawAuto does not change the state of the
                streaming-output buffers that were bound again as inputs.DrawAuto only works
                when drawing with one input buffer bound as an input to the IA stage at slot
                0. Applications must create the SO buffer resource with both binding flags, SharpDX.Direct3D11.BindFlags.VertexBuffer
                and SharpDX.Direct3D11.BindFlags.StreamOutput.This API does not support indexing
                or instancing.If an application needs to retrieve the size of the streaming-output
                buffer, it can query for statistics on streaming output by using SharpDX.Direct3D11.QueryType.StreamOutputStatistics.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw indexed, non-instanced primitives.
            </summary>
            <param name="indexCount">Number of indices to draw.</param>
            <param name="startIndexLocation">The location of the first index read by the GPU from the index buffer.</param>
            <param name="baseVertexLocation">A value added to each index before reading a vertex from the vertex buffer.</param>
            <remarks>
                A draw API submits work to the rendering pipeline.If the sum of both indices
                is negative, the result of the function call is undefined.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw indexed, instanced primitives.
            </summary>
            <param name="indexCountPerInstance"> Number of indices read from the index buffer for each instance.</param>
            <param name="instanceCount">Number of instances to draw.</param>
            <param name="startIndexLocation">The location of the first index read by the GPU from the index buffer.</param>
            <param name="baseVertexLocation">TA value added to each index before reading a vertex from the vertex buffer.</param>
            <param name="startInstanceLocation">A value added to each index before reading per-instance data from a vertex buffer.</param>
            <remarks>
                A draw API submits work to the rendering pipeline.Instancing may extend performance
                by reusing the same geometry to draw multiple objects in a scene. One example
                of instancing could be to draw the same object with different positions and colors.
                Instancing requires multiple vertex buffers: at least one for per-vertex data
                and a second buffer for per-instance data.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawIndexedInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Draw indexed, instanced, GPU-generated primitives.
            </summary>
            <param name="bufferForArgsRef">A reference to an SharpDX.Direct3D11.Buffer, which is a buffer containing the GPU generated primitives.</param>
            <param name="alignedByteOffsetForArgs">Offset in pBufferForArgs to the start of the GPU generated primitives.</param>
            <remarks>
                When an application creates a buffer that is associated with the SharpDX.Direct3D11.Buffer
                interface that pBufferForArgs points to, the application must set the SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments
                flag in the MiscFlags member of the SharpDX.Direct3D11.BufferDescription structure
                that describes the buffer. To create the buffer, the application calls the SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)
                method and in this call passes a reference to SharpDX.Direct3D11.BufferDescription
                in the pDesc parameter. Windows?Phone?8: This API is supported.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw non-indexed, instanced primitives.
            </summary>
            <param name="vertexCountPerInstance">Number of vertices to draw.</param>
            <param name="instanceCount">Number of instances to draw.</param>
            <param name="startVertexLocation">Index of the first vertex.</param>
            <param name="startInstanceLocation">A value added to each index before reading per-instance data from a vertex buffer.</param>
            <remarks>
                A draw API submits work to the rendering pipeline.Instancing may extend performance
                by reusing the same geometry to draw multiple objects in a scene. One example
                of instancing could be to draw the same object with different positions and colors.The
                vertex data for an instanced draw call normally comes from a vertex buffer that
                is bound to the pipeline. However, you could also provide the vertex data from
                a shader that has instanced data identified with a system-value semantic (SV_InstanceID).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DrawInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Draw instanced, GPU-generated primitives.
            </summary>
            <param name="bufferForArgsRef">A reference to an SharpDX.Direct3D11.Buffer, which is a buffer containing the GPU generated primitives.</param>
            <param name="alignedByteOffsetForArgs">Offset in pBufferForArgs to the start of the GPU generated primitives.</param>
            <remarks>
                When an application creates a buffer that is associated with the SharpDX.Direct3D11.Buffer
                interface that pBufferForArgs points to, the application must set the SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments
                flag in the MiscFlags member of the SharpDX.Direct3D11.BufferDescription structure
                that describes the buffer. To create the buffer, the application calls the SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)
                method and in this call passes a reference to SharpDX.Direct3D11.BufferDescription
                in the pDesc parameter.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.Dispatch(System.Int32,System.Int32,System.Int32)">
            <summary>
            Execute a command list from a thread group.
            </summary>
            <param name="threadGroupCountX">
                The number of groups dispatched in the x direction. ThreadGroupCountX must be
                less than or equal to SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension
                (65535).
             </param>
             <param name="threadGroupCountY">
                The number of groups dispatched in the y direction. ThreadGroupCountY must be
                less than or equal to SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension
                (65535).
             </param>
             <param name="threadGroupCountZ">
                The number of groups dispatched in the z direction. ThreadGroupCountZ must be
                less than or equal to SharpDX.Direct3D11.ComputeShaderStage.DispatchMaximumThreadGroupsPerDimension
                (65535). In feature level 10 the value for ThreadGroupCountZ must be 1.
             </param>
             <remarks>
                You call the Dispatch method to execute commands in a compute shader. A compute
                shader can be run on many threads in parallel, within a thread group. Index a
                particular thread, within a thread group using a 3D vector given by (x,y,z).In
                the following illustration, assume a thread group with 50 threads where the size
                of the group is given by (5,5,2). A single thread is identified from a thread
                group with 50 threads in it, using the vector (4,1,1).The following illustration
                shows the relationship between the parameters passed to SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32),
                Dispatch(5,3,2), the values specified in the numthreads attribute, numthreads(10,8,3),
                and values that will passed to the compute shader for the thread-related system
                values (SV_GroupIndex,SV_DispatchThreadID,SV_GroupThreadID,SV_GroupID).
             </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.DispatchIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Execute a command list over one or more thread groups.
            </summary>
            <param name="bufferForArgsRef">
                A reference to an SharpDX.Direct3D11.Buffer, which must be loaded with data that
                matches the argument list for SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32).
            </param>
            <param name="alignedByteOffsetForArgs">A byte-aligned offset between the start of the buffer and the arguments.</param>
            <remarks>
                You call the DispatchIndirect method to execute commands in a compute shader.When
                an application creates a buffer that is associated with the SharpDX.Direct3D11.Buffer
                interface that pBufferForArgs points to, the application must set the SharpDX.Direct3D11.ResourceOptionFlags.DrawIndirectArguments
                flag in the MiscFlags member of the SharpDX.Direct3D11.BufferDescription structure
                that describes the buffer. To create the buffer, the application calls the SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)
                method and in this call passes a reference to SharpDX.Direct3D11.BufferDescription
                in the pDesc parameter.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.FinishCommandList(System.Boolean)">
            <summary>
            Create a command list and record graphics commands into it.
            </summary>
            <param name="restoreState">
            A flag indicating whether the immediate context state is saved (prior) and restored
            (after) the execution of a command list.
            </param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ExecuteCommandList(SharpDX.Direct3D11.CommandList,System.Boolean)">
            <summary>
            Queues commands from a command list onto a device.
            </summary>
            <param name="commandListRef">The command list reference.</param>
            <param name="restoreContextState">
                A Boolean flag that determines whether the target context state is saved prior
                to and restored after the execution of a command list. Use TRUE to indicate that
                the runtime needs to save and restore the state. Use SharpDX.Result.False to
                indicate that no state shall be saved or restored, which causes the target context
                to return to its default state after the command list executes. Applications
                should typically use SharpDX.Result.False unless they will restore the state
                to be nearly equivalent to the state that the runtime would restore if TRUE were
                passed. When applications use SharpDX.Result.False, they can avoid unnecessary
                and inefficient state transitions.
            </param>
            <remarks>
                Use this method to play back a command list that was recorded by a deferred context
                on any thread. A call to ExecuteCommandList of a command list from a deferred
                context onto the immediate context is required for the recorded commands to be
                executed on the graphics processing unit (GPU). A call to ExecuteCommandList
                of a command list from a deferred context onto another deferred context can be
                used to merge recorded lists. But to run the commands from the merged deferred
                command list on the GPU, you need to execute them on the immediate context. This
                method performs some runtime validation related to queries. Queries that are
                begun in a device context cannot be manipulated indirectly by executing a command
                list (that is, Begin or End was invoked against the same query by the deferred
                context which generated the command list). If such a condition occurs, the ExecuteCommandList
                method does not execute the command list. However, the state of the device context
                is still maintained, as would be expected (SharpDX.Direct3D11.DeviceContext.ClearState
                is performed, unless the application indicates to preserve the device context
                state). Windows?Phone?8: This API is supported.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.Flush">
            <summary>
                Sends queued-up commands in the command buffer to the graphics processing unit
                (GPU).
            </summary>
            <remarks>
                Most applications don't need to call this method. If an application calls this
                method when not necessary, it incurs a performance penalty. Each call to Flush
                incurs a significant amount of overhead.When Microsoft Direct3D state-setting,
                present, or draw commands are called by an application, those commands are queued
                into an internal command buffer. Flush sends those commands to the GPU for processing.
                Typically, the Direct3D runtime sends these commands to the GPU automatically
                whenever the runtime determines that they need to be sent, such as when the command
                buffer is full or when an application maps a resource. Flush sends the commands
                manually.We recommend that you use Flush when the CPU waits for an arbitrary
                amount of time (such as when you call the Sleep function).Because Flush operates
                asynchronously, it can return either before or after the GPU finishes executing
                the queued graphics commands. However, the graphics commands eventually always
                complete. You can call the SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)
                method with the SharpDX.Direct3D11.QueryType.Event value to create an event query;
                you can then use that event query in a call to the SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)
                method to determine when the GPU is finished processing the graphics commands.
                Microsoft Direct3D?11 defers the destruction of objects. Therefore, an application
                can't rely upon objects immediately being destroyed. By calling Flush, you destroy
                any objects whose destruction was deferred. If an application requires synchronous
                destruction of an object, we recommend that the application release all its references,
                call SharpDX.Direct3D11.DeviceContext.ClearState, and then call Flush.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ResetDrawCalls">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.PrimitiveTopology">
            <summary>
            Gets or sets the primitive topology.
            </summary>
            <value>
            The primitive topology.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.InputLayout">
            <summary>
            Gets or sets the input layout.
            </summary>
            <value>
            The input layout.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetIndexBuffer(SharpDX.Direct3D11.Buffer,SharpDX.DXGI.Format,System.Int32)">
            <summary>
            Bind an index buffer to the input-assembler stage.
            </summary>
            <param name="indexBufferRef">
                A reference to an SharpDX.Direct3D11.Buffer object, that contains indices. The
                index buffer must have been created with the SharpDX.Direct3D11.BindFlags.IndexBuffer
                flag. 
            </param>
            <param name="format">
                A SharpDX.DXGI.Format that specifies the format of the data in the index buffer.
                The only formats allowed for index buffer data are 16-bit (SharpDX.DXGI.Format.R16_UInt)
                and 32-bit (SharpDX.DXGI.Format.R32_UInt) integers.
            </param>
            <param name="offset">Offset (in bytes) from the start of the index buffer to the first index to use.</param>
            <remarks>
                For information about creating index buffers, see How to: Create an Index Buffer.
                Calling this method using a buffer that is currently bound for writing (i.e.
                bound to the stream output pipeline stage) will effectively bind null instead
                because a buffer cannot be bound as both an input and an output at the same time.
                The debug layer will generate a warning whenever a resource is prevented from
                being bound simultaneously as an input and an output, but this will not prevent
                invalid data from being used by the runtime. The method will hold a reference
                to the interfaces passed in. This differs from the device state behavior in Direct3D
                10. Windows?Phone?8: This API is supported.  
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding@)">
            <summary>
            Bind a single vertex buffer to the input-assembler stage.
            </summary>
            <param name="slot">
                The first input slot for binding. The first vertex buffer is explicitly bound
                to the start slot; this causes each additional vertex buffer in the array to
                be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input
                slots (ranges from 0 to SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount
                - 1) are available; the maximum number of input slots depends on the feature
                level. 
            </param>
            <param name="vertexBufferBinding">
                A SharpDX.Direct3D11.VertexBufferBinding. The vertex buffer must have been created
                with the SharpDX.Direct3D11.BindFlags.VertexBuffer flag. 
            </param>
            <remarks>
                For information about creating vertex buffers, see Create a Vertex Buffer.Calling
                this method using a buffer that is currently bound for writing (i.e. bound to
                the stream output pipeline stage) will effectively bind null instead because
                a buffer cannot be bound as both an input and an output at the same time.The
                debug layer will generate a warning whenever a resource is prevented from being
                bound simultaneously as an input and an output, but this will not prevent invalid
                data from being used by the runtime. The method will hold a reference to the
                interfaces passed in. This differs from the device state behavior in Direct3D
                10. 
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding[])">
            <summary>
            Bind an array of vertex buffers to the input-assembler stage.
            </summary>
            <param name="firstSlot">
                The first input slot for binding. The first vertex buffer is explicitly bound
                to the start slot; this causes each additional vertex buffer in the array to
                be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input
                slots (ranges from 0 to SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount
                - 1) are available; the maximum number of input slots depends on the feature
                level. 
            </param>
            <param name="vertexBufferBindings">
                A reference to an array of SharpDX.Direct3D11.VertexBufferBinding. The vertex
                buffers must have been created with the SharpDX.Direct3D11.BindFlags.VertexBuffer
                flag. 
            </param>
            <remarks>
                For information about creating vertex buffers, see Create a Vertex Buffer.Calling
                this method using a buffer that is currently bound for writing (i.e. bound to
                the stream output pipeline stage) will effectively bind null instead because
                a buffer cannot be bound as both an input and an output at the same time.The
                debug layer will generate a warning whenever a resource is prevented from being
                bound simultaneously as an input and an output, but this will not prevent invalid
                data from being used by the runtime. The method will hold a reference to the
                interfaces passed in. This differs from the device state behavior in Direct3D
                10.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>
            Sets the vertex buffers.
            </summary>
            <param name="slot">
                The first input slot for binding. The first vertex buffer is explicitly bound
                to the start slot; this causes each additional vertex buffer in the array to
                be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input
                slots (ranges from 0 to SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount
                - 1) are available; the maximum number of input slots depends on the feature
                level.
            </param>
            <param name="vertexBuffers">
                A reference to an array of vertex buffers (see SharpDX.Direct3D11.Buffer). The
                vertex buffers must have been created with the SharpDX.Direct3D11.BindFlags.VertexBuffer
                flag.
            </param>
            <param name="stridesRef">
                Pointer to an array of stride values; one stride value for each buffer in the
                vertex-buffer array. Each stride is the size (in bytes) of the elements that
                are to be used from that vertex buffer.
            </param>
            <param name="offsetsRef">
                Pointer to an array of offset values; one offset value for each buffer in the
                vertex-buffer array. Each offset is the number of bytes between the first element
                of a vertex buffer and the first element that will be used.
            </param>
            <remarks>
                For information about creating vertex buffers, see Create a Vertex Buffer.Calling
                this method using a buffer that is currently bound for writing (i.e. bound to
                the stream output pipeline stage) will effectively bind null instead because
                a buffer cannot be bound as both an input and an output at the same time.The
                debug layer will generate a warning whenever a resource is prevented from being
                bound simultaneously as an input and an output, but this will not prevent invalid
                data from being used by the runtime. The method will hold a reference to the
                interfaces passed in. This differs from the device state behavior in Direct3D
                10.     
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Texture2D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
                Maps the data contained in a subresource to a memory pointer, and denies the
                GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The stream.</param>
            <returns>The locked SharpDX.DataBox</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
                Maps the data contained in a subresource to a memory pointer, and denies the
                GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The stream.</param>
            <returns>The locked SharpDX.DataBox   </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Texture3D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
                Maps the data contained in a subresource to a memory pointer, and denies the
                GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The stream.</param>
            <returns>The locked SharpDX.DataBox</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Buffer,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
                Maps the data contained in a subresource to a memory pointer, and denies the
                GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The stream.</param>
            <returns>The locked SharpDX.DataBox      </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,System.Int32@)">
            <summary>
            Maps the subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="mipSizeOut">Size of the mip.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags)">
            <summary>
            Maps the subresource.
            </summary>
            <param name="resourceRef">The resource reference.</param>
            <param name="subresource">The subresource.</param>
            <param name="mapType">Type of the map.</param>
            <param name="mapFlags">The map flags.</param>
            <returns></returns>
            <remarks>
                If you call Map on a deferred context, you can only pass SharpDX.Direct3D11.MapMode.WriteDiscard,
                SharpDX.Direct3D11.MapMode.WriteNoOverwrite, or both to the MapType parameter.
                Other SharpDX.Direct3D11.MapMode-typed values are not supported for a deferred
                context.The Direct3D 11.1 runtime, which is available starting with Windows Developer
                Preview, can map shader resource views (SRVs) of dynamic buffers with SharpDX.Direct3D11.MapMode.WriteNoOverwrite.
                The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers.
                If SharpDX.Direct3D11.MapFlags.DoNotWait is used and the resource is still being
                used by the GPU, this method return an empty DataBox whose property SharpDX.DataBox.IsEmpty
                returns true.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>
            Invalidate the reference to a resource and reenable the GPU's access to that resource.
            </summary>
            <param name="resourceRef">The resource reference.</param>
            <param name="subresource">The subresource.</param>
            <remarks>
                For info about how to use Unmap, see How to: Use dynamic resources. Windows?Phone?8:
                This API is supported.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ResolveSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>
            Copy a multisampled resource into a non-multisampled resource.
            </summary>
            <param name="source">Source resource. Must be multisampled.</param>
            <param name="sourceSubresource">The source subresource.</param>
            <param name="destination">
                Destination resource. Must be a created with the SharpDX.Direct3D11.ResourceUsage.Default
                flag and be single-sampled. See SharpDX.Direct3D11.Resource.
            </param>
            <param name="destinationSubresource">A zero-based index, that identifies the destination subresource. Use {{D3D11CalcSubresource}} to calculate the index.</param>
            <param name="format"> A SharpDX.DXGI.Format that indicates how the multisampled resource will be resolved to a single-sampled resource. See remarks.</param>
            <remarks>
                This API is most useful when re-using the resulting render target of one render
                pass as an input to a second render pass. The source and destination resources
                must be the same resource type and have the same dimensions. In addition, they
                must have compatible formats. There are three scenarios for this: ScenarioRequirements
                Source and destination are prestructured and typedBoth the source and destination
                must have identical formats and that format must be specified in the Format parameter.
                One resource is prestructured and typed and the other is prestructured and typelessThe
                typed resource must have a format that is compatible with the typeless resource
                (i.e. the typed resource is DXGI_FORMAT_R32_FLOAT and the typeless resource is
                DXGI_FORMAT_R32_TYPELESS). The format of the typed resource must be specified
                in the Format parameter. Source and destination are prestructured and typelessBoth
                the source and destination must have the same typeless format (i.e. both must
                have DXGI_FORMAT_R32_TYPELESS), and the Format parameter must specify a format
                that is compatible with the source and destination (i.e. if both are DXGI_FORMAT_R32_TYPELESS
                then DXGI_FORMAT_R32_FLOAT could be specified in the Format parameter). For example,
                given the DXGI_FORMAT_R16G16B16A16_TYPELESS format: The source (or dest) format
                could be DXGI_FORMAT_R16G16B16A16_UNORM The dest (or source) format could be
                DXGI_FORMAT_R16G16B16A16_FLOAT ?
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The CPU copies data from memory to a subresource created in non-mappable memory.
            </summary>
            <param name="dstResourceRef">A reference to the destination resource (see SharpDX.Direct3D11.Resource).</param>
            <param name="dstSubresource">A zero-based index, that identifies the destination subresource. See D3D11CalcSubresource for more details.</param>
            <param name="dstBoxRef">
                A reference to a box that defines the portion of the destination subresource
                to copy the resource data into. Coordinates are in bytes for buffers and in texels
                for textures. If null, the data is written to the destination subresource with
                no offset. The dimensions of the source must fit the destination (see SharpDX.Direct3D11.ResourceRegion).
                An empty box results in a no-op. A box is empty if the top value is greater than
                or equal to the bottom value, or the left value is greater than or equal to the
                right value, or the front value is greater than or equal to the back value. When
                the box is empty, UpdateSubresource doesn't perform an update operation.
            </param>
            <param name="srcDataRef">A reference to the source data in memory.</param>
            <param name="srcRowPitch">The size of one row of the source data.</param>
            <param name="srcDepthPitch">The size of one depth slice of source data.</param>
            <remarks>
            Remarks:
                For a shader-constant buffer; set pDstBox to null. It is not possible to use
                this method to partially update a shader-constant buffer.A resource cannot be
                used as a destination if: the resource is created with immutable or dynamic usage.
                the resource is created as a depth-stencil resource. the resource is created
                with multisampling capability (see SharpDX.DXGI.SampleDescription). When UpdateSubresource
                returns, the application is free to change or even free the data pointed to by
                pSrcData because the method has already copied/snapped away the original contents.The
                performance of UpdateSubresource depends on whether or not there is contention
                for the destination resource. For example, contention for a vertex buffer resource
                occurs when the application executes a Draw call and later calls UpdateSubresource
                on the same vertex buffer before the Draw call is actually executed by the GPU.
                When there is contention for the resource, UpdateSubresource will perform 2 copies
                of the source data. First, the data is copied by the CPU to a temporary storage
                space accessible by the command buffer. This copy happens before the method returns.
                A second copy is then performed by the GPU to copy the source data into non-mappable
                memory. This second copy happens asynchronously because it is executed by GPU
                when the command buffer is flushed. When there is no resource contention, the
                behavior of UpdateSubresource is dependent on which is faster (from the CPU's
                perspective): copying the data to the command buffer and then having a second
                copy execute when the command buffer is flushed, or having the CPU copy the data
                to the final resource location. This is dependent on the architecture of the
                underlying system. Note??Applies only to feature level 9_x hardware If you use
                UpdateSubresource or SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})
                to copy from a staging resource to a default resource, you can corrupt the destination
                contents. This occurs if you pass a null source box and if the source resource
                has different dimensions from those of the destination resource or if you use
                destination offsets, (x, y, and z). In this situation, always pass a source box
                that is the full size of the source resource.?To better understand the source
                row pitch and source depth pitch parameters, the following illustration shows
                a 3D volume texture.Each block in this visual represents an element of data,
                and the size of each element is dependent on the resource's format. For example,
                if the resource format is SharpDX.DXGI.Format.R32G32B32A32_Float, the size of
                each element would be 128 bits, or 16 bytes. This 3D volume texture has a width
                of two, a height of three, and a depth of four.To calculate the source row pitch
                and source depth pitch for a given resource, use the following formulas: Source
                Row Pitch = [size of one element in bytes] * [number of elements in one row]
                Source Depth Pitch = [Source Row Pitch] * [number of rows (height)] In the case
                of this example 3D volume texture where the size of each element is 16 bytes,
                the formulas are as follows: Source Row Pitch = 16 * 2 = 32 Source Depth Pitch
                = 16 * 2 * 3 = 96 The following illustration shows the resource as it is laid
                out in memory.For example, the following code snippet shows how to specify a
                destination region in a 2D texture. Assume the destination texture is 512x512
                and the operation will copy the data pointed to by pData to [(120,100)..(200,220)]
                in the destination texture. Also assume that rowPitch has been initialized with
                the proper value (as explained above). front and back are set to 0 and 1 respectively,
                because by having front equal to back, the box is technically empty. SharpDX.Direct3D11.ResourceRegion
                destRegion; destRegion.left = 120; destRegion.right = 200; destRegion.top = 100;
                destRegion.bottom = 220; destRegion.front = 0; destRegion.back = 1; pd3dDeviceContext->UpdateSubresource(
                pDestTexture, 0, destRegion, pData, rowPitch, 0 ); The 1D case is similar. The
                following snippet shows how to specify a destination region in a 1D texture.
                Use the same assumptions as above, except that the texture is 512 in length.
                SharpDX.Direct3D11.ResourceRegion destRegion; destRegion.left = 120; destRegion.right
                = 200; destRegion.top = 0; destRegion.bottom = 1; destRegion.front = 0; destRegion.back
                = 1; pd3dDeviceContext->UpdateSubresource( pDestTexture, 0, destRegion, pData,
                rowPitch, 0 ); For info about various resource types and how UpdateSubresource
                might work with each resource type, see Introduction to a Resource in Direct3D
                11.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.ResourceRegion@)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source.</param>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="region">The region.</param>
            <remarks>This method is implementing the workaround for deferred context.</remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source.</param>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <remarks>This method is implementing the workaround for deferred context.       </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresource``1(``0[],SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="region">
            A region that defines the portion of the destination subresource to copy the
            resource data into. Coordinates are in bytes for buffers and in texels for textures.
            </param>
            <remarks>This method is implementing the workaround for deferred context.     </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresource``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="region">The region.</param>
            <remarks>This method is implementing the workaround for deferred context.        </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresourceSafe(SharpDX.DataBox@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source.</param>
            <param name="resource">The resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The subresource.</param>
            <param name="isCompressedResource">if set to true the resource is a block/compressed resource</param>
            <remarks>This method is implementing the workaround for deferred context. </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresourceSafe(SharpDX.DataBox@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,SharpDX.Direct3D11.ResourceRegion,System.Boolean)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source.</param>
            <param name="resource">The resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The subresource.</param>
            <param name="region">The region.</param>
            <param name="isCompressedResource">if set to true the resource is a block/compressed resource</param>
            <remarks>This method is implementing the workaround for deferred context.    </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresourceSafe``1(``0[],SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="resource">The resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="isCompressedResource">if set to true the resource is a block/compressed resource</param>
            <remarks>This method is implementing the workaround for deferred context.       </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.UpdateSubresourceSafe``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="resource">The resource.</param>
            <param name="srcBytesPerElement">The size in bytes per pixel/block element.</param>
            <param name="subresource">The subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
            <param name="isCompressedResource">if set to <c>true</c> [is compressed resource].</param>
            <remarks>This method is implementing the workaround for deferred context.  </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.CopyResource(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)">
            <summary>
                Copy the entire contents of the source resource to the destination resource using
                the GPU.
            </summary>
            <param name="source">A reference to the source resource (see SharpDX.Direct3D11.Resource).</param>
            <param name="destination">A reference to the destination resource (see SharpDX.Direct3D11.Resource).</param>
            <remarks>
                This method is unusual in that it causes the GPU to perform the copy operation
                (similar to a memcpy by the CPU). As a result, it has a few restrictions designed
                for improving performance. For instance, the source and destination resources:
                Must be different resources. Must be the same type. Must have identical dimensions
                (including width, height, depth, and size as appropriate). Will only be copied.
                CopyResource does not support any stretch, color key, blend, or format conversions.
                Must have compatible DXGI formats, which means the formats must be identical
                or at least from the same type group. For example, a DXGI_FORMAT_R32G32B32_FLOAT
                texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of
                these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. Might not be currently
                mapped. You cannot use an {{Immutable}} resource as a destination. You can use
                a {{depth-stencil}} resource as either a source or a destination. Resources created
                with multisampling capability (see SharpDX.DXGI.SampleDescription) can be used
                as source and destination only if both source and destination have identical
                multisampled count and quality. If source and destination differ in multisampled
                count and quality or if one is multisampled and the other is not multisampled
                the call to ID3D11DeviceContext::CopyResource fails. The method is an asynchronous
                call which may be added to the command-buffer queue. This attempts to remove
                pipeline stalls that may occur when copying data. An application that only needs
                to copy a portion of the data in a resource should use SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})
                instead.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>
            Copies data from a buffer holding variable length data.
            </summary>
            <param name="dstBufferRef">
                Pointer to SharpDX.Direct3D11.Buffer. This can be any buffer resource that other
                copy commands, such as SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)
                or SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion}),
                are able to write to.
            </param>
            <param name="dstAlignedByteOffset">
                Offset from the start of pDstBuffer to write 32-bit UINT structure (vertex) count
                from pSrcView.
            </param>
            <param name="srcViewRef">
                Pointer to an SharpDX.Direct3D11.UnorderedAccessView of a Structured Buffer resource
                created with either SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append
                or SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter specified when the
                UAV was created. These types of resources have hidden counters tracking "how
                many" records have been written.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.CopySubresourceRegion(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a region from a source resource to a destination resource.
            </summary>
            <param name="source">A reference to the source resource (see SharpDX.Direct3D11.Resource).</param>
            <param name="sourceSubresource">Source subresource index.</param>
            <param name="sourceRegion">
                A reference to a 3D box (see SharpDX.Direct3D11.ResourceRegion) that defines
                the source subresources that can be copied. If NULL, the entire source subresource
                is copied. The box must fit within the source resource.
            </param>
            <param name="destination">A reference to the destination resource (see SharpDX.Direct3D11.Resource).</param>
            <param name="destinationSubResource">Destination subresource index.</param>
            <param name="dstX">The x-coordinate of the upper left corner of the destination region.</param>
            <param name="dstY">
                The y-coordinate of the upper left corner of the destination region. For a 1D
                subresource, this must be zero.
            </param>
            <param name="dstZ">
                The z-coordinate of the upper left corner of the destination region. For a 1D
                or 2D subresource, this must be zero.
            </param>
            <remarks>
                The source box must be within the size of the source resource. The destination
                offsets, (x, y, and z) allow the source box to be offset when writing into the
                destination resource; however, the dimensions of the source box and the offsets
                must be within the size of the resource. If the resources are buffers, all coordinates
                are in bytes; if the resources are textures, all coordinates are in texels. {{D3D11CalcSubresource}}
                is a helper function for calculating subresource indexes. CopySubresourceRegion
                performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence,
                the source and destination resources: Must be different subresources (although
                they can be from the same resource). Must be the same type. Must have compatible
                DXGI formats (identical or from the same type group). For example, a DXGI_FORMAT_R32G32B32_FLOAT
                texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of
                these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. May not be currently
                mapped. CopySubresourceRegion only supports copy; it does not support any stretch,
                color key, blend, or format conversions. An application that needs to copy an
                entire resource should use SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)
                instead. CopySubresourceRegion is an asynchronous call which may be added to
                the command-buffer queue, this attempts to remove pipeline stalls that may occur
                when copying data. See performance considerations for more details. Note??If
                you use CopySubresourceRegion with a depth-stencil buffer or a multisampled resource,
                you must copy the whole subresource. In this situation, you must pass 0 to the
                DstX, DstY, and DstZ parameters and NULL to the pSrcBox parameter. In addition,
                source and destination resources, which are represented by the pSrcResource and
                pDstResource parameters, should have identical sample count values. Example The
                following code snippet copies a box (located at (120,100),(200,220)) from a source
                texture into a region (10,20),(90,140) in a destination texture. D3D11_BOX sourceRegion;
                sourceRegion.left = 120; sourceRegion.right = 200; sourceRegion.top = 100; sourceRegion.bottom
                = 220; sourceRegion.front = 0; sourceRegion.back = 1; pd3dDeviceContext->CopySubresourceRegion(
                pDestTexture, 0, 10, 20, 0, pSourceTexture, 0, sourceRegion ); Notice, that
                for a 2D texture, front and back are set to 0 and 1 respectively.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GenerateMips(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Generates mipmaps for the given shader resource.
            </summary>
            <param name="shaderResourceViewRef">The shader resource view reference.</param>
            <remarks>
                You can call GenerateMips on any shader-resource view to generate the lower mipmap
                levels for the shader resource. GenerateMips uses the largest mipmap level of
                the view to recursively generate the lower levels of the mip and stops with the
                smallest level that is specified by the view. If the base resource wasn't created
                with SharpDX.Direct3D11.BindFlags.RenderTarget, SharpDX.Direct3D11.BindFlags.ShaderResource,
                and SharpDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps, the call to GenerateMips
                has no effect.Feature levels 9.1, 9.2, and 9.3 can't support automatic generation
                of mipmaps for 3D (volume) textures.Video adapters that support feature level
                9.1 and higher support generating mipmaps if you use any of these formats: SharpDX.DXGI.Format.R8G8B8A8_UNorm
                SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb SharpDX.DXGI.Format.B5G6R5_UNorm SharpDX.DXGI.Format.B8G8R8A8_UNorm
                SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb SharpDX.DXGI.Format.B8G8R8X8_UNorm SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb
                Video adapters that support feature level 9.2 and higher support generating mipmaps
                if you use any of these formats in addition to any of the formats for feature
                level 9.1: SharpDX.DXGI.Format.R16G16B16A16_Float SharpDX.DXGI.Format.R16G16B16A16_UNorm
                SharpDX.DXGI.Format.R16G16_Float SharpDX.DXGI.Format.R16G16_UNorm SharpDX.DXGI.Format.R32_Float
                Video adapters that support feature level 9.3 and higher support generating mipmaps
                if you use any of these formats in addition to any of the formats for feature
                levels 9.1 and 9.2: SharpDX.DXGI.Format.R32G32B32A32_Float DXGI_FORMAT_B4G4R4A4
                (optional) Video adapters that support feature level 10 and higher support generating
                mipmaps if you use any of these formats in addition to any of the formats for
                feature levels 9.1, 9.2, and 9.3: SharpDX.DXGI.Format.R32G32B32_Float (optional)
                SharpDX.DXGI.Format.R16G16B16A16_SNorm SharpDX.DXGI.Format.R32G32_Float SharpDX.DXGI.Format.R10G10B10A2_UNorm
                SharpDX.DXGI.Format.R11G11B10_Float SharpDX.DXGI.Format.R8G8B8A8_SNorm SharpDX.DXGI.Format.R16G16_SNorm
                SharpDX.DXGI.Format.R8G8_UNorm SharpDX.DXGI.Format.R8G8_SNorm SharpDX.DXGI.Format.R16_Float
                SharpDX.DXGI.Format.R16_UNorm SharpDX.DXGI.Format.R16_SNorm SharpDX.DXGI.Format.R8_UNorm
                SharpDX.DXGI.Format.R8_SNorm SharpDX.DXGI.Format.A8_UNorm SharpDX.DXGI.Format.B5G5R5A1_UNorm
                (optional) For all other unsupported formats, GenerateMips will silently fail.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.VertexShader,System.Boolean)">
            <summary>
            Sets the vertex shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.HullShader,System.Boolean)">
            <summary>
            Sets the hull shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.DomainShader,System.Boolean)">
            <summary>
            Sets the domain shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.GeometryShader,System.Boolean)">
            <summary>
            Sets the geometry shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.PixelShader,System.Boolean)">
            <summary>
            Sets the pixel shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShader(HelixToolkit.SharpDX.Core.Shaders.ComputeShader,System.Boolean)">
            <summary>
            Sets the compute shader.
            </summary>
            <param name="shader">The shader.</param>
            <param name="bindConstantBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture.  Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shader type. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shader. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shader type.  Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler.  Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shader type.  Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shader type. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.VertexShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.VertexShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.DomainShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.DomainShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.HullShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.HullShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.GeometryShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.GeometryShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.PixelShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.PixelShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResource(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetShaderResources(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
            Binds the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetShaderResources(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the texture. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetUnorderedAccessView(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>
            Binds the unordered access view. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="uav">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetUnorderedAccessViews(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>
            Binds the unordered access views. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="UAVs">The texture.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetUnorderedAccessView(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the unordered access view. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSampler(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="sampler">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetSamplers(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
            Binds the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="slot">The slot.</param>
            <param name="samplers">The sampler.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetSampler(HelixToolkit.SharpDX.Core.ComputeShaderType,System.Int32,System.Int32)">
            <summary>
            Gets the sampler. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/>
            </summary>
            <param name="shaderType">The shaderType. Use <see cref="F:HelixToolkit.SharpDX.Core.Shaders.ComputeShader.Type"/></param>
            <param name="startSlot">The start slot.</param>
            <param name="num">The number.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRasterState(HelixToolkit.SharpDX.Core.Utilities.RasterizerStateProxy)">
            <summary>
            Sets the state of the raster.
            </summary>
            <param name="rasterState">State of the raster.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetDepthStencilState(HelixToolkit.SharpDX.Core.Utilities.DepthStencilStateProxy,System.Int32)">
            <summary>
            Sets the state of the depth stencil.
            </summary>
            <param name="depthStencilState">State of the depth stencil.</param>
            <param name="stencilRef">The stencil reference.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetBlendState(HelixToolkit.SharpDX.Core.Utilities.BlendStateProxy,System.Nullable{SharpDX.Color4},System.Int32)">
            <summary>
            Sets the state of the blend.
            </summary>
            <param name="blendState">State of the blend.</param>
            <param name="blendFactor">The blend factor.</param>
            <param name="sampleMask">The sample mask.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetBlendState(HelixToolkit.SharpDX.Core.Utilities.BlendStateProxy,System.Nullable{SharpDX.Color4},System.UInt32)">
            <summary>
            Sets the state of the blend.
            </summary>
            <param name="blendState">State of the blend.</param>
            <param name="blendFactor">The blend factor.</param>
            <param name="sampleMask">The sample mask.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTargets(HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase)">
             <summary>
            
             </summary>
             <param name="buffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTarget(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView)">
            <summary>
            Sets the render target.
            </summary>
            <param name="dsv">The DSV.</param>
            <param name="renderTarget">The render target.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
            Sets the render targets.
            </summary>
            <param name="dsv">The DSV.</param>
            <param name="renderTarget">The render target.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetStreamOutputTarget(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
            Sets the stream output target.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetStreamOutputTarget(SharpDX.Direct3D11.StreamOutputBufferBinding[])">
            <summary>
            Sets the stream output target.
            </summary>
            <param name="bufferBindings">The buffer bindings.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetDepthStencilOnly(SharpDX.Direct3D11.DepthStencilView)">
            <summary>
            Sets the depth stencil only. This will clear all render target bindings and only binds depth stencil view to output merger.
            </summary>
            <param name="dsv">The DSV.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTargetOnly(SharpDX.Direct3D11.RenderTargetView)">
            <summary>
            Sets the render target only.
            </summary>
            <param name="rtv">The RTV.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTarget(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,System.Int32,System.Boolean,SharpDX.Color4,System.Boolean,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>
            Sets the render target.
            </summary>
            <param name="dsv">The DSV.</param>
            <param name="rtv">The RTV.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="clearRTV">if set to <c>true</c> [clear RTV].</param>
            <param name="clearDSV">if set to <c>true</c> [clear DSV].</param>
            <param name="color"></param>
            <param name="flags"></param>
            <param name="depth"></param>
            <param name="stencil"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTarget(SharpDX.Direct3D11.RenderTargetView,System.Int32,System.Int32,System.Boolean,SharpDX.Color4)">
            <summary>
            Sets the render target. This sets depth stencil buffer to null
            </summary>
            <param name="rtv">The RTV.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="clearRTV">if set to <c>true</c> [clear RTV].</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTarget(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,System.Int32)">
            <summary>
            Sets the render target but no clear.
            </summary>
            <param name="dsv">The DSV.</param>
            <param name="rtv">The RTV.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetRenderTarget(SharpDX.Direct3D11.RenderTargetView,System.Int32,System.Int32)">
            <summary>
            Sets the render target no clear. This sets depth stencil buffer to null
            </summary>
            <param name="rtv">The RTV.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetDepthStencilView(SharpDX.Direct3D11.DepthStencilView@)">
            <summary>
            Gets the depth stencil view.
            </summary>
            <param name="depthStencilViewRef">The depth stencil view reference.</param>
            <remarks>
                Any returned interfaces will have their reference count incremented by one. Applications
                should call {{IUnknown::Release}} on the returned interfaces when they are no
                longer needed to avoid memory leaks.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetRenderTargets(System.Int32)">
            <summary>
            Gets the render targets.
            </summary>
            <param name="numViews">The number views.</param>
            <returns></returns>
            <remarks>
                Any returned interfaces will have their reference count incremented by one. Applications
                should call {{IUnknown::Release}} on the returned interfaces when they are no
                longer needed to avoid memory leaks.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetRenderTargets(System.Int32,SharpDX.Direct3D11.DepthStencilView@)">
            <summary>
            Gets the render targets.
            </summary>
            <param name="numViews">The number views.</param>
            <param name="depthStencilViewRef">The depth stencil view reference.</param>
            <returns></returns>
            <remarks>
                Any returned interfaces will have their reference count incremented by one. Applications
                should call {{IUnknown::Release}} on the returned interfaces when they are no
                longer needed to avoid memory leaks.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>
            Gets the unordered access views.
            </summary>
            <param name="startSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).</param>
            <param name="count"> Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot).</param>
            <returns></returns>
            <remarks>
                Any returned interfaces will have their reference count incremented by one. Applications
                should call IUnknown::Release on the returned interfaces when they are no longer
                needed to avoid memory leaks.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearRenderTargets(HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase,SharpDX.Color4)">
            <summary>
            Clears the render targets.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearDepthStencilView(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>
            Clears the depth stencil view.
            </summary>
            <param name="view">The view.</param>
            <param name="clearFlag">The clear flag.</param>
            <param name="depth">The depth.</param>
            <param name="stencil">The stencil.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearRenderTargetView(SharpDX.Direct3D11.RenderTargetView,SharpDX.Color4)">
            <summary>
            Clears the render target view.
            </summary>
            <param name="renderTargetViewRef">The render target view reference.</param>
            <param name="colorRGBA">A 4-component array that represents the color to fill the render target with.</param>
            <remarks>
                Applications that wish to clear a render target to a specific integer value bit
                pattern should render a screen-aligned quad instead of using this method. The
                reason for this is because this method accepts as input a floating point value,
                which may not have the same bit pattern as the original integer. Differences
                between Direct3D 9 and Direct3D 11/10: Unlike Direct3D 9, the full extent of
                the resource view is always cleared. Viewport and scissor settings are not applied.
                ?When using D3D_FEATURE_LEVEL_9_x, ClearRenderTargetView only clears the first
                array slice in the render target view. This can impact (for example) cube map
                rendering scenarios. Applications should create a render target view for each
                face or array slice, then clear each view individually.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearRenderTagetBindings">
             <summary>
            
             </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,SharpDX.Int4)">
            <summary>
            Clears an unordered access resource with bit-precise values.
            </summary>
            <param name="unorderedAccessViewRef">The unordered access view reference.</param>
            <param name="values">The values.</param>
            <remarks>
                This API copies the lower ni bits from each array element i to the corresponding
                channel, where ni is the number of bits in the ith channel of the resource format
                (for example, R8G8B8_FLOAT has 8 bits for the first 3 channels). This works on
                any UAV with no format conversion. For a raw or structured buffer view, only
                the first array element value is used.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,SharpDX.Vector4)">
            <summary>
            Clears an unordered access resource with a float value.
            </summary>
            <param name="unorderedAccessViewRef">The unordered access view reference.</param>
            <param name="values">The values.</param>
            <remarks>
                This API works on FLOAT, UNORM, and SNORM unordered access views (UAVs), with
                format conversion from FLOAT to *NORM where appropriate. On other UAVs, the operation
                is invalid and the call will not reach the driver.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetScissorRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the scissor rectangle.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
            <remarks>
                All scissor rects must be set atomically as one operation. Any scissor rects
                not defined by the call are disabled.The scissor rectangles will only be used
                if ScissorEnable is set to true in the rasterizer state (see SharpDX.Direct3D11.RasterizerStateDescription).Which
                scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic
                output by a geometry shader (see shader semantic syntax). If a geometry shader
                does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use
                the first scissor rectangle in the array.Each scissor rectangle in the array
                corresponds to a viewport in an array of viewports (see SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.Mathematics.Interop.RawViewportF[],System.Int32)).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetScissorRectangles``1(``0[])">
            <summary>
            Binds a set of scissor rectangles to the rasterizer stage.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="scissorRectangles">The scissor rectangles.</param>
            <remarks>
                All scissor rects must be set atomically as one operation. Any scissor rects
                not defined by the call are disabled.The scissor rectangles will only be used
                if ScissorEnable is set to true in the rasterizer state (see SharpDX.Direct3D11.RasterizerStateDescription).Which
                scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic
                output by a geometry shader (see shader semantic syntax). If a geometry shader
                does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use
                the first scissor rectangle in the array.Each scissor rectangle in the array
                corresponds to a viewport in an array of viewports (see SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.Mathematics.Interop.RawViewportF[],System.Int32)).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetViewport(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="minZ">The minimum z.</param>
            <param name="maxZ">The maximum z.</param>
            <remarks>
                All viewports must be set atomically as one operation. Any viewports not defined
                by the call are disabled.Which viewport to use is determined by the SV_ViewportArrayIndex
                semantic output by a geometry shader; if a geometry shader does not specify the
                semantic, Direct3D will use the first viewport in the array.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetViewport(SharpDX.Viewport@)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="viewport">The viewport.</param>
            <remarks>
                All viewports must be set atomically as one operation. Any viewports not defined
                by the call are disabled.Which viewport to use is determined by the SV_ViewportArrayIndex
                semantic output by a geometry shader; if a geometry shader does not specify the
                semantic, Direct3D will use the first viewport in the array.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.SetViewport(SharpDX.ViewportF@)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="viewport">The viewport.</param>
            <remarks>
                All viewports must be set atomically as one operation. Any viewports not defined
                by the call are disabled.Which viewport to use is determined by the SV_ViewportArrayIndex
                semantic output by a geometry shader; if a geometry shader does not specify the
                semantic, Direct3D will use the first viewport in the array.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.CurrShaderPass">
            <summary>
            Gets or sets the last shader pass.
            </summary>
            <value>
            The last shader pass.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.NumberOfDrawCalls">
            <summary>
            Gets the number of draw calls.
            </summary>
            <value>
            The number of draw calls.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.#ctor(SharpDX.Direct3D11.Device1)">
            <summary>
            Initializes a new deferred context
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.#ctor(SharpDX.Direct3D11.DeviceContext1,SharpDX.Direct3D11.Device1)">
            <summary>
            Muse pass immediate context for this constructor
            </summary>
            <param name="context">The context.</param>
            <param name="device">device</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.op_Explicit(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)~SharpDX.Direct3D11.DeviceContext1">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy"/> to <see cref="T:SharpDX.Direct3D11.DeviceContext1"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.op_Implicit(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)~SharpDX.Direct3D11.Device1">
            <summary>
            Performs an implicit conversion from <see cref="T:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy"/> to <see cref="T:SharpDX.Direct3D11.Device1"/>.
            </summary>
            <param name="proxy">The proxy.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.ClearState">
            <summary>
            Restore all default settings.
            </summary>
            <remarks>
                This method resets any device context to the default settings. This sets all
                input/output resource slots, shaders, input layouts, predications, scissor rectangles,
                depth-stencil state, rasterizer state, blend state, sampler state, and viewports
                to null. The primitive topology is set to UNDEFINED.For a scenario where you
                would like to clear a list of commands recorded so far, call SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(SharpDX.Mathematics.Interop.RawBool,SharpDX.Direct3D11.CommandList@)
                and throw away the resulting SharpDX.Direct3D11.CommandList.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextProxy.OnDispose(System.Boolean)">
             <summary>
            
             </summary>
             <param name="disposeManagedResources"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.CurrentSRV">
            <summary>
            Gets the current ShaderResourceViewProxy.
            </summary>
            <value>
            The current SRV.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.NextSRV">
            <summary>
            Gets the next SRV.
            </summary>
            <value>
            The next SRV.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.CurrentRTV">
            <summary>
            Gets the current RenderTargetView.
            </summary>
            <value>
            The current RTV.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.NextRTV">
            <summary>
            Gets the next RTV.
            </summary>
            <value>
            The next RTV.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.#ctor(SharpDX.DXGI.Format,System.Int32,System.Int32,HelixToolkit.SharpDX.Core.IDevice3DResources)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers"/> class.
            </summary>
            <param name="textureFormat">The texture format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="deviceRes">The device resource.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.PingPongColorBuffers.SwapTargets">
            <summary>
            Swaps the targets.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.TexturePool.Get(SharpDX.DXGI.Format)">
            <summary>
            Gets the off screen texture with specified format. After using it, make sure to call Dispose() to return it back into the pool.
            </summary>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase">
            <summary>
            
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.OnNewBufferCreated">
            <summary>
            Occurs when [on new buffer created].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DeviceLost">
            <summary>
            Occurs when [on device lost].
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.colorBuffer">
            <summary>
            The color buffer
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.backBuffer">
            <summary>
            The back buffer
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.depthStencilBuffer">
            <summary>
            The depth stencil buffer
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DepthStencilBuffer">
            <summary>
            The depth stencil buffer
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.d2dTarget">
            <summary>
            The D2D controls
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.D2DTarget">
            <summary>
            Gets the d2 d controls.
            </summary>
            <value>
            The d2 d controls.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.TargetWidth">
            <summary>
            Gets or sets the width of the target.
            </summary>
            <value>
            The width of the target.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.TargetHeight">
            <summary>
            Gets or sets the height of the target.
            </summary>
            <value>
            The height of the target.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DeviceContextPool">
            <summary>
            Gets the device context pool.
            </summary>
            <value>
            The device context pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Initialized">
            <summary>
            Gets or sets a value indicating whether this is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Format">
            <summary>
            Gets or sets the texture format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.MSAA">
            <summary>
            Set MSAA level. If set to Two/Four/Eight, the actual level is set to minimum between Maximum and Two/Four/Eight
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.VSyncInterval">
            <summary>
            The vertical synchronize internal. Only valid under swapchain rendering mode. Default = 0
            <para>0: disable; 1: Sync with frame; More detail: <see cref="M:SharpDX.DXGI.SwapChain.Present(System.Int32,SharpDX.DXGI.PresentFlags)"/></para>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Device">
            <summary>
            The currently used Direct3D Device
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Device2D">
            <summary>
            Gets the device2 d.
            </summary>
            <value>
            The device2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DeviceContext2D">
            <summary>
            Gets the device context2 d.
            </summary>
            <value>
            The device context2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DeviceResources">
            <summary>
            Gets or sets the device resources.
            </summary>
            <value>
            The device resources.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.UseDepthStencilBuffer">
            <summary>
            Gets or sets a value indicating whether [use depth stencil buffer].
            </summary>
            <value>
              <c>true</c> if [use depth stencil buffer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.ColorBufferSampleDesc">
            <summary>
            Gets or sets the sample description.
            </summary>
            <value>
            The sample description.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.#ctor(HelixToolkit.SharpDX.Core.IDeviceResources,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase"/> class.
            </summary>
            <param name="deviceResource">The device resources.</param>
            <param name="useDepthStencilBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.DisposeBuffers">
            <summary>
            Disposes the buffers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.OnCreateRenderTargetAndDepthBuffers(System.Int32,System.Int32,System.Boolean,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy@,HelixToolkit.SharpDX.Core.Utilities.ShaderResourceViewProxy@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="createDepthStencilBuffer"></param>
            <param name="colorBuffer"></param>
            <param name="depthStencilBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.SetDefaultRenderTargets(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Sets the default render-targets
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.ClearRenderTargetBinding(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Clears the render target binding.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.ClearRenderTarget(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,SharpDX.Color4)">
            <summary>
            Clears the render target.
            </summary>
            <param name="context">The context.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.ClearRenderTarget(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,SharpDX.Color4,System.Boolean,System.Boolean)">
            <summary>
            Clears the buffers with the clear-color
            </summary>
            <param name="context"></param>
            <param name="color"></param>
            <param name="clearBackBuffer"></param>
            <param name="clearDepthStencilBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Initialize(System.Int32,System.Int32,HelixToolkit.SharpDX.Core.MSAALevel)">
            <summary>
            Initializes.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="msaa">The msaa.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Resize(System.Int32,System.Int32)">
            <summary>
            Resize render target and depthbuffer resolution
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.BeginDraw">
            <summary>
            Begins the draw.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.EndDraw">
            <summary>
            Ends the draw.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.Present">
            <summary>
            Presents this drawing..
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.OnDispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposeManagedResources"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase.RaiseOnDeviceLost">
            <summary>
            Raises the on device lost.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.SwapChain">
            <summary>
            Gets the swap chain.
            </summary>
            <value>
            The swap chain.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.#ctor(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy"/> class.
            </summary>
            <param name="deviceResource"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.#ctor(HelixToolkit.SharpDX.Core.IDeviceResources,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy"/> class.
            </summary>
            <param name="deviceResource"></param>
            <param name="useDepthStencilBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.OnCreateBackBuffer(System.Int32,System.Int32)">
            <summary>
            Called when [create render target and depth buffers].
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.CreateSwapChainDescription">
            <summary>
            Creates the swap chain description.
            </summary>
            <returns>A swap chain description</returns>
            <remarks>
            This method can be overloaded in order to modify default parameters.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.Present">
            <summary>
            Presents this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainCompositionRenderBufferProxy.DisposeAndClear">
            <summary>
            Must release swapchain at last after all its created resources have been released.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.SwapChain">
            <summary>
            Gets the swap chain.
            </summary>
            <value>
            The swap chain.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.surfacePtr">
            <summary>
            The surface pointer
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.#ctor(System.IntPtr,HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy"/> class.
            </summary>
            <param name="surfacePointer">The surface pointer.</param>
            <param name="deviceResource"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.#ctor(System.IntPtr,HelixToolkit.SharpDX.Core.IDeviceResources,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy"/> class.
            </summary>
            <param name="surfacePointer">The surface pointer.</param>
            <param name="deviceResource"></param>
            <param name="useDepthStencilBuffer"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.OnCreateBackBuffer(System.Int32,System.Int32)">
            <summary>
            Called when [create render target and depth buffers].
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.CreateSwapChainDescription">
            <summary>
            Creates the swap chain description.
            </summary>
            <returns>A swap chain description</returns>
            <remarks>
            This method can be overloaded in order to modify default parameters.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.Present">
            <summary>
            Presents this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11SwapChainRenderBufferProxy.DisposeAndClear">
            <summary>
            Must release swapchain at last after all its created resources have been released.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.ImmediateContext">
            <summary>
            Gets or sets the immediate context.
            </summary>
            <value>
            The immediate context.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.#ctor(HelixToolkit.SharpDX.Core.IDevice3DResources)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer"/> class.
            </summary>
            <param name="deviceResource">The deviceResource.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.UpdateSceneGraph(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.FastList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Updates the scene graph.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="results">Returns list of flattened scene graph with depth index as KeyValuePair.Key</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.UpdateSceneGraph2D(HelixToolkit.SharpDX.Core.RenderContext2D,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D})">
            <summary>
            Updates the scene graph.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.UpdateGlobalVariables(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Updates the global variables. Such as light buffer and global transformation buffer
            </summary>
            <param name="context">The context.</param>
            <param name="lights">The lights.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderOpaque(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@,System.Boolean)">
            <summary>
            Renders the scene.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
            <param name="testFrustum"></param>
            <returns>Number of node has been rendered</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderTransparent(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the transparent.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.UpdateNotRenderParallel(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Updates the no render parallel. <see cref="M:HelixToolkit.SharpDX.Core.Render.IRenderer.UpdateNotRenderParallel(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})"/>
            </summary>
            <param name="renderables">The renderables.</param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.SetRenderTargets(HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Sets the render targets.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderScene2D(HelixToolkit.SharpDX.Core.RenderContext2D,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D},HelixToolkit.SharpDX.Core.Render.RenderParameter2D@)">
            <summary>
            Render2s the d.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderPreProc(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the pre proc.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderPostProc(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the post proc.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderToPingPongBuffer(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders to ping pong buffer.
            </summary>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderScreenSpaced(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the screen spaced.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.ImmediateContextRenderer.RenderToBackBuffer(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders to back buffer.
            </summary>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DeferredContextRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeferredContextRenderer.#ctor(HelixToolkit.SharpDX.Core.IDevice3DResources,HelixToolkit.SharpDX.Core.Render.IRenderTaskScheduler)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DeferredContextRenderer"/> class.
            </summary>
            <param name="deviceResources">The deviceResources.</param>
            <param name="scheduler"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeferredContextRenderer.RenderOpaque(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@,System.Boolean)">
            <summary>
            Renders the scene.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
            <param name="testFrustum"></param>
            <returns>Number of node has been rendered</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderBuffer">
            <summary>
            Gets the render buffer.
            </summary>
            <value>
            The render buffer.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Device">
            <summary>
            Gets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ImmediateDeviceContext">
            <summary>
            Gets the immediate device context.
            </summary>
            <value>
            The immediate device context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Device2D">
            <summary>
            Gets the device2d.
            </summary>
            <value>
            The device2d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ClearColor">
            <summary>
            Gets or sets the color of the clear.
            </summary>
            <value>
            The color of the clear.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.IsShadowMapEnabled">
            <summary>
            Gets or sets a value indicating whether shadow map enabled.
            </summary>
            <value>
              <c>true</c> if this instance is shadow map enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.MSAA">
            <summary>
            Gets or sets the Multi-Sampling-Anti-Alias.
            </summary>
            <value>
            The msaa.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Viewport">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IRenderHost.Viewport"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderContext2D">
            <summary>
            Gets the render context2d.
            </summary>
            <value>
            The render context2d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.EffectsManager">
            <summary>
            Gets or sets the effects manager.
            </summary>
            <value>
            The effects manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderTechnique">
            <summary>
            Gets or sets the render technique.
            </summary>
            <value>
            The render technique.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.IsDeferredLighting">
            <summary>
            Gets a value indicating whether this instance is deferred lighting.
            </summary>
            <value>
              <c>true</c> if this instance is deferred lighting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ActualHeight">
            <summary>
            Gets or sets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ActualWidth">
            <summary>
            Gets or sets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.IsBusy">
            <summary>
            Gets or sets a value indicating whether this instance is busy.
            </summary>
            <value>
              <c>true</c> if this instance is busy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.EnableRenderFrustum">
            <summary>
            Gets or sets a value indicating whether [enable render frustum].
            </summary>
            <value>
              <c>true</c> if [enable render frustum]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.EnableSharingModelMode">
            <summary>
            Gets or sets a value indicating whether [enable sharing model mode].
            </summary>
            <value>
              <c>true</c> if [enable sharing model mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.SharedModelContainer">
            <summary>
            Gets or sets the shared model container.
            </summary>
            <value>
            The shared model container.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.IsRendering">
            <summary>
            Gets or sets a value indicating whether this instance is rendering.
            </summary>
            <value>
              <c>true</c> if this instance is rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.IsInitialized">
            <summary>
            Gets or sets a value indicating whether this instance is initialized.
            </summary>
            <value>
              <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderTargetBufferView">
            <summary>
            Gets the color buffer view.
            </summary>
            <value>
            The color buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.DepthStencilBufferView">
            <summary>
            Gets the depth stencil buffer view.
            </summary>
            <value>
            The depth stencil buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.D2DTarget">
            <summary>
            Gets the d2d controls.
            </summary>
            <value>
            The d2 d controls.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.RenderStatistics">
            <summary>
            Gets the render statistics.
            </summary>
            <value>
            The render statistics.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameFlattenedScene">
            <summary>
            Gets the current frame renderables for rendering.
            </summary>
            <value>
            The per frame renderable.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameLights">
            <summary>
            Gets the per frame lights.
            </summary>
            <value>
            The per frame lights.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameNodesWithPostEffect">
            <summary>
            Gets the post effects render cores for this frame
            </summary>
            <value>
            The post effects render cores.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameOpaqueNodes">
            <summary>
            Gets the per frame render cores.
            </summary>
            <value>
            The per frame render cores.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameOpaqueNodesInFrustum">
            <summary>
            Gets the per frame opaque nodes in frustum.
            </summary>
            <value>
            The per frame opaque nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameTransparentNodesInFrustum">
            <summary>
            Gets the per frame transparent node in frustum.
            </summary>
            <value>
            The per frame transparent node in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameParticleNodes">
            <summary>
            Gets the per frame transparent nodes.
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PerFrameTransparentNodes">
            <summary>
            Gets the per frame transparent nodes.
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ShowRenderDetail">
            <summary>
            Gets or sets a value indicating whether [show render statistics].
            </summary>
            <value>
              <c>true</c> if [show render statistics]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.FeatureLevel">
            <summary>
            Gets the feature level.
            </summary>
            <value>
            The feature level.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ExceptionOccurred">
            <summary>
            Occurs when [exception occurred].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.StartRenderLoop">
            <summary>
            Occurs when [start render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.StopRenderLoop">
            <summary>
            Occurs when [stop render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnNewRenderTargetTexture">
            <summary>
            Occurs when [on new render target texture].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Rendered">
            <summary>
            Occurs when each render frame finished rendering.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Renderer">
            <summary>
            The renderer
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.UpdateRequested">
            <summary>
            The update requested
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.#ctor(System.Func{HelixToolkit.SharpDX.Core.IDevice3DResources,HelixToolkit.SharpDX.Core.Render.IRenderer})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase"/> class.
            </summary>
            <param name="createRenderer">The create renderer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CreateRenderBuffer">
            <summary>
            Creates the render buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph, request a complete scene graph traverse during next frame.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.InvalidatePerFrameRenderables">
            <summary>
            Invalidates the per frame renderables.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CanRender">
            <summary>
            Determines whether this instance can render.
            </summary>
            <returns>
              <c>true</c> if this instance can render; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.UpdateAndRender">
            <summary>
            Updates the and render.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.ClearRenderTarget(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean,System.Boolean)">
            <summary>
            Clears the render target.
            </summary>
            <param name="context">The context.</param>
            <param name="clearBackBuffer">if set to <c>true</c> [clear back buffer].</param>
            <param name="clearDepthStencilBuffer">if set to <c>true</c> [clear depth stencil buffer].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PreRender(System.Boolean,System.Boolean)">
            <summary>
            Called before OnRender.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.PostRender">
            <summary>
            Called after OnRender.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnRender(System.TimeSpan)">
            <summary>
            Called when [render].
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnRender2D(System.TimeSpan)">
            <summary>
            Called when [render2d].
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.SetDefaultRenderTargets(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,System.Boolean)">
            <summary>
            Set default render target to specify context.
            </summary>
            <param name="context"></param>
            <param name="clear"></param>
            <returns>Set successful?</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Restart(System.Boolean)">
            <summary>
            Restarts the render host. 
            <para>If HotRestart = true, only recreate buffers, otherwise dispose all resources and call StartD3D.</para>
            </summary>
            <param name="hotRestart">if set to <c>true</c> [hotRestart].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.StartD3D(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.StartRendering">
            <summary>
            Starts the rendering.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CreateAndBindBuffers">
            <summary>
            Creates the and bind buffers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CreateRenderer">
            <summary>
            Creates the renderer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnInitializeBuffers(HelixToolkit.SharpDX.Core.Render.DX11RenderBufferProxyBase,HelixToolkit.SharpDX.Core.Render.IRenderer)">
            <summary>
            Called when [initialize buffers].
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.AttachRenderable(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Attaches the renderable.
            </summary>
            <param name="deviceResources">The device resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CreateRenderContext">
            <summary>
            Creates the render context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.CreateRenderContext2D(SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Creates the render context2 d.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.EndD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnEndingD3D">
            <summary>
            Called when [ending d3 d].
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.StopRendering">
            <summary>
            Stops the rendering.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.DisposeBuffers">
            <summary>
            Disposes the buffers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.DetachRenderable">
            <summary>
            Detaches the renderable.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.SetDefaultRenderTargets(System.Boolean)">
            <summary>
            Sets the default render targets.
            </summary>
            <param name="clear">if set to <c>true</c> [clear].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11RenderHostBase.OnDispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposeManagedResources"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DX11Texture2DRenderBufferProxy">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11Texture2DRenderBufferProxy.#ctor(HelixToolkit.SharpDX.Core.IDeviceResources)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DX11Texture2DRenderBufferProxy"/> class.
            </summary>
            <param name="deviceResources"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11Texture2DRenderBufferProxy.OnCreateBackBuffer(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DX11Texture2DRenderBufferProxy.Present">
            <summary>
            Presents this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.RenderParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.RenderTargetView">
            <summary>
            The render target view
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.DepthStencilView">
            <summary>
            The depth stencil view
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.CurrentTargetTexture">
            <summary>
            Current rendered texture
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.IsMSAATexture">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.ViewportRegion">
            <summary>
            The viewport region
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.ScissorRegion">
            <summary>
            The scissor region
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.RenderLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Render.RenderParameter.UpdatePerFrameData">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.RenderParameter2D">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.IRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.IRenderer.ImmediateContext">
            <summary>
            Default ImmediateContext. Same as Device.ImmediateContext.
            <para>Used for update global variables</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.Attach(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.Detach">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.UpdateSceneGraph(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.FastList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Update scene graph, return the renderables which will be rendered in this frame
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.UpdateSceneGraph2D(HelixToolkit.SharpDX.Core.RenderContext2D,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D})">
            <summary>
            Update scene graph, return the 2D renderables which will be rendered in this frame
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.UpdateGlobalVariables(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.SetRenderTargets(HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderPreProc(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Render pre processings, such as Shadow pass etc.
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderPostProc(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Render post processing, such as bloom effects etc.
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderOpaque(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@,System.Boolean)">
            <summary>
            Run actual rendering for render cores.
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="parameter"></param>
            <param name="testFrustum"></param>
            <returns>Number of node has been rendered</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderTransparent(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the transparent.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderToPingPongBuffer(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders to intermediate ping pong buffer.
            </summary>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderScreenSpaced(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders the screen spaced.
            </summary>
            <param name="context">The context.</param>
            <param name="renderables">The renderables.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderToBackBuffer(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Renders to back buffer.
            </summary>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.UpdateNotRenderParallel(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Update scene graph not related to rendering. Can be run parallel with the <see cref="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderOpaque(HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.RenderParameter@,System.Boolean)"/>
            <para>Warning: Dependency properties are thread affinity. Do not get/set any dependency property in this function.</para>
            </summary>
            <param name="renderables"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderer.RenderScene2D(HelixToolkit.SharpDX.Core.RenderContext2D,HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D},HelixToolkit.SharpDX.Core.Render.RenderParameter2D@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="renderables"></param>
            <param name="parameter"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.IRenderTaskScheduler">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IRenderTaskScheduler.ScheduleAndRun(HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.IDeviceContextPool,HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.Direct3D11.CommandList}},System.Int32@)">
            <summary>
            Schedules render tasks and run. 
            <para>If return false, meaning the render items cannot be scheduled,
            may be the number of items is less than <see cref="P:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter.MinimumDrawCalls"></see>. 
            Use Immediate context to render to achieve better performance.</para>
            </summary>
            <param name="items">The items.</param>
            <param name="pool">The pool.</param>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
            <param name="outputCommands">The output commands.</param>
            <param name="testFrustum"></param>
            <param name="numRendered"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter.NumProcessor">
            <summary>
            Gets or sets the number processor.
            </summary>
            <value>
            The number processor.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter.MinimumDrawCalls">
            <summary>
            Gets or sets the minimum item to start multi-threading
            <para>https://docs.nvidia.com/gameworks/content/gameworkslibrary/graphicssamples/d3d_samples/d3d11deferredcontextssample.htm</para>
            <para>Note: Only if draw calls > 3000 to be benefit according to the online performance test.</para>
            </summary>
            <value>
            The minimum item per task.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter.MaxNumberOfTasks">
            <summary>
            Gets or sets the maximum number of tasks.
            </summary>
            <value>
            The maximum number of tasks.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter"/> class.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler.#ctor">
            <summary>
            Values the tuple.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler.#ctor(HelixToolkit.SharpDX.Core.Render.AutoTaskSchedulerParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler"/> class.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler.ScheduleAndRun(HelixToolkit.SharpDX.Core.FastList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.Render.IDeviceContextPool,HelixToolkit.SharpDX.Core.RenderContext,HelixToolkit.SharpDX.Core.Render.RenderParameter,System.Boolean,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.Direct3D11.CommandList}},System.Int32@)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="pool"></param>
            <param name="context"></param>
            <param name="parameter"></param>
            <param name="outputCommands"></param>
            <param name="numRendered"></param>
            <param name="testFrustum"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.AutoRenderTaskScheduler.SetRenderTargets(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy,HelixToolkit.SharpDX.Core.Render.RenderParameter@)">
            <summary>
            Sets the render targets.
            </summary>
            <param name="context">The context.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost"/> class.
            </summary>
            <param name="surface">The window PTR.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost.#ctor(System.IntPtr,System.Func{HelixToolkit.SharpDX.Core.IDevice3DResources,HelixToolkit.SharpDX.Core.Render.IRenderer})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost"/> class.
            </summary>
            <param name="surface">The surface.</param>
            <param name="createRenderer">The create renderer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.SwapChainRenderHost.CreateRenderBuffer">
            <summary>
            Creates the render buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.IDeviceContextPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IDeviceContextPool.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IDeviceContextPool.Put(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Puts the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.IDeviceContextPool.ResetDrawCalls">
            <summary>
            Resets the draw calls.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Render.DeviceContextPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextPool.#ctor(SharpDX.Direct3D11.Device1)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Render.DeviceContextPool"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextPool.Get">
            <summary>
            Gets this instance from pool
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextPool.Put(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Puts the specified context back to the pool after use
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Render.DeviceContextPool.OnDispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposeManagedResources"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.TextureResourceManager">
            <summary>
            Use for texture resource sharing between models. It uses texture stream as key for each texture.
            <para>Call Register to get(if already exists) or create a new shared texture.</para>
            <para>Call Unregister to detach the texture from model. Call detach from SharedTextureResourceProxy achieves the same result.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureResourceManager.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.TextureResourceManager"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureResourceManager.Register(HelixToolkit.SharpDX.Core.TextureModel)">
            <summary>
            Registers the specified texture model. This creates mipmaps automatically
            </summary>
            <param name="textureStream">The texture model.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TextureResourceManager.Register(HelixToolkit.SharpDX.Core.TextureModel,System.Boolean)">
            <summary>
            Registers the specified material unique identifier.
            </summary>
            <param name="textureModel">The texture model.</param>
            <param name="enableAutoGenMipMap">Enable generate mipmaps automatically</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.RenderContext">
            <summary>
            The render-context is currently generated per frame
            Optimizations might be possible
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.BoundingFrustum">
            <summary>
            Gets or sets the bounding frustum.
            </summary>
            <value>
            The bounding frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.CameraParams">
            <summary>
            Gets the camera parameters.
            </summary>
            <value>
            The camera parameters.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ViewMatrix">
            <summary>
            Gets the view matrix.
            </summary>
            <value>
            The view matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ViewMatrixInv">
            <summary>
            Gets or sets the inversed view matrix.
            </summary>
            <value>
            The inversed view matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ProjectionMatrix">
            <summary>
            Gets or sets the projection matrix.
            </summary>
            <value>
            The projection matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ViewportMatrix">
            <summary>
            Gets the viewport matrix.
            </summary>
            <value>
            The viewport matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ScreenViewProjectionMatrix">
            <summary>
            Gets the screen view projection matrix.
            </summary>
            <value>
            The screen view projection matrix.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.EnableBoundingFrustum">
            <summary>
            Gets or sets a value indicating whether [enable bounding frustum].
            </summary>
            <value>
              <c>true</c> if [enable bounding frustum]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.DpiScale">
            <summary>
            Gets the dpi scale.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
            <value>
            The camera.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.IsDeferredPass">
            <summary>
            Gets or sets a value indicating whether is deferred pass.
            </summary>
            <value>
              <c>true</c> if this instance is deferred pass; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.IsOITPass">
            <summary>
            Gets or sets a value indicating whether is order independent transparent pass.
            </summary>
            <value>
              <c>true</c> if this instance is oit pass; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.CustomPassName">
            <summary>
            Gets or sets the name of the custom pass.
            </summary>
            <value>
            The name of the custom pass.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.LightScene">
            <summary>
            Gets or sets the light scene.
            </summary>
            <value>
            The light scene.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.GlobalTransform">
            <summary>
            Gets the global transform.
            </summary>
            <value>
            The global transform.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.SharedResource">
            <summary>
            Gets or sets the shared resource.
            </summary>
            <value>
            The shared resource.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.AutoUpdateOctree">
            <summary>
            Gets or sets a value indicating whether [update octree] automatically.
            </summary>
            <value>
              <c>true</c> if [update octree]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext.IsInvertCullMode">
            <summary>
            Gets or sets a value indicating whether this render pass is using inverted cull mode.
            If <see cref="T:SharpDX.Direct3D11.CullMode"/>=<see cref="F:SharpDX.Direct3D11.CullMode.None"/>, default state is used.
            This is usually used when rendering <see cref="T:HelixToolkit.SharpDX.Core.Core.DynamicCubeMapCore"/>.
            </summary>
            <value>
              <c>true</c> Set invert cullmode flag; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.OITWeightPower">
            <summary>
            Gets or sets the oit weight power used for color weight calculation. Default = 3;
            </summary>
            <value>
            The oit weight power.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.OITWeightDepthSlope">
            <summary>
            Gets or sets the oit weight depth slope. Used to increase resolution for particular range of depth values. 
            <para>If value = 2, the depth range from 0-0.5 expands to 0-1 to increase resolution. However, values from 0.5 - 1 will be pushed to 1</para>
            </summary>
            <value>
            The oit weight depth slope.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.OITWeightMode">
            <summary>
            Gets or sets the oit weight mode.
            <para>Please refer to http://jcgt.org/published/0002/02/09/ </para>
            <para>Linear0: eq7; Linear1: eq8; Linear2: eq9; NonLinear: eq10</para>
            </summary>
            <value>
            The oit weight mode.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.SSAOEnabled">
            <summary>
            Gets or sets a value indicating whether [ssao enabled].
            </summary>
            <value>
              <c>true</c> if [ssao enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.SSAOBias">
            <summary>
            Gets or sets the ssao bias.
            </summary>
            <value>
            The ssao bias.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.SSAOIntensity">
            <summary>
            Gets or sets the ssao intensity.
            </summary>
            <value>
            The ssao intensity.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.UpdateSceneGraphRequested">
            <summary>
            Gets or sets a value indicating whether [update scene graph requested] in this frame.
            </summary>
            <value>
              <c>true</c> if [update scene graph requested]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.UpdatePerFrameRenderableRequested">
            <summary>
            Gets or sets a value indicating whether [update per frame renderable requested] in this frame.
            </summary>
            <value>
              <c>true</c> if [update per frame renderable requested]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext.IsShadowMapEnabled">
            <summary>
            Gets a value indicating whether this instance is shadow map enabled.
            </summary>
            <value>
              <c>true</c> if this instance is shadow map enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.#ctor(HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.RenderContext"/> class.
            </summary>
            <param name="renderHost">The render host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetScreenViewProjectionMatrix">
            <summary>
            Gets the screen view projection matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.UpdatePerFrameData(HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Call to update constant buffer for per frame
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.UpdatePerFrameData(System.Boolean,System.Boolean,HelixToolkit.SharpDX.Core.Render.DeviceContextProxy)">
            <summary>
            Call to update constant buffer for per frame
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenTexture(HelixToolkit.SharpDX.Core.OffScreenTextureType,HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format)">
            <summary>
            Gets the off screen texture. Same as <see cref="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenRT(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format)"/> or <see cref="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenDS(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format)"/>
            </summary>
            <param name="type">The type.</param>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenRT(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format)">
            <summary>
            Gets the off screen render target.
            </summary>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenRT(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format,System.Int32@,System.Int32@)">
            <summary>
            Gets the off screen rt.
            </summary>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenDS(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format)">
            <summary>
            Gets the off screen depth stencil.
            </summary>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext.GetOffScreenDS(HelixToolkit.SharpDX.Core.OffScreenTextureSize,SharpDX.DXGI.Format,System.Int32@,System.Int32@)">
            <summary>
            Gets the off screen ds.
            </summary>
            <param name="size">The size.</param>
            <param name="format">The format.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.RenderContext2D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.DpiScale">
            <summary>
            Gets the dpi scale.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.DeviceContext">
            <summary>
            Gets or sets the device context.
            </summary>
            <value>
            The device context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.DeviceResources">
            <summary>
            Gets the device resources.
            </summary>
            <value>
            The device resources.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.RelativeTransform">
            <summary>
            Gets or sets the last bitmap transform.
            </summary>
            <value>
            The last bitmap transform.<see cref="P:HelixToolkit.SharpDX.Core.RenderContext2D.RelativeTransform"/>
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.RenderContext2D.HasTarget">
            <summary>
            Gets or sets a value indicating whether this instance has target.
            </summary>
            <value>
              <c>true</c> if this instance has target; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext2D.PushRelativeTransform(SharpDX.Matrix3x2)">
            <summary>
            Pushes the last bitmap transform.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext2D.PopRelativeTransform">
            <summary>
            Pops the last bitmap transform.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext2D.renderHost">
            <summary>
            The render host
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.RenderContext2D.targetStack">
            <summary>
            The target stack
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext2D.#ctor(SharpDX.Direct2D1.DeviceContext,HelixToolkit.SharpDX.Core.IRenderHost)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.RenderContext2D"/> class.
            </summary>
            <param name="deviceContext">The device context.</param>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext2D.PushRenderTarget(HelixToolkit.SharpDX.Core.Utilities.BitmapProxy,System.Boolean)">
            <summary>
            Pushes the render target.
            </summary>
            <param name="target">The target.</param>
            <param name="clear">if set to <c>true</c> [clear].</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.RenderContext2D.PopRenderTarget">
            <summary>
            Pops the render target.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DefaultEffectsManager">
            <summary>
            Default shader technique manager, includes all internal shaders
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DefaultEffectsManager.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.DefaultEffectsManager"/> class.
            </summary>
            <param name="adapterIndex">Index of the adapter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DefaultEffectsManager.#ctor(System.Int32,HelixToolkit.Logger.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.DefaultEffectsManager"/> class.
            </summary>
            <param name="adapterIndex">Index of the adapter.</param>
            <param name="externallogger">The externallogger.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DefaultEffectsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.DefaultEffectsManager"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DefaultEffectsManager.#ctor(HelixToolkit.Logger.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.DefaultEffectsManager"/> class.
            </summary>
            <param name="externallogger">The externallogger.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DefaultEffectsManager.LoadTechniqueDescriptions">
            <summary>
            Loads the technique descriptions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.Mesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.Lines">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.LinesArrowHead">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.LinesArrowHeadTail">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.Points">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.CubeMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.BillboardText">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.BillboardInstancing">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.InstancingMesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.ParticleStorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.CrossSection">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.ViewCube">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.Skybox">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectMeshBorderHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectMeshXRay">
            <summary>
            The post effect mesh x ray
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectMeshOutlineBlur">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectBloom">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.MeshOITQuad">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectFXAA">
            <summary>
            The post effect fxaa
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PostEffectMeshXRayGrid">
            <summary>
            The post effect mesh x ray grid
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.PlaneGrid">
            <summary>
            The plane grid
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultRenderTechniqueNames.ScreenDuplication">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DefaultPassNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.PBR">
            <summary>
            The Physics Based Rendering
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.PBRFaceNormal">
            <summary>
            The PBR face normal pass
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Diffuse">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.DiffuseOIT">
            <summary>
            The diffuse oit
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Colors">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Normals">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.NormalVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.PerturbedNormals">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Tangents">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.TexCoords">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.ViewCube">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.ColorStripe1D">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.OITPass">
            <summary>
            The mesh transparent
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.PBROITPass">
            <summary>
            The oit pass PBR
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.WireframeOITPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.MeshTriTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.MeshPBRTriTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.MeshQuadTessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.MeshOutline">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.PreComputeMeshBoneSkinned">
            <summary>
            The mesh bone skinned
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectBlurVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectBlurHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectOutlineSmooth">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectOutlineP1">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshXRayP1">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshXRayP2">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshXRayGridP1">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshXRayGridP2">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshXRayGridP3">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.EffectMeshDiffuseXRayGridP3">
            <summary>
            The effect mesh diffuse x ray grid p3
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.ShadowPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Backface">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.ScreenQuad">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.ScreenQuadCopy">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.Wireframe">
            <summary>
            The wireframe
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.DepthPrepass">
            <summary>
            The depth prepass
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.LumaPass">
            <summary>
            Calculate luma and set luma as Alpha channel before FXAA pass.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.FXAAPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultPassNames.MeshSSAOPass">
            <summary>
            The ssao pass
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DefaultParticlePassNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultParticlePassNames.Insert">
            <summary>
            The insert
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultParticlePassNames.Update">
            <summary>
            The update
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DefaultParticlePassNames.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DeferredRenderTechniqueNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DeferredRenderTechniqueNames.Deferred">
            <summary>
            The deferred
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DeferredRenderTechniqueNames.GBuffer">
            <summary>
            The g buffer
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DeferredRenderTechniqueNames.DeferredLighting">
            <summary>
            The deferred lighting
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DeferredRenderTechniqueNames.ScreenSpace">
            <summary>
            The screen space
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.EffectsManager">
            <summary>
            Shader and Technique manager
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Logger">
            <summary>
            Gets or sets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.EffectsManager.DisposingResources">
            <summary>
            Occurs when [on dispose resources].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.EffectsManager.Reinitialized">
            <summary>
            Occurs when [device created].
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.EffectsManager.InvalidateRender">
            <summary>
            Occurs when [on invalidate renderer].
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.EffectsManager.MinimumFeatureLevel">
            <summary>
            The minimum supported feature level.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.RenderTechniques">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IEffectsManager.RenderTechniques"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.ConstantBufferPool">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDevice3DResources.ConstantBufferPool"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.ShaderManager">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IEffectsManager.ShaderManager"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.StateManager">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDevice3DResources.StateManager"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.GeometryBufferManager">
            <summary>
            Gets the geometry buffer manager.
            </summary>
            <value>
            The geometry buffer manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.MaterialTextureManager">
            <summary>
            Gets the material texture manager.
            </summary>
            <value>
            The material texture manager.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.DriverType">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.DeviceContextPool">
            <summary>
            Gets the device context pool.
            </summary>
            <value>
            The device context pool.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Device2D">
            <summary>
            Gets the device2d.
            </summary>
            <value>
            The device2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.DeviceContext2D">
            <summary>
            Gets or sets the device2 d context.
            </summary>
            <value>
            The device2 d context.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Factory2D">
            <summary>
            Gets the factory2 d.
            </summary>
            <value>
            The factory2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.WICImgFactory">
            <summary>
            Gets the wic img factory.
            </summary>
            <value>
            The wic img factory.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.DirectWriteFactory">
            <summary>
            Gets the direct write factory.
            </summary>
            <value>
            The direct write factory.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.AdapterIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Initialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.EffectsManager"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.#ctor(HelixToolkit.Logger.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.EffectsManager"/> class.
            </summary>
            <param name="externallogger">The logger.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.EffectsManager"/> class.
            </summary>
            <param name="adapterIndex">Index of the adapter.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.#ctor(System.Int32,HelixToolkit.Logger.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.EffectsManager"/> class.
            </summary>
            <param name="adapterIndex">Index of the adapter.</param>
            <param name="externallogger">The logger.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.Initialize(System.Int32)">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.AddTechnique(HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IEffectsManager.AddTechnique(HelixToolkit.SharpDX.Core.Shaders.TechniqueDescription)"/>
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.Reinitialize">
            <summary>
            Reinitializes all resources after calling <see cref="M:HelixToolkit.SharpDX.Core.EffectsManager.DisposeAllResources"/>.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.DisposeAllResources">
            <summary>
            Disposes all resources. This is used to handle such as DeviceLost or DeviceRemoved Error
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.HasTechnique(System.String)">
            <summary>
            Determines whether the specified name has technique.
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if the specified name has technique; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.RemoveTechnique(System.String)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IEffectsManager.RemoveTechnique(System.String)"/>
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.RemoveAllTechniques">
            <summary>
            Removes all technique.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.GetBestAdapter(System.Int32@)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.GetTechnique(System.String)">
            <summary>
            Gets the technique.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Manager has not been initialized.</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.EffectsManager.Item(System.String)">
            <summary>
            Gets the <see cref="T:HelixToolkit.SharpDX.Core.IRenderTechnique"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:HelixToolkit.SharpDX.Core.IRenderTechnique"/>.
            </value>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.OnDispose(System.Boolean)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DisposeObject.OnDispose(System.Boolean)"/>
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.EffectsManager.GetResourceCountSummary">
            <summary>
            Outputs the resource cout summary.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DisposeObject">
            <summary>
            Modified version of DisposeCollector from SharpDX. Add null check in RemoveAndDispose(ref object)
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.DisposeObject.Disposing">
            <summary>
            Occurs when this instance is starting to be disposed.
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.DisposeObject.Disposed">
            <summary>
            Occurs when this instance is fully disposed.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DisposeObject.Count">
            <summary>
            Gets the number of elements to dispose.
            </summary>
            <value>The number of elements to dispose.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.DisposeAndClear">
            <summary>
            Disposes all object collected by this class and clear the list. The collector can still be used for collecting.
            </summary>
            <remarks>
            To completely dispose this instance and avoid further dispose, use <see cref="M:HelixToolkit.SharpDX.Core.DisposeObject.OnDispose(System.Boolean)"/> method instead.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.OnDispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.Collect``1(``0)">
            <summary>
            Adds a <see cref="T:System.IDisposable"/> object or a <see cref="T:System.IntPtr"/> allocated using <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/> to the list of the objects to dispose.
            <para><see cref="T:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject"/> type object can be collected multiple times, but make sure its reference counter has been incremented accordingly before collecting.</para>
            </summary>
            <param name="toDispose">To dispose.</param>
            <exception cref="T:System.InvalidOperationException">Throws when object is not a <see cref="T:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject"/> and being collected more than once.</exception>
            <exception cref="T:System.ArgumentException">If toDispose argument is not IDisposable or a valid memory pointer allocated by <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose a disposable object and set the reference to null. Removes this object from this instance..
            </summary>
            <param name="objectToDispose">Object to dispose.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.Remove``1(``0)">
            <summary>
            Removes a disposable object to the list of the objects to dispose.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toDisposeArg">To dispose.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DisposeObject.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DisposeObject.Set``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Disposing">
            <summary>
            Occurs when this instance is starting to be disposed.
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Disposed">
            <summary>
            Occurs when this instance is fully disposed.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Count">
            <summary>
            Gets the number of elements to dispose.
            </summary>
            <value>The number of elements to dispose.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.DisposeAndClear">
            <summary>
            Disposes all object collected by this class and clear the list. The collector can still be used for collecting.
            </summary>
            <remarks>
            To completely dispose this instance and avoid further dispose, use <see cref="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.OnDispose(System.Boolean)"/> method instead.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.OnDispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Collect``1(``0)">
            <summary>
            Adds a <see cref="T:System.IDisposable"/> object or a <see cref="T:System.IntPtr"/> allocated using <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/> to the list of the objects to dispose.
            <para><see cref="T:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject"/> type object can be collected multiple times, but make sure its reference counter has been incremented accordingly before collecting.</para>
            </summary>
            <param name="toDispose">To dispose.</param>
            <exception cref="T:System.InvalidOperationException">Throws when object is not a <see cref="T:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject"/> and being collected more than once.</exception>
            <exception cref="T:System.ArgumentException">If toDispose argument is not IDisposable or a valid memory pointer allocated by <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/></exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose a disposable object and set the reference to null. Removes this object from this instance..
            </summary>
            <param name="objectToDispose">Object to dispose.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Remove``1(``0)">
            <summary>
            Removes a disposable object to the list of the objects to dispose.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toDisposeArg">To dispose.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.IsPooled">
            <summary>
            Flag if this object is in object pool. Set to true to avoid disposing and return it to the pool
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.ForceDispose">
            <summary>
            Forces the dispose.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ReferenceCountDisposeObject.Set``1(``0@,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="backingField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Disposer">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Disposer.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose an object instance and set the reference to null
            </summary>
            <typeparam name="T">The type of object to dispose</typeparam>
            <param name="resource">A reference to the instance for disposal</param>
            <remarks>This method hides any thrown exceptions that might occur during disposal of the object (by design)</remarks>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.FastList`1">
            <summary>
            Similar to <see cref="T:System.Collections.Generic.List`1"/>, with direct access to underlying array.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.FastList`1.Items">
            <summary>
            Gets the items from internal array. Make sure to access this array using <see cref="P:HelixToolkit.SharpDX.Core.FastList`1.Count"/> instead of Array Length
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.FastList`1.Clear(System.Boolean)">
            <summary>
            Clears this list with a fast-clear option.
            </summary>
            <param name="fastClear">if set to <c>true</c> this method only resets the count elements but doesn't clear items referenced already stored in the list.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.FastList`1.AddAll(HelixToolkit.SharpDX.Core.FastList{`0})">
            <summary>
            Fast add all from another <see cref="T:HelixToolkit.SharpDX.Core.FastList`1"/>.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.FastList`1.GetInternalArray">
            <summary>
            Gets the internal array used to hold data.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestContext.RenderMatrices">
            <summary>
            Gets or sets the render matrices. This is only needed for line/point hit test.
            </summary>
            <value>
            The render matrices.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestContext.RayWS">
            <summary>
            Gets or sets the ray in world space.
            </summary>
            <value>
            The ray.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestContext.HitPointSP">
            <summary>
            Gets or sets the hit point on screen space. This is the hit point on viewport region without DpiScaled coordinate.
            </summary>
            <value>
            The screen hit point.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestContext.#ctor(HelixToolkit.SharpDX.Core.IRenderMatrices,SharpDX.Ray@,SharpDX.Vector2@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HitTestContext"/> class.
            </summary>
            <param name="metrices">The render metrices.</param>
            <param name="rayWS">The ray in world space.</param>
            <param name="hitSP">The hit point on screen space. Pass in the hit point on viewport region directly. 
            <para>Do not scale with DpiScale factor.</para></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestContext.#ctor(HelixToolkit.SharpDX.Core.IRenderMatrices,SharpDX.Ray,SharpDX.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HitTestContext"/> class.
            </summary>
            <param name="metrices">The render metrices.</param>
            <param name="rayWS">The ray in world space.</param>
            <param name="hitSP">The hit point on screen space. Pass in the hit point on viewport region directly.
            <para>Do not scale with DpiScale factor.</para></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestContext.#ctor(HelixToolkit.SharpDX.Core.IRenderMatrices,SharpDX.Ray@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HitTestContext"/> class.
            This calculates screen hit point automatically from metrices and world space ray.
            </summary>
            <param name="metrices">The render metrices.</param>
            <param name="rayWS">The ray in world space.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestContext.#ctor(HelixToolkit.SharpDX.Core.IRenderMatrices,SharpDX.Vector2@)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HitTestContext"/> class.
            This calculates ray in world space automatically from metrices and hit point.
            </summary>
            <param name="metrices">The render metrices.</param>
            <param name="hitSP">Screen hit point. Pass in the hit point on viewport region directly.
            <para>Do not scale with DpiScale factor.</para></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.HitTestResult">
            <summary>
            Provides a hit test result.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.Distance">
            <summary>
            Gets or sets the distance from the hit ray origin to the <see cref="P:HelixToolkit.SharpDX.Core.HitTestResult.PointHit"/>
            </summary>
            <value>
            The distance.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.ModelHit">
            <summary>
            Gets the Model3D intersected by the ray along which the hit test was performed.
            Model3D intersected by the ray.
            </summary>        
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.PointHit">
            <summary>
            Gets the Point at the intersection between the ray along which the hit
            test was performed and the hit object.
            Point at which the hit object was intersected by the ray.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.NormalAtHit">
            <summary>
            The normal vector of the triangle hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.IsValid">
            <summary>
            Indicates if this Result has data from a valid hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.Tag">
            <summary>
            This is a tag to add additional data.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTestResult.TriangleIndices">
            <summary>
            The hitted triangle vertex indices.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestResult.ShallowCopy(HelixToolkit.SharpDX.Core.HitTestResult)">
            <summary>
            Shallow copy all the properties from another result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTestResult.ToString">
            <summary>
            Get a descirption of the HitTestResult
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.LineHitTestResult">
            <summary>
            A specialized line hit test result.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineHitTestResult.LineIndex">
            <summary>
            Gets or sets the index of the line segment that was hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineHitTestResult.RayToLineDistance">
            <summary>
            Gets or sets the shortest distance between the hit test ray and the line that was hit.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineHitTestResult.RayHitPointScalar">
            <summary>
            Gets or sets the scalar of the closest point on the hit test ray.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineHitTestResult.LineHitPointScalar">
            <summary>
            Gets or sets the scalar of the closest point on the line that was hit.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.HitTest2DResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.HitTest2DResult.ModelHit">
            <summary>
            Gets or sets the model hit.
            </summary>
            <value>
            The model hit.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HitTest2DResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HitTest2DResult"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CMOReader.AnimationHierarchy">
            <summary>
            The animation hirarchy
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.CMOReader.UniqueAnimations">
            <summary>
            The unique animations by animation name and corresponding animations by their guid
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.CMOReader.TexturePath">
            <summary>
            Gets or sets the path to the textures.
            </summary>
            <value>The texture path.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.CMOReader.ModelInfo">
            <summary>
            Additional info how to treat the model
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BinaryReaderExtensions.ReadCMO_wchar(System.IO.BinaryReader)">
            <summary>
            Loads a string from the CMO file (WCHAR prefixed with uint length)
            </summary>
            <param name="br"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BinaryReaderExtensions.ReadStructure``1(System.IO.BinaryReader)">
            <summary>
            Read a structure from binary reader
            </summary>
            <typeparam name="T"></typeparam>
            <param name="br"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BinaryReaderExtensions.ReadStructure``1(System.IO.BinaryReader,System.Int32)">
            <summary>
            Read <paramref name="count"/> instances of the structure from the binary reader.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="br"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.BinaryReaderExtensions.ReadUInt16(System.IO.BinaryReader,System.Int32)">
            <summary>
            Read <paramref name="count"/> UInt16s.
            </summary>
            <param name="br"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IModelReader">
            <summary>
            Interface for model readers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IModelReader.Read(System.String,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="info">
            The model info.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IModelReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">
            The stream.
            </param>
            <param name="info">
            The model info.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ModelReader">
            <summary>
            Class ModelReader.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ModelReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ModelReader"/> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ModelReader.DefaultMaterial">
            <summary>
            Gets or sets the default material.
            </summary>
            <value>
            The default material.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ModelReader.Directory">
            <summary>
            Gets or sets the directory.
            </summary>
            <value>The directory.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ModelReader.TexturePath">
            <summary>
            Gets or sets the texture path.
            </summary>
            <value>The texture path.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ModelReader.Read(System.String,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="info"></param>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ModelReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">The stream.</param>
            <param name="info"></param>
            <returns>The model.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ObjReader">
            <summary>
            A Wavefront .obj file reader.
            </summary>
            <remarks>
            See the file format specifications at
            http://en.wikipedia.org/wiki/Obj
            http://en.wikipedia.org/wiki/Material_Template_Library
            http://www.martinreddy.net/gfx/3d/OBJ.spec
            http://www.eg-models.de/formats/Format_Obj.html
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:HelixToolkit.SharpDX.Core.ObjReader" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.DefaultColor">
            <summary>
            Gets or sets the default color.
            </summary>
            <value>The default color.</value>
            <remarks>
            The default value is Colors.Gold.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.IgnoreErrors">
            <summary>
            Gets or sets a value indicating whether to ignore errors.
            </summary>
            <value><c>true</c> if errors should be ignored; <c>false</c> if errors should throw an exception.</value>
            <remarks>
            The default value is on (true).
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.SwitchYZ">
            <summary>
            Gets or sets a value indicating whether to switch Y and Z coordinates.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.SkipTransparencyValues">
            <summary>
            Gets or sets a value indicating whether to skip transparency values ("Tr") in the material files.
            </summary>
            <value>
            <c>true</c> if transparency values should be skipped; otherwise, <c>false</c>.
            </value>
            <remarks>
            This option is added to allow disabling the "Tr" values in files where it has been defined incorrectly.
            The transparency values ("Tr") are interpreted as 0 = transparent, 1 = opaque.
            The dissolve values ("d") are interpreted as 0 = transparent, 1=opaque.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.IsSmoothingDefault">
            <summary>
            Sets a value indicating whether smoothing is default.
            </summary>
            <remarks>
            The default value is smoothing=on (true).
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Groups">
            <summary>
            Gets the groups of the file.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Materials">
            <summary>
            Gets the materials in the imported material files.
            </summary>
            <value>The materials.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.TexturePath">
            <summary>
            Gets or sets the path to the textures.
            </summary>
            <value>The texture path.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.ModelInfo">
            <summary>
            Additional info how to treat the model
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Read(System.String,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="info">
            The model info.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">
            The stream.
            </param>
            <param name="info">
            The model info.
            </param>
            <returns>
            The model.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.ReadZ(System.String)">
            <summary>
            Reads a GZipStream compressed OBJ file.
            </summary>
            <param name="path">
            The path.
            </param>
            <returns>
            A Model3D object containing the model.
            </returns>
            <remarks>
            This is a file format used by Helix Toolkit only.
            Use the GZipHelper class to compress an .obj file.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ObjReader.smoothingGroupMaps">
            <summary>
            The smoothing group maps.
            </summary>
            <remarks>
            The outer dictionary maps from a smoothing group number to a Dictionary&lt;long,int&gt;.
            The inner dictionary maps from an obj file (vertex, texture coordinates, normal) index to a vertex index in the current group.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ObjReader.currentSmoothingGroup">
            <summary>
            The current smoothing group.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ObjReader.currentLineNo">
            <summary>
            The line number of the line being parsed.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.CurrentGroup">
            <summary>
            Gets the current group.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Normals">
            <summary>
            Gets or sets the normals.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Points">
            <summary>
            Gets or sets the points.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Colors">
            <summary>
            Gets or sets the vertex colors.
            </summary>
            <value>
            The colors.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Reader">
            <summary>
            Gets or sets the stream reader.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.TextureCoordinates">
            <summary>
            Gets or sets the texture coordinates.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.ColorParse(System.String)">
            <summary>
            Parses a color string.
            </summary>
            <param name="values">
            The input.
            </param>
            <returns>
            The parsed color.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.DoubleParse(System.String)">
            <summary>
            Parse a string containing a double value.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Split(System.String)">
            <summary>
            Splits the specified string using whitespace(input) as separators.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            List of input.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.SplitLine(System.String,System.String@,System.String@)">
            <summary>
            Splits a line in keyword and arguments.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="keyword">
            The keyword.
            </param>
            <param name="arguments">
            The arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.AddGroup(System.String)">
            <summary>
            Adds a group with the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.EnsureNewMesh">
            <summary>
            Ensures that a new mesh is created.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.SetSmoothingGroup(System.String)">
            <summary>
            Sets the smoothing group number.
            </summary>
            <param name="values">The group number.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.AddFace(System.String)">
            <summary>
            Adds a face.
            </summary>
            <param name="values">
            The input values.
            </param>
            <remarks>
            Adds a polygonal face. The numbers are indexes into the arrays of vertex positions,
            texture coordinates, and normals respectively. A number may be omitted if,
            for example, texture coordinates are not being defined in the model.
            There is no maximum number of vertices that a single polygon may contain.
            The .obj file specification says that each face must be flat and convex.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.AddNormal(System.String)">
            <summary>
            Adds a normal.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.AddTexCoord(System.String)">
            <summary>
            Adds a texture coordinate.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.AddVertex(System.String)">
            <summary>
            Adds a vertex.
            </summary>
            <param name="values">
            The input values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.BuildModel">
            <summary>
            Builds the model.
            </summary>
            <returns>
            A Model3D object.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.GetMaterial(System.String)">
            <summary>
            Gets the material with the specified name.
            </summary>
            <param name="materialName">
            The material name.
            </param>
            <returns>
            The material.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.LoadMaterialLib(System.String)">
            <summary>
            Loads a material library.
            </summary>
            <param name="mtlFile">
            The mtl file.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.SetMaterial(System.String)">
            <summary>
            Sets the material for the current group.
            </summary>
            <param name="materialName">
            The material name.
            </param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ObjReader.Group">
            <summary>
            Represents a group in the obj file.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ObjReader.Group.meshBuilders">
            <summary>
            List of mesh builders.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ObjReader.Group.materials">
            <summary>
            List of materials.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ObjReader.Group"/> class.
            </summary>
            <param name="name">
            The name of the group.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Group.Material">
            <summary>
            Sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Group.MeshBuilder">
            <summary>
            Gets the mesh builder for the current mesh.
            </summary>
            <value>The mesh builder.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.Group.Name">
            <summary>
            Gets or sets the group name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Group.AddMesh">
            <summary>
            Adds a mesh.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.Group.CreateModels(HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Creates the models of the group.
            </summary>
            <returns>The models.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition">
            <summary>
            A material definition.
            </summary>
            <remarks>
            The file format is documented in http://en.wikipedia.org/wiki/Material_Template_Library.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition"/> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.AlphaMap">
            <summary>
            Gets or sets the alpha map.
            </summary>
            <value>The alpha map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Ambient">
            <summary>
            Gets or sets the ambient color.
            </summary>
            <value>The ambient.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.AmbientMap">
            <summary>
            Gets or sets the ambient map.
            </summary>
            <value>The ambient map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.BumpMap">
            <summary>
            Gets or sets the bump map.
            </summary>
            <value>The bump map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Diffuse">
            <summary>
            Gets or sets the diffuse color.
            </summary>
            <value>The diffuse.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.DiffuseMap">
            <summary>
            Gets or sets the diffuse map.
            </summary>
            <value>The diffuse map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Dissolved">
            <summary>
            Gets or sets the opacity value.
            </summary>
            <value>The opacity.</value>
            <remarks>
            0.0 is transparent, 1.0 is opaque.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Illumination">
            <summary>
            Gets or sets the illumination.
            </summary>
            <value>The illumination.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Specular">
            <summary>
            Gets or sets the specular color.
            </summary>
            <value>The specular color.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.SpecularCoefficient">
            <summary>
            Gets or sets the specular coefficient.
            </summary>
            <value>The specular coefficient.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.SpecularMap">
            <summary>
            Gets or sets the specular map.
            </summary>
            <value>The specular map.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.Material">
            <summary>
            Gets or sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.GetMaterial(System.String)">
            <summary>
            Gets the material from the specified path.
            </summary>
            <param name="texturePath">
            The texture path.
            </param>
            <returns>
            The material.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.MaterialDefinition.CreateMaterial(System.String)">
            <summary>
            Creates the material.
            </summary>
            <param name="texturePath">The texture path.</param>
            <returns>A WPF material.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ObjReader.PathHelpers">
            <summary>
            Path helpers.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ObjReader.PathHelpers.GetFullPath(System.String,System.String)">
            <summary>
            Gets a full path.
            </summary>
            <param name="basePath">
            The base path.
            </param>
            <param name="path">
            The path.
            </param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.OffReader">
            <summary>
            A Geomview Object File Format (OFF) reader.
            </summary>
            <remarks>
            The reader does not parse colors, normals and texture coordinates.
            Only 3 dimensional vertices are supported.
            Homogeneous coordinates are not supported.
            See the following links for information about the file format:
            http://www.geomview.org/
            http://people.sc.fsu.edu/~jburkardt/data/off/off.html
            http://people.sc.fsu.edu/~jburkardt/html/off_format.html
            http://segeval.cs.princeton.edu/public/off_format.html
            http://paulbourke.net/dataformats/off/
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.OffReader" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OffReader.Faces">
            <summary>
            Gets the faces.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OffReader.Vertices">
            <summary>
            Gets the vertices.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.Read(System.String,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="path">The path.</param>
            <param name="info">The model info.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">The stream.</param>
            <param name="info">The model info.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.CreateMeshGeometry3D(HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Creates a MeshGeometry3D object from the loaded file. Polygons are triangulated using triangle fans.
            </summary>
            <param name="info">
            The model info.
            </param>
            <returns>
            A MeshGeometry3D.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.BuildModel(HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Creates a Model3D object from the loaded file.
            </summary>
            <param name="info">
            The model info.
            </param>
            <returns>A Model3D group.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.Load(System.IO.Stream)">
            <summary>
            Loads the model from the specified stream.
            </summary>
            <param name="s">
            The stream.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.GetIntValues(System.String)">
            <summary>
            Parses integer values from a string.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            Array of integer values.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.GetValues(System.String)">
            <summary>
            Parses double values from a string.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            Array of double values.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OffReader.RemoveComments(System.String)">
            <summary>
            Removes comments from the line.
            </summary>
            <param name="input">
            The line.
            </param>
            <returns>
            A line without comments.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PlyReader">
            <summary>
            Polygon File Format Reader.
            </summary>
            https://www.cc.gatech.edu/projects/large_models/ply.html
            http://graphics.stanford.edu/data/3Dscanrep/
            <remarks>
            This reader only reads ascii ply formats.
            This was initially meant to read models exported by Blender 3D Software.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.#ctor">
            <summary>
            Initializes a new <see cref="T:HelixToolkit.SharpDX.Core.PlyReader"/>.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="s">The stream.</param>
            <param name="info"></param>
            <returns>A <see cref="T:System.Collections.Generic.List`1" /></returns>       
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.Read(System.String)">
            <summary>
            Reads the model from the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.CreateMesh">
            <summary>
            Creates a mesh from the loaded file.
            </summary>
            <returns>
            A <see cref="T:HelixToolkit.SharpDX.Core.MeshGeometry3D" />.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.CreateMeshGeometry3D">
            <summary>
            Creates a <see cref="T:HelixToolkit.SharpDX.Core.MeshGeometry3D" /> object from the loaded file. Polygons are triangulated using triangle fans.
            </summary>
            <returns>
            A <see cref="T:HelixToolkit.SharpDX.Core.MeshGeometry3D" />.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.CreateModel3D">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1" /> from the loaded file.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1" />.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.Load(System.IO.Stream)">
            <summary>
            Loads a ply file from the <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="s">The stream containing the ply file.</param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.Vertices">
            <summary>
            Gets or sets the vertices of this ply model.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.Normals">
            <summary>
            Gets or sets the normal vectors of this ply model.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.TextureCoordinates">
            <summary>
            Gets or sets the texture coordinates of the ply model.
            </summary>
            <remarks>S,T->X,Y</remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.VerticesNumber">
            <summary>
            Gets or sets the number of vertices.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.FacesNumber">
            <summary>
            Gets or sets the number of faces.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.ObjectInformation">
            <summary>
            Contains information about the Ply file received.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.modelFormat">
            <summary>
            Stores the type of ply format in the <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.currentElement">
            <summary>
            Tells us what the current element in the header is, 
            so we can pick its property values in the subsequent lines.
            </summary>
            <remarks>
            Only useful in reading the ply header.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.elementLine_Current">
            <summary>
            The line containing data about an element(It starts just after the "end_header" statement).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.elementLines_Count">
            <summary>
            Gets the number of lines that contains element data.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PlyReader.PlyFormatTypes">
            <summary>
            Contains a list of ply formatted model types.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyFormatTypes.ascii">
            <summary>
            ASCII ply format.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyFormatTypes.binary_big_endian">
            <summary>
            Binary big endian ply format.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyFormatTypes.binary_little_endian">
            <summary>
            Binary little endian ply format.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyFormatTypes.none">
            <summary>
            An unrecognized format.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PlyReader.PlyElements">
            <summary>
            Contains a list of supported ply elements.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyElements.vertex">
            <summary>
            The vertex ply element.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyElements.face">
            <summary>
            The face ply element.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PlyElements.none">
            <summary>
            An unrecognized element.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PlyReader.PLYElement">
            <summary>
            A class that attempts to define ply elements.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.Property_with_Index">
            <summary>
            Stores the property string with its index.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new PLY element.
            </summary>
            <param name="_y1">The lower or start range.</param>
            <param name="_y2">The upper or end range.</param>
            <param name="hasNormals"></param>
            <param name="hasTextures"></param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.StartRange">
            <summary>
            The point from which the current element starts to get picked.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.EndRange">
            <summary>
            The point at which the current element stops to get picked.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.ContainsNormals">
            <summary>
            Specifies whether or not the vertex element has a normal.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.ContainsTextureCoordinates">
            <summary>
            Whether or not the vertex element has a texture coordinate.
            </summary>
            <remarks>
            for vertices only.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.ElementCount">
            <summary>
            Stores the number of the specified element in the current Ply model.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.PLYElement.ContainsNumber(System.Int32)">
            <summary>
            Returns a value specifying whether the index: <paramref name="num"/> is in this <see cref="T:HelixToolkit.SharpDX.Core.PlyReader.PLYElement"/> range.
            </summary>
            <param name="num">The index.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.Load_ascii(System.IO.Stream)">
            <summary>
            Loads an ascii format ply file.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PlyReader.Load_binaryBE(System.IO.Stream)">
            <summary>
            Loads a binary_big_endian format ply file.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ExportTechniques(HelixToolkit.SharpDX.Core.IEffectsManager,System.Xml.XmlWriter)">
            <summary>
            Exports the techniques.
            </summary>
            <param name="manager">The manager.</param>
            <param name="writer">The writer.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ExportTechnique(HelixToolkit.SharpDX.Core.IEffectsManager,System.String,System.Xml.XmlWriter)">
            <summary>
            Exports the technique.
            </summary>
            <param name="manager">The manager.</param>
            <param name="techniqueName">Name of the technique.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ExportTechniquesAsBinary(HelixToolkit.SharpDX.Core.IEffectsManager,System.String)">
            <summary>
            Exports the techniques as binary.
            </summary>
            <param name="manager">The manager.</param>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ExportTechniqueAsBinary(HelixToolkit.SharpDX.Core.IEffectsManager,System.String,System.String)">
            <summary>
            Exports the technique as binary.
            </summary>
            <param name="manager">The manager.</param>
            <param name="techniqueName">Name of the technique.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ImportTechniques(HelixToolkit.SharpDX.Core.IEffectsManager,System.Xml.XmlReader,System.Boolean)">
            <summary>
            Imports the techniques. Make sure to detach effectsManager from viewport before importing
            </summary>
            <param name="manager">The manager.</param>
            <param name="reader">The reader.</param>
            <param name="append">if set to <c>true</c> [append techniques into effects manager]. Otherwise replace all existing techniques</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ShaderExporter.ImportTechniques(HelixToolkit.SharpDX.Core.IEffectsManager,System.String,System.Boolean)">
            <summary>
            Imports the techniques. Make sure to detach effectsManager from viewport before importing
            </summary>
            <param name="manager">The manager.</param>
            <param name="filePath">The file path.</param>
            <param name="append">if set to <c>true</c> [append techniques into effects manager]. Otherwise replace all existing techniques</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StLReader">
            <summary>
            Provides an importer for StereoLithography .StL files.
            </summary>
            <remarks>
            The format is documented on <a href="http://en.wikipedia.org/wiki/STL_(file_format)">Wikipedia</a>.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StLReader.NormalRegex">
            <summary>
            The regular expression used to parse normal vectors.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StLReader.VertexRegex">
            <summary>
            The regular expression used to parse vertices.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StLReader.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StLReader.lastColor">
            <summary>
            The last color.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.StLReader" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StLReader.Header">
            <summary>
            Gets the file header.
            </summary>
            <value>
            The header.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StLReader.Materials">
            <summary>
            Gets the materials.
            </summary>
            <value> The materials. </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StLReader.Meshes">
            <summary>
            Gets the meshes.
            </summary>
            <value> The meshes. </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.Read(System.IO.Stream,HelixToolkit.SharpDX.Core.ModelInfo)">
            <summary>
            Reads the model from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="info"></param>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ToModel3D">
            <summary>
            Builds the model.
            </summary>
            <returns>The model.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ParseLine(System.String,System.String@,System.String@)">
            <summary>
            Parses the ID and values from the specified line.
            </summary>
            <param name="line">
            The line.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="values">
            The values.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ParseNormal(System.String)">
            <summary>
            Parses a normal string.
            </summary>
            <param name="input">
            The input string.
            </param>
            <returns>
            The normal vector.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadFloat(System.IO.BinaryReader)">
            <summary>
            Reads a float (4 byte)
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The float.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadLine(System.IO.StreamReader,System.String)">
            <summary>
            Reads a line from the stream reader.
            </summary>
            <param name="reader">
            The stream reader.
            </param>
            <param name="token">
            The expected token ID.
            </param>
            <exception cref="T:System.Exception">
            The expected token ID was not matched.
            </exception>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadUInt16(System.IO.BinaryReader)">
            <summary>
            Reads a 16-bit unsigned integer.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The unsigned integer.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadUInt32(System.IO.BinaryReader)">
            <summary>
            Reads a 32-bit unsigned integer.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The unsigned integer.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.TryParseVertex(System.String,SharpDX.Vector3@)">
            <summary>
            Tries to parse a vertex from a string.
            </summary>
            <param name="line">
            The input string.
            </param>
            <param name="point">
            The vertex point.
            </param>
            <returns>
            True if parsing was successful.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadFacet(System.IO.StreamReader,System.String)">
            <summary>
            Reads a facet.
            </summary>
            <param name="reader">
            The stream reader.
            </param>
            <param name="normal">
            The normal. 
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.ReadTriangle(System.IO.BinaryReader)">
            <summary>
            Reads a triangle from a binary STL file.
            </summary>
            <param name="reader">
            The reader.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.TryReadAscii(System.IO.Stream)">
            <summary>
            Reads the model in ASCII format from the specified stream.
            </summary>
            <param name="stream">
            The stream.
            </param>
            <returns>
            True if the model was loaded successfully.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StLReader.TryReadBinary(System.IO.Stream)">
            <summary>
            Reads the model from the specified binary stream.
            </summary>
            <param name="stream">
            The stream.
            </param>
            <returns>
            True if the file was read successfully.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StudioReader">
             <summary>
            Ported from HelixToolkit.Wpf
             </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StudioReader.obGroup">
            <summary>
            Helper class to create objects
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StudioReader.Directory">
            <summary>
            Gets or sets the directory
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StudioReader.TexturePath">
            <summary>
            Gets or sets the texture path.
            </summary>
            <value>The texture path.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadChunkId(System.IO.BinaryReader)">
            <summary>
            Read a chunk id.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The chunk ID.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadChunkSize(System.IO.BinaryReader)">
            <summary>
            Read a chunk size.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The read chunk size.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadMaterial(System.IO.BinaryReader,System.Int32)">
            <summary>
            reads the Material of a chunck
            </summary>
            <param name="reader"></param>
            <param name="chunkSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadObject(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads an object
            </summary>
            <param name="reader"></param>
            <param name="chunkSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadTriangularMesh(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads a triangular mesh.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="chunkSize">
            The chunk size.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.CreateMesh(HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.Vector2Collection,HelixToolkit.SharpDX.Core.IntCollection,System.Collections.Generic.List{SharpDX.Matrix},HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.Model.MaterialCore)">
            <summary>
            Create a Mesh, with found props
            </summary>
            <param name="positions"></param>
            <param name="textureCoordinates"></param>
            <param name="triangleIndices"></param>
            <param name="normals"></param>
            <param name="tangents"></param>
            <param name="bitangents"></param>
            <param name="material"></param>
            <param name="transforms"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ComputeNormals(HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.IntCollection,HelixToolkit.SharpDX.Core.Vector3Collection@)">
            <summary>
            Stolen from MeshBuilder class, maybe make this static method there public...
            </summary>
            <param name="positions"></param>
            <param name="triangleIndices"></param>
            <param name="normals"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadFaceSets(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads face sets.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="chunkSize">
            The chunk size.
            </param>
            <returns>
            A list of face sets.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadVector(System.IO.BinaryReader)">
            <summary>
            Reads a vector.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            A vector.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadTransformation(System.IO.BinaryReader)">
            <summary>
            Reads a transformation.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            A transformation.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadBitmapSoure(System.String,SharpDX.Color)">
            <summary>
            A bit hacky we use the give texture as normalMap, if not existant we create a BitMapSource in the fallbackColor
            </summary>
            <param name="texture"></param>
            <param name="fallBackColor"></param>
            <returns></returns>
            
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadMatMap(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads a material map.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="size">
            The size.
            </param>
            <returns>
            The mat map.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadColor(System.IO.BinaryReader)">
            <summary>
            Read a color.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            A color.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadData(System.IO.BinaryReader,System.Int32)">
            <summary>
            Read data.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="size">
            Excluding header size
            </param>
            <returns>
            The data.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StudioReader.ReadString(System.IO.BinaryReader)">
            <summary>
            Reads a string.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StudioReader.FaceSet">
            <summary>
            Represents a set of faces that belongs to the same material.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StudioReader.FaceSet.Faces">
            <summary>
            Gets or sets Faces.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StudioReader.FaceSet.Name">
            <summary>
            Gets or sets the name of the material.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.Add(System.Boolean,SharpDX.Vector3[])">
            <summary>
            
            </summary>
            <param name="isClosed"></param>
            <param name="points"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.AddBox(SharpDX.Vector3,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="center"></param>
            <param name="xlength"></param>
            <param name="ylength"></param>
            <param name="zlength"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.AddLine(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.AddGrid(HelixToolkit.SharpDX.Core.BoxFaces,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="plane"></param>
            <param name="columns"></param>
            <param name="rows"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.ToLineGeometry3D(System.Boolean)">
            <summary>
            Creates the resulting <see cref="T:HelixToolkit.SharpDX.Core.LineGeometry3D"/>.
            </summary>
            <param name="unshareVertices">
            If true, the resulting <see cref="T:HelixToolkit.SharpDX.Core.LineGeometry3D"/> has no shared vertices.
            </param>
            <returns>Returns the resulting <see cref="T:HelixToolkit.SharpDX.Core.LineGeometry3D"/>.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.AddCircle(SharpDX.Vector3,SharpDX.Vector3,System.Single,System.Int32)">
            <summary>
            Adds the circle.
            </summary>
            <param name="position">The position.</param>
            <param name="normal">The normal.</param>
            <param name="radius">The radius.</param>
            <param name="segments">The segments.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateGrid(System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateGrid(SharpDX.Vector3,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateGrid(SharpDX.Vector3,System.Int32,System.Int32)">
            <summary>
            Generates a square grid with a step of 1.0 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateBoundingBox(HelixToolkit.SharpDX.Core.Geometry3D)">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box of the given mesh.
            </summary>
            <param name="mesh">Input mesh for the computation of the b-box</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateBoundingBox(SharpDX.Vector3[])">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box of the given mesh.
            </summary>
            <param name="points">Input points for the computation of the b-box</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateBoundingBox(SharpDX.BoundingBox)">
            <summary>
            Returns a line geometry of the axis-aligned bounding-box.
            </summary>
            <param name="bb">The bounding-box</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateCircle(SharpDX.Vector3,System.Single,System.Int32)">
            <summary>
            
            </summary>
            <param name="plane"></param>
            <param name="radius"></param>
            <param name="segments"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GenerateCircile(SharpDX.Plane,System.Single,System.Int32)">
            <summary>
            Generates the circile.
            </summary>
            <param name="plane">The plane.</param>
            <param name="radius">The radius.</param>
            <param name="segments">The segments.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GetPointToLineDistance2D(SharpDX.Vector3@,SharpDX.Vector3@,SharpDX.Vector3@,SharpDX.Vector3@,System.Single@)">
            <summary>
            ~7874015 tests per second, 3.36 times faster than GetRayToLineDistance()
            </summary>
            <param name="pt"></param>
            <param name="p0"></param>
            <param name="p1"></param>
            <param name="closest"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GetRayToLineDistance(SharpDX.Ray,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3@,SharpDX.Vector3@,System.Single@,System.Single@)">
            <summary>
            
            </summary>
            <param name="ray"></param>
            <param name="t0"></param>
            <param name="t1"></param>
            <param name="sp"></param>
            <param name="tp"></param>
            <param name="sc"></param>
            <param name="tc"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineBuilder.GetLineToLineDistance(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3@,SharpDX.Vector3@,System.Single@,System.Single@,System.Boolean)">
            <summary>
            Source: http://geomalgorithms.com/a07-_distance.html
            ~2341920 tests per second</summary>
            <param name="s0"></param>
            <param name="s1"></param>
            <param name="t0"></param>
            <param name="t1"></param>
            <param name="sp"></param>
            <param name="tp"></param>
            <param name="sc"></param>
            <param name="tc"></param>
            <param name="sIsRay"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1">
            <summary>
            Base class template implementation for <see cref="T:HelixToolkit.SharpDX.Core.IDynamicOctree"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.CreateNodeDelegate">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="objects"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.stack">
            <summary>
            internal stack for tree traversal
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Hit">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.MIN_SIZE">
            <summary>
            The minumum size for enclosing region is a 1x1x1 cube.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.TreeBuilt">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IOctreeBasic.TreeBuilt"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.treeBuilt">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Parameter">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IOctreeBasic.Parameter"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Bound">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IOctreeBasic.Bound"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Objects">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Objects"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitPathBoundingBoxes">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IOctreeBasic.HitPathBoundingBoxes"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.childNodes">
            <summary>
            These are all of the possible child octants for this node in the tree.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.ChildNodes">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.ChildNodes"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.ActiveNodes">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.ActiveNodes"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Parent">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.Parent"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Octants">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.Octants"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.modelHits">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.SelfArray">
            <summary>
            Gets the self array.
            </summary>
            <value>
            The self array.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.AutoDeleteIfEmpty">
            <summary>
            Delete the octant if there is no object or child octant inside it.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.#ctor(SharpDX.BoundingBox@,System.Collections.Generic.List{`0},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            Creates an oct tree which encloses the given region and contains the provided objects.
            </summary>
            <param name="bound">The bounding region for the oct tree.</param>
            <param name="objList">The list of objects contained within the bounding region</param>
            <param name="parent"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.#ctor(HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.#ctor(SharpDX.BoundingBox@,HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            Creates an octTree with a suggestion for the bounding region containing the items.
            </summary>
            <param name="bound">The suggested dimensions for the bounding region. 
            Note: if items are outside this region, the region will be automatically resized.</param>
            <param name="parent"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.CreateNodeWithParent(SharpDX.BoundingBox@,System.Collections.Generic.List{`0},HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="objList"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.CreateNode(SharpDX.BoundingBox@,`0)">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.BuildTree">
            <summary>
            Build the octree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.BuildTree(HelixToolkit.SharpDX.Core.IDynamicOctree,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="root"></param>
            <param name="stack"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.TreeTraversal(HelixToolkit.SharpDX.Core.IDynamicOctree,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}},System.Func{HelixToolkit.SharpDX.Core.IDynamicOctree,System.Boolean},System.Action{HelixToolkit.SharpDX.Core.IDynamicOctree},System.Func{System.Boolean},System.Boolean)">
            <summary>
            Common function to traverse the tree
            </summary>
            <param name="root"></param>
            <param name="stack"></param>
            <param name="criteria"></param>
            <param name="process"></param>
            <param name="breakCriteria"></param>
            <param name="useParallel"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.BuildCurretNodeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.CreateOctants(SharpDX.BoundingBox@,System.Single)">
            <summary>
            
            </summary>
            <param name="box"></param>
            <param name="minSize"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.CheckDimension">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.BuildSubTree">
            <summary>
            Build sub tree nodes
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.GetBoundingBoxFromItem(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindEnclosingBox">
            <summary>
            This finds the dimensions of the bounding box necessary to tightly enclose all items in the object list.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindEnclosingCube(SharpDX.BoundingBox@)">
            <summary>
            This finds the smallest enclosing cube which is a power of 2, for all objects in the list.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.SigBit(System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Clear">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.IDynamicOctree.Clear"/>
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            <see cref="!:IOctreeBasic.HitTest(HitTestContext, object, Geometry3D, Matrix, Ray, ref List&lt;HitTestResult&gt;)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry">The geometry.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="returnMultiple">Not used</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
            <summary>
            <see cref="!:IOctreeBasic.HitTest(HitTestContext, object, Geometry3D, Matrix, Ray, ref List&lt;HitTestResult&gt;, float)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
            <summary>
            <see cref="!:IOctreeBasic.HitTest(HitTestContext, object, Geometry3D, Matrix, Ray, ref List&lt;HitTestResult&gt;, float)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="returnMultiple"></param>
            <param name="hits"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Hit test for current node.
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayWS"></param>
            <param name="rayModel"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphere(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointFromPoint(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="point"></param>
            <param name="results"></param>
            <param name="heuristicSearchFactor"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            Find nearest point by sphere on current node only.
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="points"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Add(`0)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Add(`0)"/>
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Add(`0,HelixToolkit.SharpDX.Core.IDynamicOctree@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Add(`0,HelixToolkit.SharpDX.Core.IDynamicOctree@)"/>
            </summary>
            <param name="item"></param>
            <param name="octant"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.PushExistingToChild(System.Int32)">
            <summary>
            Push one of object belongs to current node into its child octant
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.PushExistingToChild(System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree@)">
            <summary>
            Push one of object belongs to current node into its child octant
            </summary>
            <param name="index"></param>
            <param name="octant"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.PushExistingToChild(HelixToolkit.SharpDX.Core.DynamicOctreeBase{`0},System.Int32,System.Func{SharpDX.BoundingBox,`0,System.Boolean},HelixToolkit.SharpDX.Core.DynamicOctreeBase{`0}.CreateNodeDelegate,HelixToolkit.SharpDX.Core.IDynamicOctree@)">
            <summary>
            Push existing item into child
            </summary>
            <param name="node"></param>
            <param name="index"></param>
            <param name="isContains"></param>
            <param name="createNodeFunc"></param>
            <param name="octant"></param>
            <returns>True: Pushed into child. Otherwise false.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.IsContains(SharpDX.BoundingBox,`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="targetObj"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.IsContains(SharpDX.BoundingBox,SharpDX.BoundingBox,`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="targetObj"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Expand(SharpDX.Vector3@)">
            <summary>
            Return new root
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Expand(HelixToolkit.SharpDX.Core.IDynamicOctree,SharpDX.Vector3@,HelixToolkit.SharpDX.Core.DynamicOctreeBase{`0}.CreateNodeDelegate)">
            <summary>
            Return new root
            </summary>
            <param name="oldRoot"></param>
            <param name="direction"></param>
            <param name="createNodeFunc"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Shrink">
            <summary>
            Shrink the root bound to contains all items inside, return new root
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.Shrink(HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            Shrink the root bound to contains all items inside
            </summary>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindSmallestNodeContainsBoundingBox(SharpDX.BoundingBox@,`0)">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindSmallestNodeContainsBoundingBox``1(SharpDX.BoundingBox,``0,System.Func{SharpDX.BoundingBox,``0,System.Boolean},HelixToolkit.SharpDX.Core.DynamicOctreeBase{``0},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <typeparam name="E"></typeparam>
            <param name="bound"></param>
            <param name="item"></param>
            <param name="isContains"></param>
            <param name="root"></param>
            <param name="stackCache"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindChildByItem(`0,System.Int32@)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindChildByItem``1(``0,HelixToolkit.SharpDX.Core.DynamicOctreeBase{``0},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}},System.Int32@)">
            <summary>
            
            </summary>
            <typeparam name="E"></typeparam>
            <param name="item"></param>
            <param name="root"></param>
            <param name="stackCache"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveByBound(`0,SharpDX.BoundingBox@)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="bound"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveByBound(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveSafe(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.RemoveChild(HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindChildByItemBound(`0,System.Int32@)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindChildByItemBound(`0,SharpDX.BoundingBox@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="bound"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindChildByItemBound``1(``0,SharpDX.BoundingBox,System.Func{SharpDX.BoundingBox,SharpDX.BoundingBox,``0,System.Boolean},HelixToolkit.SharpDX.Core.DynamicOctreeBase{``0},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}},System.Int32@)">
            <summary>
            
            </summary>
            <typeparam name="E"></typeparam>
            <param name="item"></param>
            <param name="bound"></param>
            <param name="isContains"></param>
            <param name="root"></param>
            <param name="stackCache"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindRoot(HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointByPointAndSearchRadius(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Single,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="point"></param>
            <param name="radius"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.IsRoot">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.IsRoot"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HasChildren">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.HasChildren"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.IsEmpty">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IDynamicOctree.IsEmpty"/>
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.OctreeBuildParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.MinimumOctantSize">
            <summary>
            Minimum Octant size.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.MinObjectSizeToSplit">
            <summary>
            Minimum object in each octant to start splitting into smaller octant during build
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.AutoDeleteIfEmpty">
            <summary>
            Delete empty octant automatically
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.Cubify">
            <summary>
            Generate cube octants instead of rectangle octants
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.RecordHitPathBoundingBoxes">
            <summary>
            Record hit path bounding boxes for debugging or display purpose only
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.OctreeBuildParameter.EnableParallelBuild">
            <summary>
            Use parallel tree traversal to build the octree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OctreeBuildParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OctreeBuildParameter.#ctor(System.Single)">
            <summary>
            
            </summary>
            <param name="minSize"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OctreeBuildParameter.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="autoDeleteIfEmpty"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.OctreeBuildParameter.#ctor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="minSize"></param>
            <param name="autoDeleteIfEmpty"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshGeometryOctree">
            <summary>
            MeshGeometryOctree slices mesh geometry by triangles into octree. Objects are KeyValuePair of each triangle index and its bounding box.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometryOctree.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshGeometryOctree.Indices">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},SharpDX.BoundingBox@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="bound"></param>
            <param name="triIndex"></param>
            <param name="parent"></param>
            <param name="paramter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.#ctor(SharpDX.BoundingBox,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="list"></param>
            <param name="parent"></param>
            <param name="paramter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.GetBoundingBoxFromItem(System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.CreateNodeWithParent(SharpDX.BoundingBox@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="region"></param>
            <param name="objList"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            <see cref="!:DynamicOctreeBase&lt;T&gt;.HitTestCurrentNodeExcludeChild(IRenderMatrices, object, Geometry3D, Matrix, ref Ray, ref Ray, ref List&lt;HitTestResult&gt;, ref bool, float)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayWS"></param>
            <param name="rayModel"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)"/>
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.LineGeometryOctree">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineGeometryOctree.Positions">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.LineGeometryOctree.Indices">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},SharpDX.BoundingBox@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="indices"></param>
            <param name="bound"></param>
            <param name="triIndex"></param>
            <param name="parent"></param>
            <param name="paramter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.#ctor(SharpDX.BoundingBox,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="list"></param>
            <param name="parent"></param>
            <param name="paramter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.GetBoundingBoxFromItem(System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.CreateNodeWithParent(SharpDX.BoundingBox@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="region"></param>
            <param name="objList"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayModel"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.LineGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)"/>
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PointGeometryOctree">
            <summary>
            Octree for points
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.#ctor(System.Collections.Generic.IList{SharpDX.Vector3},HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="positions"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.#ctor(SharpDX.BoundingBox,System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.List{System.Int32},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="positions"></param>
            <param name="list"></param>
            <param name="parent"></param>
            <param name="paramter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.IsContains(SharpDX.BoundingBox,SharpDX.BoundingBox,System.Int32)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.DistanceRayToPoint(SharpDX.Ray@,SharpDX.Vector3@)">
            <summary>
            Get the distance from ray to a point
            </summary>
            <param name="r"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Return nearest point it gets hit. And the distance from ray origin to the point it gets hit
            </summary>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="context"></param>
            <param name="rayModel"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.CreateNodeWithParent(SharpDX.BoundingBox@,System.Collections.Generic.List{System.Int32},HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="objList"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.GetBoundingBoxFromItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PointGeometryOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)"/>
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.InstancingModel3DOctree">
            <summary>
            Octree for instancing
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.#ctor(System.Collections.Generic.IList{SharpDX.Matrix},SharpDX.BoundingBox,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="instanceMatrix"></param>
            <param name="geometryBound"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.#ctor(SharpDX.BoundingBox@,System.Collections.Generic.IList{SharpDX.Matrix},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree,HelixToolkit.SharpDX.Core.OctreeBuildParameter,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.IDynamicOctree[]}})">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="instanceMatrix"></param>
            <param name="objects"></param>
            <param name="parent"></param>
            <param name="parameter"></param>
            <param name="stackCache"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)"/>
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="points"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            <see cref="M:HelixToolkit.SharpDX.Core.DynamicOctreeBase`1.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)"/>
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayWS"></param>
            <param name="rayModel"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.CreateNodeWithParent(SharpDX.BoundingBox@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox}},HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            
            </summary>
            <param name="bound"></param>
            <param name="objList"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.InstancingModel3DOctree.GetBoundingBoxFromItem(System.Collections.Generic.KeyValuePair{System.Int32,SharpDX.BoundingBox})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IOctreeBasic">
            <summary>
            Interface for basic octree. Used to implement static octree and dynamic octree
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeBasic.TreeBuilt">
            <summary>
            Whether the tree has been built.
            </summary>
        </member>
        <member name="E:HelixToolkit.SharpDX.Core.IOctreeBasic.Hit">
             <summary>
            
             </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeBasic.HitPathBoundingBoxes">
            <summary>
            Output the hit path of the tree traverse. Only for debugging
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeBasic.Parameter">
            <summary>
            Octree parameter
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IOctreeBasic.Bound">
            <summary>
            Gets the bound.
            </summary>
            <value>
            The bound.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.BuildTree">
            <summary>
            Build the static octree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Hit test. Only returns closest hit test result
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="hits"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Hits the test. Returns multiple hits if returnsMultiple = true/>
            </summary>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry">The geometry.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="returnsMultiple">if set to <c>true</c> [returns multiple].</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="model"></param>
             <param name="geometry"></param>
             <param name="modelMatrix"></param>
             <param name="hits"></param>
             <param name="hitThickness"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.HitTest(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,System.Boolean,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="model">The model.</param>
            <param name="geometry">The geometry.</param>
            <param name="modelMatrix">The model matrix.</param>
            <param name="returnsMultiple">if set to <c>true</c> [returns multiple].</param>
            <param name="hits">The hits.</param>
            <param name="hitThickness">The hit thickness.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.FindNearestPointFromPoint(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Single)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="point"></param>
             <param name="results"></param>
             <param name="heuristicSearchFactor"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.FindNearestPointBySphere(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="sphere"></param>
             <param name="points"></param>
             <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.FindNearestPointByPointAndSearchRadius(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.Vector3@,System.Single,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@)">
            <summary>
            Finds the nearest point by point and search radius.
            </summary>
            <param name="context">The context.</param>
            <param name="point">The point.</param>
            <param name="radius">The radius.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IOctreeBasic.CreateOctreeLineModel">
            <summary>
            Creates the octree line model for debugging or visualize the octree
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.IDynamicOctree">
            <summary>
            Interface for dynamic octree
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.SelfArray">
            <summary>
            Gets the self as array.
            </summary>
            <value>
            The self array.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.ActiveNodes">
            <summary>
            This is a bitmask indicating which child nodes are actively being used.
            It adds slightly more complexity, but is faster for performance since there is only one comparison instead of 8.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.HasChildren">
            <summary>
            Has child octants
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.IsRoot">
            <summary>
            If this node is root node
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.Parent">
            <summary>
            Parent node
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.ChildNodes">
            <summary>
            Child octants
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.Octants">
            <summary>
            Octant bounds
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.AutoDeleteIfEmpty">
            <summary>
            Delete self if is empty;
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.IDynamicOctree.IsEmpty">
            <summary>
            Returns true if this node tree and all children have no content
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.HitTestCurrentNodeExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,System.Object,HelixToolkit.SharpDX.Core.Geometry3D,SharpDX.Matrix,SharpDX.Ray@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@,System.Single)">
            <summary>
            Hit test for only this node, not its child node
            </summary>
            <param name="context"></param>
            <param name="model"></param>
            <param name="geometry"></param>
            <param name="modelMatrix"></param>
            <param name="rayWS"></param>
            <param name="hits"></param>
            <param name="isIntersect"></param>
            <param name="hitThickness">Only used for point/line hit test</param>
            <param name="rayModel"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.FindNearestPointBySphereExcludeChild(HelixToolkit.SharpDX.Core.HitTestContext,SharpDX.BoundingSphere@,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.HitTestResult}@,System.Boolean@)">
            <summary>
            Search nearest point by a search sphere at this node only
            </summary>
            <param name="context"></param>
            <param name="sphere"></param>
            <param name="result"></param>
            <param name="isIntersect"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.BuildCurretNodeOnly">
            <summary>
            Build current node level only, this will only build current node and create children, but not build its children. 
            To build from top to bottom, call BuildTree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.Clear">
            <summary>
            Clear the tree
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.RemoveSelf">
            <summary>
            Remove self from parent node
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.IDynamicOctree.RemoveChild(HelixToolkit.SharpDX.Core.IDynamicOctree)">
            <summary>
            Remove child from ChildNodes
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.TraverseUp(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Traverses up to the root
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.ForceUpdateTransformsAndBounds(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode)">
            <summary>
            Forces to update transform and bounds.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.ForceUpdateTransformsAndBounds(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode})">
            <summary>
            Forces the update transform and bounds.
            </summary>
            <param name="nodes">The nodes.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.Traverse(HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,System.Boolean,System.Collections.Generic.Stack{System.Collections.Generic.IEnumerator{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Traverses the specified only rendering.
            </summary>
            <param name="root">The root.</param>
            <param name="onlyRendering">if set to <c>true</c> [only rendering].</param>
            <param name="stackCache">The stack cache.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.Traverse(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},System.Boolean,System.Collections.Generic.Stack{System.Collections.Generic.IEnumerator{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Traverses the specified condition.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="onlyRendering">Only the node is currently rendering. The nodes set to be Visible = false or IsRendering = false will not be traversed. </param>
            <param name="stackCache">The stack cache.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.PreorderDFT(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},System.Func{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,System.Boolean},System.Collections.Generic.Stack{System.Collections.Generic.IEnumerator{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Pre-ordered depth first traverse
            </summary>
            <param name="nodes"></param>
            <param name="condition"></param>
            <param name="stackCache"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.PreorderDFT(System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},HelixToolkit.SharpDX.Core.RenderContext,System.Func{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,HelixToolkit.SharpDX.Core.RenderContext,System.Boolean},System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Int32,HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}}})">
            <summary>
            Preorders the DFT without using Linq.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="context">The context.</param>
            <param name="condition">The condition.</param>
            <param name="results">The results.</param>
            <param name="stackCache">The stack cache.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.PreorderDFTGetCores(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode},System.Func{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode,System.Boolean},System.Collections.Generic.Stack{System.Collections.Generic.IEnumerator{HelixToolkit.SharpDX.Core.Model.Scene.SceneNode}})">
            <summary>
            Get render cores by Pre-ordered depth first traverse
            </summary>
            <param name="nodes"></param>
            <param name="condition"></param>
            <param name="stackCache"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.PreorderDFTRun(System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D},System.Func{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D,System.Boolean},System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int32,System.Collections.Generic.IList{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D}}})">
            <summary>
            Preorders the DFT without Linq;
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="condition">The condition.</param>
            <param name="stackCache">The stack cache.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.TreeTraverser.PreorderDFTGetCores(System.Collections.Generic.IEnumerable{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D},System.Func{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D,System.Boolean},System.Collections.Generic.Stack{System.Collections.Generic.IEnumerator{HelixToolkit.SharpDX.Core.Model.Scene2D.SceneNode2D}})">
            <summary>
            Get render cores by Pre-ordered depth first traverse
            </summary>
            <param name="nodes"></param>
            <param name="condition"></param>
            <param name="stackCache"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.BoxFaces">
            <summary>
            Box face enumeration.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.PositiveZ">
            <summary>
            The top.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Top">
            <summary>
            The top.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.NegativeZ">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Bottom">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.NegativeY">
            <summary>
            The left side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Left">
            <summary>
            The left side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.PositiveY">
            <summary>
            The right side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Right">
            <summary>
            The right side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.PositiveX">
            <summary>
            The front side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Front">
            <summary>
            The front side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.NegativeX">
            <summary>
            The back side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.Back">
            <summary>
            The back side.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.BoxFaces.All">
            <summary>
            All sides.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshFaces">
            <summary>
            MeshFaces.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshFaces.Default">
            <summary>
            Normal Face (3 Points).
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshFaces.QuadPatches">
            <summary>
            Face with 4 Points.
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshBuilder">
            <summary>
            Builds MeshGeometry3D objects.
            </summary>
            <remarks>
            Performance tips for MeshGeometry3D (http://msdn.microsoft.com/en-us/library/bb613553.aspx)
            <para>
            High impact:
            Mesh animation—changing the individual vertices of a mesh on a per-frame basis—is not always efficient in
            Windows Presentation Foundation (WPF).  To minimize the performance impact of change notifications when
            each vertex is modified, detach the mesh from the visual tree before performing per-vertex modification.
            Once the mesh has been modified, reattach it to the visual tree.  Also, try to minimize the size of meshes
            that will be animated in this way.
            </para>
            <para>
            Medium impact:
            When a mesh is defined as abutting triangles with shared vertices and those vertices have the same position,
            normal, and texture coordinates, define each shared vertex only once and then define your triangles by
            index with TriangleIndices.
            </para>
            <para>
            Low impact:
            To minimize the construction time of large collections in Windows Presentation Foundation (WPF),
            such as a MeshGeometry3D’s Positions, Normals, TextureCoordinates, and TriangleIndices, pre-size
            the collections before value population. If possible, pass the collections’ constructors prepopulated
            data structures such as arrays or Lists.
            </para>
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.AllCurvesShouldHaveTheSameNumberOfPoints">
            <summary>
            'All curves should have the same number of points' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.SourceMeshNormalsShouldNotBeNull">
            <summary>
            'Source mesh normals should not be null' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.SourceMeshTextureCoordinatesShouldNotBeNull">
            <summary>
            'Source mesh texture coordinates should not be null' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.WrongNumberOfDiameters">
            <summary>
            'Wrong number of diameters' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.WrongNumberOfPositions">
            <summary>
            'Wrong number of positions' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.WrongNumberOfNormals">
            <summary>
            'Wrong number of normals' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.WrongNumberOfTextureCoordinates">
            <summary>
            'Wrong number of texture coordinates' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.WrongNumberOfAngles">
            <summary>
            'Wrong number of angles' exception message.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.CircleCache">
            <summary>
            The circle cache.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.ClosedCircleCache">
            <summary>
            The closed circle cache.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.positions">
            <summary>
            The positions.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.Positions">
            <summary>
            Gets the positions collection of the mesh.
            </summary>
            <value> The positions. </value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.triangleIndices">
            <summary>
            The triangle indices.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.TriangleIndices">
            <summary>
            Gets the triangle indices.
            </summary>
            <value>The triangle indices.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.normals">
            <summary>
            The normal vectors.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.Normals">
            <summary>
            Gets the normal vectors of the mesh.
            </summary>
            <value>The normal vectors.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.textureCoordinates">
            <summary>
            The texture coordinates.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.TextureCoordinates">
            <summary>
            Gets the texture coordinates of the mesh.
            </summary>
            <value>The texture coordinates.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.tangents">
            <summary>
            The Tangents.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.Tangents">
            <summary>
            Gets and sets the tangents of the mesh.
            </summary>
            <value>The tangents.</value>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.MeshBuilder.bitangents">
            <summary>
            The Bi-Tangents.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.BiTangents">
            <summary>
            Gets and sets the bi-tangents of the mesh.
            </summary>
            <value>The bi-tangents.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.HasNormals">
            <summary>
            Do we have Normals or not.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.HasTexCoords">
            <summary>
            Do we have Texture Coordinates or not.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.HasTangents">
            <summary>
            Do we have Tangents or not.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.CreateNormals">
            <summary>
            Gets or sets a value indicating whether to create normal vectors.
            </summary>
            <value>
            <c>true</c> if normal vectors should be created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.MeshBuilder.CreateTextureCoordinates">
            <summary>
            Gets or sets a value indicating whether to create texture coordinates.
            </summary>
            <value>
            <c>true</c> if texture coordinates should be created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.MeshBuilder"/> class.
            </summary>
            <remarks>
            Normal and texture coordinate generation are included.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.MeshBuilder"/> class.
            </summary>
            <param name="generateNormals">
            Generate normal vectors.
            </param>
            <param name="generateTexCoords">
            Generate texture coordinates.
            </param>
            <param name="tangentSpace">
            Generate tangents.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.GetCircle(System.Int32,System.Boolean)">
            <summary>
            Gets a circle section (cached).
            </summary>
            <param name="thetaDiv">
            The number of division.
            </param>
            <param name="closed">
            Is the circle closed?
            If true, the last point will not be at the same position than the first one.
            </param>
            <returns>
            A circle.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.GetCircleSegment(System.Int32,System.Double,System.Double)">
            <summary>
            Gets a circle segment section.
            </summary>
            <param name="thetaDiv">The number of division.</param>
            <param name="totalAngle">The angle of the circle segment.</param>
            <param name="angleOffset">The angle-offset to use.</param>
            <returns>
            A circle segment.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ComputeNormals(HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.IntCollection,HelixToolkit.SharpDX.Core.Vector3Collection@)">
            <summary>
            Calculate the Mesh's Normals
            </summary>
            <param name="positions">The Positions.</param>
            <param name="triangleIndices">The TriangleIndices.</param>
            <param name="normals">The calcualted Normals.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ComputeTangents(HelixToolkit.SharpDX.Core.MeshFaces)">
            <summary>
            Calculate the Mesh's Tangents
            </summary>
            <param name="meshFaces">The Faces of the Mesh</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ComputeTangents(HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.Vector2Collection,HelixToolkit.SharpDX.Core.IntCollection,HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.Vector3Collection@)">
            <summary>
            Tangent Space computation for IndexedTriangle meshes
            Based on:
            http://www.terathon.com/code/tangent.html
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ComputeTangentsQuads(HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.Vector3Collection,HelixToolkit.SharpDX.Core.Vector2Collection,HelixToolkit.SharpDX.Core.IntCollection,HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.Vector3Collection@)">
            <summary>
            Calculate the Tangents for a Quad.
            </summary>
            <param name="positions">The Positions.</param>
            <param name="normals">The Normals.</param>
            <param name="textureCoordinates">The TextureCoordinates.</param>
            <param name="indices">The Indices.</param>
            <param name="tangents">The calculated Tangens.</param>
            <param name="bitangents">The calculated Bi-Tangens.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ComputeNormalsAndTangents(HelixToolkit.SharpDX.Core.MeshFaces,System.Boolean)">
            <summary>
            Calculate the Normals and Tangents for all MeshFaces.
            </summary>
            <param name="meshFaces">The MeshFaces.</param>
            <param name="tangents">Also calculate the Tangents or not.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddArrow(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Int32)">
            <summary>
            Adds an arrow to the mesh.
            </summary>
            <param name="point1">
            The start point.
            </param>
            <param name="point2">
            The end point.
            </param>
            <param name="diameter">
            The diameter of the arrow cylinder.
            </param>
            <param name="headLength">
            Length of the head (relative to diameter).
            </param>
            <param name="thetaDiv">
            The number of divisions around the arrow.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddBox(SharpDX.Vector3,System.Double,System.Double,System.Double)">
            <summary>
            Adds a box aligned with the X, Y and Z axes.
            </summary>
            <param name="center">
            The center point of the box.
            </param>
            <param name="xlength">
            The length of the box along the X axis.
            </param>
            <param name="ylength">
            The length of the box along the Y axis.
            </param>
            <param name="zlength">
            The length of the box along the Z axis.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddBox(SharpDX.Vector3,System.Double,System.Double,System.Double,HelixToolkit.SharpDX.Core.BoxFaces)">
            <summary>
            Adds a box with the specified faces, aligned with the X, Y and Z axes.
            </summary>
            <param name="center">
            The center point of the box.
            </param>
            <param name="xlength">
            The length of the box along the X axis.
            </param>
            <param name="ylength">
            The length of the box along the Y axis.
            </param>
            <param name="zlength">
            The length of the box along the Z axis.
            </param>
            <param name="faces">
            The faces to include.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddBox(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Double,HelixToolkit.SharpDX.Core.BoxFaces)">
            <summary>
            Adds a box with the specified faces, aligned with the specified axes.
            </summary>
            <param name="center">The center point of the box.</param>
            <param name="x">The x axis.</param>
            <param name="y">The y axis.</param>
            <param name="xlength">The length of the box along the X axis.</param>
            <param name="ylength">The length of the box along the Y axis.</param>
            <param name="zlength">The length of the box along the Z axis.</param>
            <param name="faces">The faces to include.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCone(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Adds a (possibly truncated) cone.
            </summary>
            <param name="origin">
            The origin.
            </param>
            <param name="direction">
            The direction (normalization not required).
            </param>
            <param name="baseRadius">
            The base radius.
            </param>
            <param name="topRadius">
            The top radius.
            </param>
            <param name="height">
            The height.
            </param>
            <param name="baseCap">
            Include a base cap if set to <c>true</c> .
            </param>
            <param name="topCap">
            Include the top cap if set to <c>true</c> .
            </param>
            <param name="thetaDiv">
            The number of divisions around the cone.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Cone_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCone(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Boolean,System.Int32)">
            <summary>
            Adds a cone.
            </summary>
            <param name="origin">The origin point.</param>
            <param name="apex">The apex point.</param>
            <param name="baseRadius">The base radius.</param>
            <param name="baseCap">
            Include a base cap if set to <c>true</c> .
            </param>
            <param name="thetaDiv">The theta div.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCubeFace(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Double)">
            <summary>
            Adds a cube face.
            </summary>
            <param name="center">
            The center of the cube.
            </param>
            <param name="normal">
            The normal vector for the face.
            </param>
            <param name="up">
            The up vector for the face.
            </param>
            <param name="dist">
            The distance from the center of the cube to the face.
            </param>
            <param name="width">
            The width of the face.
            </param>
            <param name="height">
            The height of the face.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCube(HelixToolkit.SharpDX.Core.BoxFaces)">
            <summary>
            Add a Cube, only with specified Faces.
            </summary>
            <param name="faces">The Faces to create (default all Faces)</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCylinder(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Int32)">
            <summary>
            Adds a cylinder to the mesh.
            </summary>
            <param name="p1">
            The first point.
            </param>
            <param name="p2">
            The second point.
            </param>
            <param name="diameter">
            The diameters.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinder.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Cylinder_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddCylinder(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a cylinder to the mesh.
            </summary>
            <param name="p1">
            The first point.
            </param>
            <param name="p2">
            The second point.
            </param>
            <param name="radius">
            The diameters.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinder.
            </param>
            <param name="cap1">
            The first Cap.
            </param>
            <param name="cap2">
            The second Cap.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Cylinder_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddDodecahedron(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double)">
            <summary>
            Generate a Dodecahedron
            </summary>
            <param name="center">The Center of the Dodecahedron</param>
            <param name="forward">The Direction to the first Point (normalized).</param>
            <param name="up">The Up-Dirextion (normalized, perpendicular to the forward Direction)</param>
            <param name="sideLength">Length of the Edges of the Dodecahedron</param>
            <remarks>
            See:
            https://en.wikipedia.org/wiki/Dodecahedron
            https://en.wikipedia.org/wiki/Pentagon
            https://en.wikipedia.org/wiki/Isosceles_triangle
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddEdges(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Double,System.Int32)">
            <summary>
            Adds a collection of edges as cylinders.
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="edges">
            The edge indices.
            </param>
            <param name="diameter">
            The diameter of the cylinders.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinders.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddEllipsoid(SharpDX.Vector3,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Adds an ellipsoid.
            </summary>
            <param name="center">
            The center of the ellipsoid.
            </param>
            <param name="radiusx">
            The x radius of the ellipsoid.
            </param>
            <param name="radiusy">
            The y radius of the ellipsoid.
            </param>
            <param name="radiusz">
            The z radius of the ellipsoid.
            </param>
            <param name="thetaDiv">
            The number of divisions around the ellipsoid.
            </param>
            <param name="phiDiv">
            The number of divisions from top to bottom of the ellipsoid.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddExtrudedGeometry(System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds an extruded surface of the specified curve.
            </summary>
            <param name="points">
            The 2D points describing the curve to extrude.
            </param>
            <param name="xaxis">
            The x-axis.
            </param>
            <param name="p0">
            The start origin of the extruded surface.
            </param>
            <param name="p1">
            The end origin of the extruded surface.
            </param>
            <remarks>
            The y-axis is determined by the cross product between the specified x-axis and the p1-origin vector.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFacePZ">
            <summary>
            Add a Face in positive Z-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFaceNZ">
            <summary>
            Add a Face in negative Z-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFacePX">
            <summary>
            Add a Face in positive X-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFaceNX">
            <summary>
            Add a Face in negative X-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFacePY">
            <summary>
            Add a Face in positive Y-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddFaceNY">
            <summary>
            Add a Face in negative Y-Direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddExtrudedSegments(System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds an extruded surface of the specified line segments.
            </summary>
            <param name="points">The 2D points describing the line segments to extrude. The number of points must be even.</param>
            <param name="axisX">The x-axis.</param>
            <param name="p0">The start origin of the extruded surface.</param>
            <param name="p1">The end origin of the extruded surface.</param>
            <remarks>The y-axis is determined by the cross product between the specified x-axis and the p1-origin vector.</remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddLoftedGeometry(System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector3}},System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector3}},System.Collections.Generic.IList{System.Collections.Generic.IList{SharpDX.Vector2}})">
            <summary>
            Adds a lofted surface.
            </summary>
            <param name="positionsList">
            List of lofting sections.
            </param>
            <param name="normalList">
            The normal list.
            </param>
            <param name="textureCoordinateList">
            The texture coordinate list.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Loft_(3D).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddNode(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Adds a single node.
            </summary>
            <param name="position">
            The position.
            </param>
            <param name="normal">
            The normal.
            </param>
            <param name="textureCoordinate">
            The texture coordinate.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddOctahedron(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double)">
            <summary>
            Adds an octahedron.
            </summary>
            <param name="center">The center.</param>
            <param name="forward">The normal vector.</param>
            <param name="up">The up vector.</param>
            <param name="sideLength">Length of the side.</param>
            <param name="height">The half height of the octahedron.</param>
            <remarks>See <a href="http://en.wikipedia.org/wiki/Octahedron">Octahedron</a>.</remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPipe(SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Int32)">
            <summary>
            Adds a (possibly hollow) pipe.
            </summary>
            <param name="point1">
            The start point.
            </param>
            <param name="point2">
            The end point.
            </param>
            <param name="innerDiameter">
            The inner diameter.
            </param>
            <param name="diameter">
            The outer diameter.
            </param>
            <param name="thetaDiv">
            The number of divisions around the pipe.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPipes(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Double,System.Int32)">
            <summary>
            Adds a collection of edges as cylinders.
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="edges">
            The edge indices.
            </param>
            <param name="diameter">
            The diameter of the cylinders.
            </param>
            <param name="thetaDiv">
            The number of divisions around the cylinders.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPolygon(System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds a polygon.
            </summary>
            <param name="points">The 2D points defining the polygon.</param>
            <param name="axisX">The x axis.</param>
            <param name="axisY">The y axis.</param>
            <param name="origin">The origin.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPolygon(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Adds a polygon.
            </summary>
            <param name="points">
            The points of the polygon.
            </param>
            <remarks>
            If the number of points is greater than 4, a triangle fan is used.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPolygon(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a polygon specified by vertex index (uses a triangle fan).
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPolygonByCuttingEars(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a polygon defined by vertex indices (uses the cutting ears algorithm).
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPolygonByTriangulation(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a polygon defined by vertex indices (uses the sweep line algorithm).
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPyramid(SharpDX.Vector3,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds a pyramid.
            </summary>
            <param name="center">
            The center.
            </param>
            <param name="sideLength">
            Length of the sides of the pyramid.
            </param>
            <param name="height">
            The height of the pyramid.
            </param>
            <param name="closeBase">
            Add triangles to the base of the pyramid or not.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Pyramid_(geometry).
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddPyramid(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds a pyramid.
            </summary>
            <param name="center">The center.</param>
            <param name="forward">The normal vector (normalized).</param>
            <param name="up">The 'up' vector (normalized).</param>
            <param name="sideLength">Length of the sides of the pyramid.</param>
            <param name="height">The height of the pyramid.</param>
            <param name="closeBase">Add triangles to the base of the pyramid or not.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddQuad(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a quad (exactely 4 indices)
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddQuad(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds a quadrilateral polygon.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="p3">
            The fourth point.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Quadrilateral.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddQuad(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Adds a quadrilateral polygon.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="p3">
            The fourth point.
            </param>
            <param name="uv0">
            The first texture coordinate.
            </param>
            <param name="uv1">
            The second texture coordinate.
            </param>
            <param name="uv2">
            The third texture coordinate.
            </param>
            <param name="uv3">
            The fourth texture coordinate.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Quadrilateral.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddQuads(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a list of quadrilateral polygons.
            </summary>
            <param name="quadPositions">
            The points.
            </param>
            <param name="quadNormals">
            The normal vectors.
            </param>
            <param name="quadTextureCoordinates">
            The texture coordinates.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMesh(System.Collections.Generic.IList{SharpDX.Vector3},System.Int32)">
            <summary>
            Adds a rectangular mesh (m x n points).
            </summary>
            <param name="points">
            The one-dimensional array of points. The points are stored row-by-row.
            </param>
            <param name="columns">
            The number of columns in the rectangular mesh.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMesh(SharpDX.Vector3[0:,0:],SharpDX.Vector2[0:,0:],System.Boolean,System.Boolean)">
            <summary>
            Adds a rectangular mesh defined by a two-dimensional array of points.
            </summary>
            <param name="points">
            The points.
            </param>
            <param name="texCoords">
            The texture coordinates (optional).
            </param>
            <param name="closed0">
            set to <c>true</c> if the mesh is closed in the first dimension.
            </param>
            <param name="closed1">
            set to <c>true</c> if the mesh is closed in the second dimension.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMesh(System.Collections.Generic.IList{SharpDX.Vector3},System.Int32,System.Boolean)">
            <summary>
            Adds a rectangular mesh (m x n points).
            </summary>
            <param name="points">
            The one-dimensional array of points. The points are stored row-by-row.
            </param>
            <param name="columns">
            The number of columns in the rectangular mesh.
            </param>
            <param name="flipTriangles">
            Flip the Triangles.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMesh(HelixToolkit.SharpDX.Core.BoxFaces,System.Int32,System.Int32,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Generates a rectangles mesh on the axis-aligned plane given by the box-face.
            </summary>
            <param name="plane">Box face which determines the plane the grid lies on.</param>
            <param name="columns">width of the grid, i.e. horizontal resolution </param>
            <param name="rows">height of the grid, i.e. vertical resolution</param>
            <param name="width">total size in horizontal </param>
            <param name="height">total vertical size</param>
            <param name="flipTriangles">flips the triangle faces</param>
            <param name="flipTexCoordsUAxis">flips the u-axis (horizontal) of the texture coords.</param>
            <param name="flipTexCoordsVAxis">flips the v-axis (vertical) of the tex.coords.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMeshNormals(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds normal vectors for a rectangular mesh.
            </summary>
            <param name="index0">
            The index 0.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMeshTextureCoordinates(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds texture coordinates for a rectangular mesh.
            </summary>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
            <param name="flipRowsAxis">
            Flip the Rows.
            </param>
            <param name="flipColumnsAxis">
            Flip the Columns.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMeshTriangleIndices(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add triangle indices for a rectangular mesh.
            </summary>
            <param name="index0">
            The index offset.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
            <param name="isSpherical">
            set the flag to true to create a sphere mesh (triangles at top and bottom).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMeshTriangleIndices(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds triangular indices for a rectangular mesh.
            </summary>
            <param name="index0">
            The index 0.
            </param>
            <param name="rows">
            The rows.
            </param>
            <param name="columns">
            The columns.
            </param>
            <param name="rowsClosed">
            True if rows are closed.
            </param>
            <param name="columnsClosed">
            True if columns are closed.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRectangularMeshTriangleIndicesFlipped(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Add triangle indices for a rectangular mesh with flipped triangles.
            </summary>
            <param name="index0">
            The index offset.
            </param>
            <param name="rows">
            The number of rows.
            </param>
            <param name="columns">
            The number of columns.
            </param>
            <param name="isSpherical">
            set the flag to true to create a sphere mesh (triangles at top and bottom).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRegularIcosahedron(SharpDX.Vector3,System.Double,System.Boolean)">
            <summary>
            Adds a regular icosahedron.
            </summary>
            <param name="center">
            The center.
            </param>
            <param name="radius">
            The radius.
            </param>
            <param name="shareVertices">
            Share vertices if set to <c>true</c> .
            </param>
            <remarks>
            See <a href="http://en.wikipedia.org/wiki/Icosahedron">Wikipedia</a> and <a href="http://www.gamedev.net/community/forums/topic.asp?topic_id=283350">link</a>.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddRevolvedGeometry(System.Collections.Generic.IList{SharpDX.Vector2},System.Collections.Generic.IList{System.Double},SharpDX.Vector3,SharpDX.Vector3,System.Int32)">
            <summary>
            Adds a surface of revolution.
            </summary>
            <param name="points">The points (x coordinates are distance from the origin along the axis of revolution, y coordinates are radius, )</param>
            <param name="textureValues">The v texture coordinates, one for each point in the <paramref name="points" /> list.</param>
            <param name="origin">The origin of the revolution axis.</param>
            <param name="direction">The direction of the revolution axis.</param>
            <param name="thetaDiv">The number of divisions around the mesh.</param>
            <remarks>
            See http://en.wikipedia.org/wiki/Surface_of_revolution.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddSphere(SharpDX.Vector3,System.Double,System.Int32,System.Int32)">
            <summary>
            Adds a sphere.
            </summary>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="thetaDiv">
            The number of divisions around the sphere.
            </param>
            <param name="phiDiv">
            The number of divisions from top to bottom of the sphere.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddSurfaceOfRevolution(SharpDX.Vector3,SharpDX.Vector3,System.Collections.Generic.IList{SharpDX.Vector2},System.Collections.Generic.IList{System.Int32},System.Int32,System.Collections.Generic.IList{System.Double})">
            <summary>
            Adds a surface of revolution.
            </summary>
            <param name="origin">The origin.</param>
            <param name="axis">The axis.</param>
            <param name="section">The points defining the curve to revolve.</param>
            <param name="sectionIndices">The indices of the line segments of the section.</param>
            <param name="thetaDiv">The number of divisions.</param>
            <param name="textureValues">The texture values.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTetrahedron(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,System.Double)">
            <summary>
            Add a tetrahedron.
            </summary>
            <param name="center">The Center of Mass.</param>
            <param name="forward">Direction to first Base-Point (in Base-Plane).</param>
            <param name="up">Up Vector.</param>
            <param name="sideLength">The Sidelength.</param>
            <remarks>
            See https://en.wikipedia.org/wiki/Tetrahedron and
            https://en.wikipedia.org/wiki/Equilateral_triangle.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTorus(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Adds a torus.
            </summary>
            <param name="torusDiameter">The diameter of the torus.</param>
            <param name="tubeDiameter">The diameter of the torus "tube".</param>
            <param name="thetaDiv">The number of subdivisions around the torus.</param>
            <param name="phiDiv">The number of subdividions of the torus' "tube.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangle(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a triangle (exactely 3 indices)
            </summary>
            <param name="vertexIndices">The vertex indices.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangle(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangle(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="p0">
            The first point.
            </param>
            <param name="p1">
            The second point.
            </param>
            <param name="p2">
            The third point.
            </param>
            <param name="uv0">
            The first texture coordinate.
            </param>
            <param name="uv1">
            The second texture coordinate.
            </param>
            <param name="uv2">
            The third texture coordinate.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangleFan(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a triangle fan.
            </summary>
            <param name="vertices">
            The vertex indices of the triangle fan.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangleFan(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a triangle fan to the mesh
            </summary>
            <param name="fanPositions">
            The points of the triangle fan.
            </param>
            <param name="fanNormals">
            The normal vectors of the triangle fan.
            </param>
            <param name="fanTextureCoordinates">
            The texture coordinates of the triangle fan.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangles(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a list of triangles.
            </summary>
            <param name="trianglePositions">
            The points (the number of points must be a multiple of 3).
            </param>
            <param name="triangleNormals">
            The normal vectors (corresponding to the points).
            </param>
            <param name="triangleTextureCoordinates">
            The texture coordinates (corresponding to the points).
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTriangleStrip(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Adds a triangle strip to the mesh.
            </summary>
            <param name="stripPositions">
            The points of the triangle strip.
            </param>
            <param name="stripNormals">
            The normal vectors of the triangle strip.
            </param>
            <param name="stripTextureCoordinates">
            The texture coordinates of the triangle strip.
            </param>
            <remarks>
            See http://en.wikipedia.org/wiki/Triangle_strip.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Double[],System.Double[],System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a tube.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="values">
            The texture coordinate X-values.
            </param>
            <param name="diameters">
            The diameters.
            </param>
            <param name="thetaDiv">
            The number of divisions around the tube.
            </param>
            <param name="isTubeClosed">
            Set to true if the tube path is closed.
            </param>
            <param name="frontCap">
            Create a front Cap or not.
            </param>
            <param name="backCap">
            Create a back Cap or not.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Double,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a tube.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="diameter">
            The diameter of the tube.
            </param>
            <param name="thetaDiv">
            The number of divisions around the tube.
            </param>
            <param name="isTubeClosed">
            Set to true if the tube path is closed.
            </param>
            <param name="frontCap">
            Generate front Cap.
            </param>
            <param name="backCap">
            Generate back Cap.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{SharpDX.Vector2},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a tube with a custom section.
            </summary>
            <param name="path">
            A list of points defining the centers of the tube.
            </param>
            <param name="values">
            The texture coordinate X values (optional).
            </param>
            <param name="diameters">
            The diameters (optional).
            </param>
            <param name="section">
            The section to extrude along the tube path.
            </param>
            <param name="isTubeClosed">
            If the tube is closed set to <c>true</c> .
            </param>
            <param name="isSectionClosed">
            if set to <c>true</c> [is section closed].
            </param>
            <param name="frontCap">
            Create a front Cap or not.
            </param>
            <param name="backCap">
            Create a back Cap or not.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.AddTube(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{SharpDX.Vector2},SharpDX.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a tube with a custom section.
            </summary>
            <param name="path">A list of points defining the centers of the tube.</param>
            <param name="angles">The rotation of the section as it moves along the path</param>
            <param name="values">The texture coordinate X values (optional).</param>
            <param name="diameters">The diameters (optional).</param>
            <param name="section">The section to extrude along the tube path.</param>
            <param name="sectionXAxis">The initial alignment of the x-axis of the section into the
            3D viewport</param>
            <param name="isTubeClosed">If the tube is closed set to <c>true</c> .</param>
            <param name="isSectionClosed">if set to <c>true</c> [is section closed].</param>
            <param name="frontCap">
            Create a front Cap or not.
            </param>
            <param name="backCap">
            Create a back Cap or not.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.Append(HelixToolkit.SharpDX.Core.MeshBuilder)">
            <summary>
            Appends the specified mesh.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.Append(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Appends the specified points and triangles.
            </summary>
            <param name="positionsToAppend">
            The points to append.
            </param>
            <param name="triangleIndicesToAppend">
            The triangle indices to append.
            </param>
            <param name="normalsToAppend">
            The normal vectors to append.
            </param>
            <param name="textureCoordinatesToAppend">
            The texture coordinates to append.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ChamferCorner(SharpDX.Vector3,System.Double,System.Double,System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Chamfers the specified corner (experimental code).
            </summary>
            <param name="p">
            The corner point.
            </param>
            <param name="d">
            The chamfer distance.
            </param>
            <param name="eps">
            The corner search limit distance.
            </param>
            <param name="chamferPoints">
            If this parameter is provided, the collection will be filled with the generated chamfer points.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.FindCornerNormal(SharpDX.Vector3,System.Double)">
            <summary>
            Finds the average normal to the specified corner (experimental code).
            </summary>
            <param name="p">
            The corner point.
            </param>
            <param name="eps">
            The corner search limit distance.
            </param>
            <returns>
            The normal.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.NoSharedVertices">
            <summary>
            Makes sure no triangles share the same vertex.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scales the positions (and normal vectors).
            </summary>
            <param name="scaleX">
            The X scale factor.
            </param>
            <param name="scaleY">
            The Y scale factor.
            </param>
            <param name="scaleZ">
            The Z scale factor.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.Subdivide4">
            <summary>
            Subdivides each triangle into four sub-triangles.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.SubdivideBarycentric">
            <summary>
            Subdivides each triangle into six triangles. Adds a vertex at the midpoint of each triangle.
            </summary>
            <remarks>
            See <a href="http://en.wikipedia.org/wiki/Barycentric_subdivision">wikipedia</a>.
            </remarks>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.SubdivideLinear(System.Boolean)">
            <summary>
            Performs a linear subdivision of the mesh.
            </summary>
            <param name="barycentric">
            Add a vertex in the center if set to <c>true</c> .
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ToMesh">
            <summary>
            Generate a MeshGeometry3D from the generated Data.
            </summary>
            <returns>The MeshGeometry3D.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshBuilder.ToMeshGeometry3D">
            <summary>
            Converts the geometry to a <see cref="T:HelixToolkit.SharpDX.Core.MeshGeometry3D"/> .        
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshGeometryHelper">
            <summary>
            Provides helper methods for mesh geometries.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.CalculateNormals(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Calculates the normal vectors.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
            <returns>
            Collection of normal vectors.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.CalculateNormals(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Calculates the normal vectors.
            </summary>
            <param name="positions">
            The positions.
            </param>
            <param name="triangleIndices">
            The triangle indices.
            </param>
            <returns>
            Collection of normal vectors.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.FindBorderEdges(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Finds edges that are only connected to one triangle.
            </summary>
            <param name="mesh">
            A mesh geometry.
            </param>
            <returns>
            The edge indices for the edges that are only used by one triangle.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.FindEdges(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Finds all edges in the mesh (each edge is only included once).
            </summary>
            <param name="mesh">
            A mesh geometry.
            </param>
            <returns>
            The edge indices (minimum index first).
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.FindSharpEdges(HelixToolkit.SharpDX.Core.MeshGeometry3D,System.Double)">
            <summary>
            Finds all edges where the angle between adjacent triangle normal vectors.
            is larger than minimumAngle
            </summary>
            <param name="mesh">
            A mesh geometry.
            </param>
            <param name="minimumAngle">
            The minimum angle between the normal vectors of two adjacent triangles (degrees).
            </param>
            <returns>
            The edge indices.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.NoSharedVertices(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Creates a new mesh where no vertices are shared.
            </summary>
            <param name="input">
            The input mesh.
            </param>
            <returns>
            A new mesh.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.Simplify(HelixToolkit.SharpDX.Core.MeshGeometry3D,System.Single)">
            <summary>
            Simplifies the specified mesh.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
            <param name="eps">
            The tolerance.
            </param>
            <returns>
            A simplified mesh.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.Validate(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Validates the specified mesh.
            </summary>
            <param name="mesh">The mesh.</param>
            <returns>Validation report or null if no issues were found.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.Cut(HelixToolkit.SharpDX.Core.MeshGeometry3D,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Cuts the mesh with the specified plane.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
            <param name="plane">
            The plane origin.
            </param>
            <param name="normal">
            The plane normal.
            </param>
            <returns>
            The <see cref="T:HelixToolkit.SharpDX.Core.MeshGeometry3D"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.GetContourSegments(HelixToolkit.SharpDX.Core.MeshGeometry3D,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Gets the contour segments.
            </summary>
            <param name="mesh">
            The mesh.
            </param>
            <param name="plane">
            The plane origin.
            </param>
            <param name="normal">
            The plane normal.
            </param>
            <returns>
            The segments of the contour.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.CombineSegments(System.Collections.Generic.IList{SharpDX.Vector3},System.Single)">
            <summary>
            Combines the segments.
            </summary>
            <param name="segments">
            The segments.
            </param>
            <param name="eps">
            The tolerance.
            </param>
            <returns>
            Enumerated connected contour curves.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.CreateKey(System.UInt32,System.UInt32)">
            <summary>
            Create a 64-bit key from two 32-bit indices
            </summary>
            <param name="i0">
            The i 0.
            </param>
            <param name="i1">
            The i 1.
            </param>
            <returns>
            The create key.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.ReverseKey(System.UInt64,System.UInt32@,System.UInt32@)">
            <summary>
            Extract two 32-bit indices from the 64-bit key
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="i0">
            The i 0.
            </param>
            <param name="i1">
            The i 1.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.FindConnectedSegment(System.Collections.Generic.IList{SharpDX.Vector3},SharpDX.Vector3,System.Single)">
            <summary>
            Finds the nearest connected segment to the specified point.
            </summary>
            <param name="segments">
            The segments.
            </param>
            <param name="point">
            The point.
            </param>
            <param name="eps">
            The tolerance.
            </param>
            <returns>
            The index of the nearest point.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.RemoveIsolatedVertices(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Remove isolated(not connected to any triangles) vertices
            </summary>
            <param name="mesh"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.RemoveIsolatedVertices(System.Collections.Generic.IList{SharpDX.Vector3},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{SharpDX.Vector2},System.Collections.Generic.IList{SharpDX.Vector3},HelixToolkit.SharpDX.Core.Vector3Collection@,HelixToolkit.SharpDX.Core.IntCollection@,HelixToolkit.SharpDX.Core.Vector2Collection@,HelixToolkit.SharpDX.Core.Vector3Collection@)">
            <summary>
            Remove isolated(not connected to any triangles) vertices
            </summary>
            <param name="vertices"></param>
            <param name="triangles"></param>
            <param name="texture"></param>
            <param name="normals"></param>
            <param name="verticesOut"></param>
            <param name="trianglesOut"></param>
            <param name="textureOut"></param>
            <param name="normalOut"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshGeometryHelper.RemoveOutOfRangeTriangles(System.Collections.Generic.IList{System.Int32},System.Int32)">
            <summary>
            
            </summary>
            <param name="triangles"></param>
            <param name="numVerts"></param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MeshSimplification">
            <summary>
            Fast-Quadric-Mesh-Simplification, port from https://github.com/sp4cerat/Fast-Quadric-Mesh-Simplification
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshSimplification.#ctor(HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshSimplification.Simplify(System.Boolean)">
            <summary>
            
            </summary>
            <param name="verbose"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshSimplification.Simplify(System.Int32,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Mesh Simplification using Fast-Quadric-Mesh-Simplification
            </summary>
            <param name="targetCount">Target Number of Triangles</param>
            <param name="aggressive">sharpness to increase the threshold, 5->8 are usually good, more iteration yields higher quality</param>
            <param name="verbose"></param>
            <param name="lossless"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MeshSimplification.GetMesh">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Polygon">
            <summary>
            Represents a 2D polygon.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Polygon.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Polygon.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon.Triangulate">
            <summary>
            Triangulate the polygon by using the sweep line algorithm
            </summary>
            <returns>An index collection.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Polygon3D">
            <summary>
            Represents a 3D polygon.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.Polygon3D.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:HelixToolkit.SharpDX.Core.Polygon3D" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon3D.#ctor(System.Collections.Generic.IList{SharpDX.Vector3})">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.Polygon3D"/> class.
            </summary>
            <param name="pts">
            The PTS.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.Polygon3D.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon3D.Flatten">
            <summary>
            Flattens this polygon.
            </summary>
            <returns>
            The 2D polygon.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon3D.GetNormal">
            <summary>
            Gets the normal of the polygon.
            </summary>
            <returns>
            The normal.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Polygon3D.IsPlanar">
            <summary>
            Determines whether this polygon is planar.
            </summary>
            <returns>
            The is planar.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.SharedFunctions">
            <summary>
            Functions for the Shared Projects to simplify the Code
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.CrossProduct(SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.DotProduct(SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.DotProduct(SharpDX.Vector2@,SharpDX.Vector2@)">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.LengthSquared(SharpDX.Vector3@)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.LengthSquared(SharpDX.Vector2@)">
            <summary>
            Lengthes the squared.
            </summary>
            <param name="vector">The vector.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.Length(SharpDX.Vector3@)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.ToVector3D(SharpDX.Vector3)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SharedFunctions.LineIntersection(SharpDX.Plane,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Finds the intersection between the plane and a line.
            </summary>
            <param name="plane">
            The plane.
            </param>
            <param name="la">
            The first point defining the line.
            </param>
            <param name="lb">
            The second point defining the line.
            </param>
            <returns>
            The intersection point.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator">
            <summary>
            Triangulate a simple Polygon with the Sweep-Line Algorithm
            </summary>
            <remarks>
            Based on http://www.cs.uu.nl/docs/vakken/ga/slides3.pdf
            References
            https://www.cs.ucsb.edu/~suri/cs235/Triangulation.pdf
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.Epsilon">
            <summary>
            Range Extension when searching for the Helper and Edge
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.Triangulate(System.Collections.Generic.IList{SharpDX.Vector2},System.Collections.Generic.List{System.Collections.Generic.List{SharpDX.Vector2}})">
            <summary>
            Perform the Triangulation of the Input.
            </summary>
            <param name="polygon">The Input Polygon</param>
            <param name="holes">The Input Polygon</param>
            <returns>List of Indices representing the Triangulation of the Polygon</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.TriangulateMonotone(HelixToolkit.SharpDX.Core.PolygonData)">
            <summary>
            Triangulate the y-Monotone Polygons.
            </summary>
            <param name="monoton">The y-Monotone Polygon to triangle</param>
            <returns>Index-List of Polygon Points (Indices from the original Polygon)</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.CalculateDiagonals(System.Collections.Generic.List{HelixToolkit.SharpDX.Core.PolygonPoint},System.Boolean)">
            <summary>
            Calculate the Diagonals to add inside the Polygon.
            </summary>
            <param name="events">The Events in sorted Form</param>
            <param name="sweepDown">True in the first Stage (sweeping down), false in the following Stages (sweeping up)</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.SplitIntoPolygons(HelixToolkit.SharpDX.Core.PolygonData,System.Collections.Generic.List{System.Tuple{System.Int32,System.Int32}})">
            <summary>
            Split Polygon into subpolagons using the calculated Diagonals
            </summary>
            <param name="poly">The Base-Polygon</param>
            <param name="diagonals">The Split-Diagonals</param>
            <returns>List of Subpolygons</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.BestEdge(HelixToolkit.SharpDX.Core.PolygonPoint,HelixToolkit.SharpDX.Core.PolygonEdge,System.Collections.Generic.List{HelixToolkit.SharpDX.Core.PolygonEdge})">
            <summary>
            For a Point, last used Edge and possible Edges, retrieve the best next Edge
            </summary>
            <param name="point">The current Point</param>
            <param name="lastEdge">The last used Edge</param>
            <param name="possibleEdges">The possible next Edges</param>
            <returns>Best next Edge</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.SweepLinePolygonTriangulator.IsCCW(System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Calculates the Orientation of a Polygon by usings it's (double-) Area as an Indicator.
            </summary>
            <param name="polygon">The Polygon.</param>
            <returns>True if the Polygon is present in a CCW manner.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PolygonPointClass">
            <summary>
            Enumeration of PolygonPoint - Classes
            </summary>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StatusHelper">
            <summary>
            Helper Class that is used in the calculation Process of the Diagonals.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StatusHelper.EdgesHelpers">
            <summary>
            List of StatusHelperElements that are currently present at the Sweeper's Position
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StatusHelper.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StatusHelper.Add(HelixToolkit.SharpDX.Core.StatusHelperElement)">
            <summary>
            Adds a StatusHelperElement to the List
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StatusHelper.Remove(HelixToolkit.SharpDX.Core.PolygonEdge)">
            <summary>
            Removes all StatusHelperElements with a specific Edge
            </summary>
            <param name="edge"></param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StatusHelper.SearchLeft(HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Searches the nearest StatusHelperElement from the given Point
            </summary>
            <param name="point">The Point to search a StatusHelperElement for</param>
            <returns>The nearest StatusHelperElement that is positioned left of the Poin</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.StatusHelperElement">
            <summary>
            Helper Class that is used in the calculation Process of the Diagonals.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StatusHelperElement.Edge">
            <summary>
            The Edge of the StatusHelperElement
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StatusHelperElement.Helper">
            <summary>
            The Helper of the Edge is a Polygon Point
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.StatusHelperElement.mFactor">
            <summary>
            Factor used for x-Value Calculation
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StatusHelperElement.Factor">
            <summary>
            Accessor for the Factor
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.StatusHelperElement.MinX">
            <summary>
            Used to early-skip the Search for the right Status and Helper
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.StatusHelperElement.#ctor(HelixToolkit.SharpDX.Core.PolygonEdge,HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Constructor taking an Edge and a Helper
            </summary>
            <param name="edge">The Edge of the StatusHelperElement</param>
            <param name="point">The Helper for the Edge of the StatusHelperElement</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PolygonPoint">
            <summary>
            Helper Class for the PolygonData Object.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonPoint.mPoint">
            <summary>
            The actual Point of this PolygonPoint
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.Point">
            <summary>
            Accessor for the Point-Data
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.X">
            <summary>
            Accessor for the X-Coordinate of the Point
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.Y">
            <summary>
            Accessor for the Y-Coordinate of the Point
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonPoint.mEdgeOne">
            <summary>
            The "incoming" Edge of this PolygonPoint
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.EdgeOne">
            <summary>
            Accessor for the incoming Edge
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonPoint.mEdgeTwo">
            <summary>
            The "outgoing" Edge of this PolygonPoint
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.EdgeTwo">
            <summary>
            Accessor for the outgoing Edge
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonPoint.mIndex">
            <summary>
            The Index of this Point in the original Polygon
            that needs to be triangulated
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.Index">
            <summary>
            Accessor for the iriginal Point-Index
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.Last">
            <summary>
            The "last" neighboring Point, which is connected throught the incoming Edge
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonPoint.Next">
            <summary>
            The "next" neighboring Point, which is connected throught the outgoing Edge
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.op_LessThan(HelixToolkit.SharpDX.Core.PolygonPoint,HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Comparison Operator, that is used to determine the Class of the PolygonPoints
            </summary>
            <param name="first">The first PolygonPoint</param>
            <param name="second">The second PolygonPoint</param>
            <returns>Returns true if the first PolygonPoint is smaller, compared to the second PolygonPoint, false otherwise</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.op_GreaterThan(HelixToolkit.SharpDX.Core.PolygonPoint,HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Comparison Operator, that is used to determine the Class of the PolygonPoints
            </summary>
            <param name="first">The first PolygonPoint</param>
            <param name="second">The second PolygonPoint</param>
            <returns>Returns true if the first PolygonPoint is bigger, compared to the second PolygonPoint, false otherwise</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.#ctor(SharpDX.Vector2)">
            <summary>
            Constructor using a Point
            </summary>
            <param name="p">The Point-Data to use</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.PointClass(System.Boolean)">
            <summary>
            Detrmines the Class of the PolygonPoint, depending on the sweeping Direction
            </summary>
            <param name="reverse">The Sweeping direction, top-to-bottom if false, bottom-to-top otherwise</param>
            <returns>The Class of the PolygonPoint</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.isConvexPoint">
            <summary>
            Calculates for a Point, if it is a convex Point or not
            (the assumption is, that we are dealing with a CCW Polygon orientation!)
            </summary>
            <returns>Returns true, if convex, false if concave (or "reflex" Vertex)</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.ToString">
            <summary>
            Override the ToString (for Debugging Purposes)
            </summary>
            <returns>String representing this Point</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonPoint.CompareTo(HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Comparison of two Points, used to sort the Polygons from top to bottom (left to right)
            </summary>
            <param name="second">Other Point to compare to</param>
            <returns>-1 if this Point is bigger, 0 if the same, 1 if smaller</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PolygonEdge">
            <summary>
            Helper Class for the PolygonData Object.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonEdge.mPointOne">
            <summary>
            The "starting" Point of this Edge
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonEdge.PointOne">
            <summary>
            Accessor to the Startpoint of this Edge
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonEdge.mPointTwo">
            <summary>
            The "ending" Point of this Edge
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonEdge.PointTwo">
            <summary>
            Accessor to the Endpoint of this Edge
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonEdge.Last">
            <summary>
            The "last" neighboring Edge, which both share the Startpoint of this Edge
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonEdge.Next">
            <summary>
            The "next" neighboring Edge, which both share the Endpoint of this Edge
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonEdge.#ctor(HelixToolkit.SharpDX.Core.PolygonPoint,HelixToolkit.SharpDX.Core.PolygonPoint)">
            <summary>
            Constructor that takes both Points of the Edge
            </summary>
            <param name="one">The Startpoint</param>
            <param name="two">The Endpoint</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonEdge.ToString">
            <summary>
            Override the ToString (for Debugging Purposes)
            </summary>
            <returns>String representing this Edge</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.PolygonData">
            <summary>
            Helper Class for the Polygon-Triangulation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonData.mPoints">
            <summary>
            The List of Polygonpoints that define this Polygon
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonData.Points">
            <summary>
            Accessor to the List of PolygonPoints
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonData.HasHoles">
            <summary>
            Are there Holes present
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonData.mHoles">
            <summary>
            The Holes of the Polygon
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.PolygonData.Holes">
            <summary>
            Access to the Holes
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.PolygonData.mNumBoundaryPoints">
            <summary>
            Number of initial Points on the Polygon Boundary
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonData.#ctor(System.Collections.Generic.List{SharpDX.Vector2},System.Collections.Generic.List{System.Int32})">
            <summary>
            Constructor that uses a List of Points and an optional List of Point-Indices
            </summary>
            <param name="points">The Polygon-Defining Points</param>
            <param name="indices">Optional List of Point-Indices</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonData.#ctor(System.Collections.Generic.List{HelixToolkit.SharpDX.Core.PolygonPoint})">
            <summary>
            Constructor that takes a List of PolygonPoints
            Calls the first Constructor by splitting the Input-Information (Points and Indices)
            </summary>
            <param name="points">The PolygonPoints</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.PolygonData.AddHole(System.Collections.Generic.List{SharpDX.Vector2})">
            <summary>
            Add Points of a Hole to the PolygonData
            </summary>
            <param name="points">The Points that define the Hole in the Polygon</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.HelixToolkitException">
            <summary>
            Represents errors that occurs in the Helix 3D Toolkit.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.HelixToolkitException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.HelixToolkitException"/> class.
            </summary>
            <param name="formatString">
            The format string.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ContourHelper">
            <summary>
            Provides functionality to calculate a contour slice through a 3 vertex facet.(Modified from HelixToolkit.Wpf version)
            </summary>
            <remarks>
            See <a href="http://paulbourke.net/papers/conrec/">CONREC</a> for further information.
            </remarks>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ResultIndices">
            <summary>
            Provides the indices for the various <see cref="T:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult"/> cases.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.a">
            <summary>
            The parameter 'a' of the plane equation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.b">
            <summary>
            The parameter 'b' of the plane equation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.c">
            <summary>
            The parameter 'c' of the plane equation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.d">
            <summary>
            The parameter 'd' of the plane equation.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.sides">
            <summary>
            The sides.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.indices">
            <summary>
            The indices.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.meshPositions">
            <summary>
            The original mesh positions.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.meshNormals">
            <summary>
            The original mesh normal vectors.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.meshTextureCoordinates">
            <summary>
            The original mesh texture coordinates.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.normals">
            <summary>
            The normal vectors.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.textures">
            <summary>
            The texture coordinates.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.positionCount">
            <summary>
            The position count.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.#ctor(SharpDX.Vector3,SharpDX.Vector3,HelixToolkit.SharpDX.Core.MeshGeometry3D)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.ContourHelper" /> class.
            </summary>
            <param name="planeOrigin">The plane origin.</param>
            <param name="planeNormal">The plane normal.</param>
            <param name="originalMesh">The original mesh.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult">
            <summary>
            The contour facet result.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.None">
            <summary>
            All of the points fall above the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.ZeroOnly">
            <summary>
            Only the 0th point falls below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.OneAndTwo">
            <summary>
            The 1st and 2nd points fall below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.OneOnly">
            <summary>
            Only the 1st point falls below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.ZeroAndTwo">
            <summary>
            The 0th and 2nd points fall below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.TwoOnly">
            <summary>
            Only the second point falls below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.ZeroAndOne">
            <summary>
            The 0th and 1st points fall below the contour plane.
            </summary>
        </member>
        <member name="F:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult.All">
            <summary>
            All of the points fall below the contour plane.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacet(System.Int32,System.Int32,System.Int32,SharpDX.Vector3[]@,SharpDX.Vector3[]@,SharpDX.Vector2[]@,System.Int32[]@)">
            <summary>
            Create a contour slice through a 3 vertex facet.
            </summary>
            <param name="index0">The 0th point index.</param>
            <param name="index1">The 1st point index.</param>
            <param name="index2">The 2nd point index.</param>
            <param name="newPositions">Any new positions that are created, when the contour plane slices through the vertex.</param>
            <param name="newNormals">Any new normal vectors that are created, when the contour plane slices through the vertex.</param>
            <param name="newTextureCoordinates">Any new texture coordinates that are created, when the contour plane slices through the vertex.</param>
            <param name="triangleIndices">Triangle indices for the triangle(s) above the plane.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.CalculatePoint(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates a new point coordinate.
            </summary>
            <param name="firstPoint">
            The first point coordinate.
            </param>
            <param name="secondPoint">
            The second point coordinate.
            </param>
            <param name="firstSide">
            The first side.
            </param>
            <param name="secondSide">
            The second side.
            </param>
            <returns>The new coordinate.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.GetContourFacet">
            <summary>
            Gets the <see cref="T:HelixToolkit.SharpDX.Core.ContourHelper.ContourFacetResult"/> for the current facet.
            </summary>
            <returns>a facet result.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.SetData(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the facet data and calculates the <see cref="F:HelixToolkit.SharpDX.Core.ContourHelper.sides"/> values from the specified triangle indices. 
            </summary>
            <param name="index0">The first triangle index of the facet.</param>
            <param name="index1">The second triangle index of the facet.</param>
            <param name="index2">The third triangle index of the facet.</param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.CreateNewPosition(System.Int32,System.Int32)">
            <summary>
            Calculates the position at the plane intersection for the side specified by two triangle indices.
            </summary>
            <param name="index0">The first index.</param>
            <param name="index1">The second index.</param>
            <returns>The interpolated position.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.CreateNewNormal(System.Int32,System.Int32)">
            <summary>
            Calculates the normal at the plane intersection for the side specified by two triangle indices.
            </summary>
            <param name="index0">The first index.</param>
            <param name="index1">The second index.</param>
            <returns>The interpolated vector.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.CreateNewTexture(System.Int32,System.Int32)">
            <summary>
            Calculates the texture coordinate at the plane intersection for the side specified by two triangle indices.
            </summary>
            <param name="index0">The first index.</param>
            <param name="index1">The second index.</param>
            <returns>The interpolated texture coordinate.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.IsSideAlone(System.Int32)">
            <summary>
            Determines whether the vertex at the specified index is at the opposite side of the other two vertices.
            </summary>
            <param name="index">The index.</param>
            <returns><c>true</c> if the vertex is on its own side.</returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.ContourHelper.AllSidesBelowContour">
            <summary>
            Determines whether all sides of the facet are below the contour.
            </summary>
            <returns><c>true</c> if all sides are below the contour.</returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3">
            <summary>
            A double key dictionary.
            </summary>
            <typeparam name="K">
            The first key type.
            </typeparam>
            <typeparam name="T">
            The second key type.
            </typeparam>
            <typeparam name="V">
            The value type.
            </typeparam>
            <remarks>
            See http://noocyte.wordpress.com/2008/02/18/double-key-dictionary/
            A Remove method was added.
            </remarks>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.OuterDictionary">
            <summary>
            Gets or sets OuterDictionary.
            </summary>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Item(`0,`1)">
            <summary>
            Gets or sets the value with the specified indices.
            </summary>
            <value></value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Clear">
            <summary>
            Clears this dictionary.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Add(`0,`1,`2)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key1">
            The key1.
            </param>
            <param name="key2">
            The key2.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.ContainsKey(`0,`1)">
            <summary>
            Determines whether the specified dictionary contains the key.
            </summary>
            <param name="index1">
            The index1.
            </param>
            <param name="index2">
            The index2.
            </param>
            <returns>
            <c>true</c> if the specified index1 contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Equals(HelixToolkit.SharpDX.Core.DoubleKeyDictionary{`0,`1,`2})">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">
            The other.
            </param>
            <returns>
            The equals.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Remove(`0,`1)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key1">
            The key1.
            </param>
            <param name="key2">
            The key2.
            </param>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.TryGetValue(`0,`1,`2@)">
            <summary>
            
            </summary>
            <param name="key1"></param>
            <param name="key2"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyDictionary`3.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3">
            <summary>
            Represents two keys and a value.
            </summary>
            <typeparam name="K">
            First key type.
            </typeparam>
            <typeparam name="T">
            Second key type.
            </typeparam>
            <typeparam name="V">
            Value type.
            </typeparam>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3"/> class.
            </summary>
            <param name="key1">
            The key1.
            </param>
            <param name="key2">
            The key2.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3.Key1">
            <summary>
            Gets or sets the key1.
            </summary>
            <value>The key1.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3.Key2">
            <summary>
            Gets or sets the key2.
            </summary>
            <value>The key2.</value>
        </member>
        <member name="P:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.DoubleKeyPairValue`3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.MathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.MathHelper.GenerateNoiseMap(System.Int32,System.Int32,System.Int32,System.Single[]@)">
            <summary>
            Generates the noise map.
            From https://stackoverflow.com/questions/8659351/2d-perlin-noise
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="result">The result.</param>
            <param name="octaves">The octaves.</param>
        </member>
        <member name="T:HelixToolkit.SharpDX.Core.Noise2d">
            <summary>
            implements improved Perlin noise in 2D. 
            Transcribed from http://www.siafoo.net/snippet/144?nolinenos#perlin2003
            From StackOverflow: https://stackoverflow.com/questions/8659351/2d-perlin-noise
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Noise2d.Reseed">
            <summary>
            generate a new permutation.
            </summary>
        </member>
        <member name="M:HelixToolkit.SharpDX.Core.Noise2d.Noise(System.Single,System.Single)">
            <summary>
            Noises the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.CuttingEarsTriangulator">
            <summary>
            Provides a cutting ears triangulation algorithm for simple polygons with no holes. O(n^2)
            </summary>
            <remarks>
            Based on <a href="http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml">code</a>
            References
            <a href="http://en.wikipedia.org/wiki/Polygon_triangulation"></a>
            <a href="http://computacion.cs.cinvestav.mx/~anzures/geom/triangulation.php"></a>
            <a href="http://www.codeproject.com/KB/recipes/cspolygontriangulation.aspx"></a>
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.CuttingEarsTriangulator.Epsilon">
            <summary>
            The epsilon.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.CuttingEarsTriangulator.Triangulate(System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Triangulate a polygon using the cutting ears algorithm.
            </summary>
            <remarks>
            The algorithm does not support holes.
            </remarks>
            <param name="contour">
            the polygon contour
            </param>
            <returns>
            collection of triangle points
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.CuttingEarsTriangulator.Area(System.Collections.Generic.IList{SharpDX.Vector2})">
            <summary>
            Calculates the area.
            </summary>
            <param name="contour">The contour.</param>
            <returns>The area.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.CuttingEarsTriangulator.InsideTriangle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Decide if point (Px,Py) is inside triangle defined by (Ax,Ay) (Bx,By) (Cx,Cy).
            </summary>
            <param name="Ax">
            The ax.
            </param>
            <param name="Ay">
            The ay.
            </param>
            <param name="Bx">
            The bx.
            </param>
            <param name="By">
            The by.
            </param>
            <param name="Cx">
            The cx.
            </param>
            <param name="Cy">
            The cy.
            </param>
            <param name="Px">
            The px.
            </param>
            <param name="Py">
            The py.
            </param>
            <returns>
            The inside triangle.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.CuttingEarsTriangulator.Snip(System.Collections.Generic.IList{SharpDX.Vector2},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            The snip.
            </summary>
            <param name="contour">The contour.</param>
            <param name="u">The u.</param>
            <param name="v">The v.</param>
            <param name="w">The w.</param>
            <param name="n">The n.</param>
            <param name="V">The v.</param>
            <returns>The snip.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Component">
            <summary>
            A disposable component base class.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Component.DisposeCollector">
            <summary>
            Gets or sets the disposables.
            </summary>
            <value>The disposables.</value>
        </member>
        <member name="M:SharpDX.Toolkit.Component.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Component"/> class.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Component.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Component" /> class with an immutable name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:SharpDX.Toolkit.Component.IsAttached">
            <summary>
            Gets or sets a value indicating whether this instance is attached to a collector.
            </summary>
            <value>
            	<c>true</c> if this instance is attached to a collector; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:SharpDX.Toolkit.Component.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:SharpDX.Toolkit.Component.IsDisposing">
            <summary>
            
            </summary>
        </member>
        <member name="E:SharpDX.Toolkit.Component.Disposing">
            <summary>
            Occurs when when Dispose is called.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Component.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Component.Dispose(System.Boolean)">
            <summary>
            Disposes of object resources.
            </summary>
            <param name="disposeManagedResources">If true, managed resources should be
            disposed of in addition to unmanaged resources.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Component.ToDispose``1(``0)">
            <summary>
            Adds a disposable object to the list of the objects to dispose.
            </summary>
            <param name="toDisposeArg">To dispose.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Component.RemoveAndDispose``1(``0@)">
            <summary>
            Dispose a disposable object and set the reference to null. Removes this object from the ToDispose list.
            </summary>
            <param name="objectToDispose">Object to dispose.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Component.RemoveToDispose``1(``0)">
            <summary>
            Removes a disposable object to the list of the objects to dispose.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toDisposeArg">To dispose.</param>
        </member>
        <member name="T:SharpDX.Toolkit.ComponentBase">
            <summary>
            A lightweight Component base class.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.ComponentBase.name">
            <summary>
            Occurs while this component is disposing and before it is disposed.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.ComponentBase.isNameImmutable">
            <summary>
            Gets or sets a value indicating whether the name of this instance is immutable.
            </summary>
            <value><c>true</c> if this instance is name immutable; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SharpDX.Toolkit.ComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.ComponentBase" /> class with a mutable name.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.ComponentBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.ComponentBase" /> class with an immutable name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:SharpDX.Toolkit.ComponentBase.Name">
            <summary>
            Gets the name of this component.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:SharpDX.Toolkit.ComponentBase.Tag">
            <summary>
            Gets or sets the tag associated to this object.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="E:SharpDX.Toolkit.ComponentBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.ComponentBase.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DDS.MagicHeader">
            <summary>
            Magic code to identify DDS header
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDS.PixelFormat">
            <summary>
            Internal structure used to describe a DDS pixel format.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDS.PixelFormat.#ctor(SharpDX.Toolkit.Graphics.DDS.PixelFormatFlags,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.DDS.PixelFormat" /> struct.
            </summary>
            <param name="flags">The flags.</param>
            <param name="fourCC">The four CC.</param>
            <param name="rgbBitCount">The RGB bit count.</param>
            <param name="rBitMask">The r bit mask.</param>
            <param name="gBitMask">The g bit mask.</param>
            <param name="bBitMask">The b bit mask.</param>
            <param name="aBitMask">A bit mask.</param>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDS.PixelFormatFlags">
            <summary>
            PixelFormat flags.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDS.HeaderFlags">
            <summary>
            DDS Header flags.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDS.SurfaceFlags">
            <summary>
            DDS Surface flags.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDS.CubemapFlags">
            <summary>
            DDS Cubemap flags.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DDSFlags">
            <summary>
            Flags used by <see cref="M:SharpDX.Toolkit.Graphics.DDSHelper.LoadFromDDSMemory(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.LegacyMap.#ctor(SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.DDSHelper.ConversionFlags,SharpDX.Toolkit.Graphics.DDS.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.DDSHelper.LegacyMap" /> struct.
            </summary>
            <param name="format">The format.</param>
            <param name="conversionFlags">The conversion flags.</param>
            <param name="pixelFormat">The pixel format.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.DecodeDDSHeader(System.IntPtr,System.Int32,SharpDX.Toolkit.Graphics.DDSFlags,SharpDX.Toolkit.Graphics.ImageDescription@,SharpDX.Toolkit.Graphics.DDSHelper.ConversionFlags@)">
            <summary>
            Decodes DDS header including optional DX10 extended header
            </summary>
            <param name="headerPtr">Pointer to the DDS header.</param>
            <param name="size">Size of the DDS content.</param>
            <param name="flags">Flags used for decoding the DDS header.</param>
            <param name="description">Output texture description.</param>
            <param name="convFlags">Output conversion flags.</param>
            <exception cref="T:System.ArgumentException">If the argument headerPtr is null</exception>
            <exception cref="T:System.InvalidOperationException">If the DDS header contains invalid data.</exception>
            <returns>True if the decoding is successful, false if this is not a DDS header.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.EncodeDDSHeader(SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.DDSFlags,System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            Encodes DDS file header (magic value, header, optional DX10 extended header)
            </summary>
            <param name="flags">Flags used for decoding the DDS header.</param>
            <param name="description">Output texture description.</param>
            <param name="pDestination">Pointer to the DDS output header. Can be set to IntPtr.Zero to calculated the required bytes.</param>
            <param name="maxsize">The maximum size of the destination buffer.</param>
            <param name="required">Output the number of bytes required to write the DDS header.</param>
            <exception cref="T:System.ArgumentException">If the argument headerPtr is null</exception>
            <exception cref="T:System.InvalidOperationException">If the DDS header contains invalid data.</exception>
            <returns>True if the decoding is successful, false if this is not a DDS header.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.LegacyExpandScanline(System.IntPtr,System.Int32,SharpDX.DXGI.Format,System.IntPtr,System.Int32,SharpDX.Toolkit.Graphics.DDSHelper.TEXP_LEGACY_FORMAT,System.Int32*,SharpDX.Toolkit.Graphics.DDSHelper.ScanlineFlags)">
            <summary>
            Converts an image row with optional clearing of alpha value to 1.0
            </summary>
            <param name="pDestination"></param>
            <param name="outSize"></param>
            <param name="outFormat"></param>
            <param name="pSource"></param>
            <param name="inSize"></param>
            <param name="inFormat"></param>
            <param name="pal8"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.LoadFromDDSMemory(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Load a DDS file in memory
            </summary>
            <param name="pSource">Source buffer</param>
            <param name="size">Size of the DDS texture.</param>
            <param name="makeACopy">Whether or not to make a copy of the DDS</param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.CreateImageFromDDS(System.IntPtr,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.Image.PitchFlags,SharpDX.Toolkit.Graphics.DDSHelper.ConversionFlags,System.Int32*,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Converts or copies image data from pPixels into scratch image data
            </summary>
            <param name="pDDS"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <param name="metadata"></param>
            <param name="cpFlags"></param>
            <param name="convFlags"></param>
            <param name="pal8"></param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.ExpandScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.DDSHelper.ScanlineFlags)">
            <summary>
            Converts an image row with optional clearing of alpha value to 1.0
            </summary>
            <param name="pDestination"></param>
            <param name="outSize"></param>
            <param name="pSource"></param>
            <param name="inSize"></param>
            <param name="inFormat"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.CopyScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.DDSHelper.ScanlineFlags)">
            <summary>
            Copies an image row with optional clearing of alpha value to 1.0.
            </summary>
            <remarks>
            This method can be used in place as well, otherwise copies the image row unmodified.
            </remarks>
            <param name="pDestination">The destination buffer.</param>
            <param name="outSize">The destination size.</param>
            <param name="pSource">The source buffer.</param>
            <param name="inSize">The source size.</param>
            <param name="format">The <see cref="T:SharpDX.DXGI.Format"/> of the source scanline.</param>
            <param name="flags">Scanline flags used when copying the scanline.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DDSHelper.SwizzleScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.DDSHelper.ScanlineFlags)">
            <summary>
            Swizzles (RGB &lt;-&gt; BGR) an image row with optional clearing of alpha value to 1.0.
            </summary>
            <param name="pDestination">The destination buffer.</param>
            <param name="outSize">The destination size.</param>
            <param name="pSource">The source buffer.</param>
            <param name="inSize">The source size.</param>
            <param name="format">The <see cref="T:SharpDX.DXGI.Format"/> of the source scanline.</param>
            <param name="flags">Scanline flags used when copying the scanline.</param>
            <remarks>
            This method can be used in place as well, otherwise copies the image row unmodified.
            </remarks>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DepthFormat">
            <summary>
            Defines the format of data in a depth-stencil buffer.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthFormat.None">
            <summary>
            No depth stencil buffer.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthFormat.Depth16">
            <summary>
            A buffer that contains 16-bits of depth data.
            </summary>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT_D16_UNORM</unmanaged>	
            <unmanaged-short>DXGI_FORMAT_D16_UNORM</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthFormat.Depth24Stencil8">
            <summary>
            A 32 bit buffer that contains 24 bits of depth data and 8 bits of stencil data.
            </summary>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT_D24_UNORM_S8_UINT</unmanaged>	
            <unmanaged-short>DXGI_FORMAT_D24_UNORM_S8_UINT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthFormat.Depth32">
            <summary>
            A buffer that contains 32-bits of depth data.
            </summary>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT_D32_FLOAT</unmanaged>	
            <unmanaged-short>DXGI_FORMAT_D32_FLOAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthFormat.Depth32Stencil8X24">
            <summary>
            A double 32 bit buffer that contains 32 bits of depth data and 8 bits padded with 24 zero bits of stencil data.
            </summary>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT_D32_FLOAT_S8X24_UINT</unmanaged>	
            <unmanaged-short>DXGI_FORMAT_D32_FLOAT_S8X24_UINT</unmanaged-short>	
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DepthStencilBuffer">
            <summary>
            A DepthStencilBuffer front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <remarks>
            This class instantiates a <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> with the binding flags <see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/>.
            </remarks>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthFormat">
            <summary>
            Gets the <see cref="T:SharpDX.Toolkit.Graphics.DepthFormat"/> of this depth stencil buffer.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.HasStencil">
            <summary>
            Gets a boolean value indicating if this buffer is supporting stencil.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.HasReadOnlyView">
            <summary>
            Gets a boolean value indicating if this buffer is supporting read-only view.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthStencilView">
            <summary>
            Gets the selector for a <see cref="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthStencilView"/>
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.DepthStencilBuffer.ReadOnlyView">
            <summary>
            Gets a a read-only <see cref="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthStencilView"/>.
            </summary>
            <remarks>
            This value can be null if not supported by hardware (minimum features level is 11.0)
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.InitializeViewsDelayed">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.GetDefaultViewFormat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.op_Implicit(SharpDX.Toolkit.Graphics.DepthStencilBuffer)~SharpDX.Direct3D11.DepthStencilView">
            <summary>
            DepthStencilView casting operator.
            </summary>
            <param name="buffer">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.GetDepthStencilView(SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a specific <see cref="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthStencilView" /> from this texture.
            </summary>
            <param name="viewType">Type of the view slice.</param>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <param name="readOnlyView">Indicates if the view is read-only.</param>
            <returns>A <see cref="F:SharpDX.Toolkit.Graphics.DepthStencilBuffer.DepthStencilView" /></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.DepthStencilBuffer.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.DepthStencilViewSelector">
            <summary>
            Used by <see cref="T:SharpDX.Toolkit.Graphics.DepthStencilBuffer"/> to provide a selector to a <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.DepthStencilViewSelector.Item(SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a specific <see cref="T:SharpDX.Direct3D11.DepthStencilView" /> from this texture.
            </summary>
            <param name="viewType">Type of the view slice.</param>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <param name="readOnlyView">Indicates if this view is read-only.</param>
            <returns>An <see cref="T:SharpDX.Direct3D11.DepthStencilView" /></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.GraphicsResource">
            <summary>
            Base class for all <see cref="T:SharpDX.Toolkit.Graphics.GraphicsResource"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.GraphicsResource.GraphicsDevice">
            <summary>
            Device used to create this instance.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.GraphicsResource.Resource">
            <summary>
            The attached Direct3D11 resource to this instance.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
            
            </summary>
            <param name="graphicsDevice"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.#ctor(SharpDX.Direct3D11.Device,System.String)">
            <summary>
            
            </summary>
            <param name="graphicsDevice"></param>
            <param name="name"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.Initialize(SharpDX.Direct3D11.DeviceChild)">
            <summary>
            Initializes the specified device local.
            </summary>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.op_Implicit(SharpDX.Toolkit.Graphics.GraphicsResource)~SharpDX.Direct3D11.Resource">
            <summary>
            Implicit casting operator to <see cref="T:SharpDX.Direct3D11.Resource"/>
            </summary>
            <param name="from">The GraphicsResource to convert from.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.GetCpuAccessFlagsFromUsage(SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Gets the CPU access flags from the <see cref="T:SharpDX.Direct3D11.ResourceUsage"/>.
            </summary>
            <param name="usage">The usage.</param>
            <returns>The CPU access flags</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.GraphicsResource.OnPropertyChanged(System.String)">
            <summary>
            Called when name changed for this component.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Image">
            <summary>
            Provides method to instantiate an image 1D/2D/3D supporting TextureArray and mipmaps on the CPU or to load/save an image from the disk.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Image.ImageLoadDelegate">
            <summary>
            
            </summary>
            <param name="dataPointer"></param>
            <param name="dataSize"></param>
            <param name="makeACopy"></param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.pixelBuffers">
            <summary>
            Pixel buffers.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.pixelBufferArray">
            <summary>
            Provides access to all pixel buffers.
            </summary>
            <remarks>
            For Texture3D, each z slice of the Texture3D has a pixelBufferArray * by the number of mipmaps.
            For other textures, there is Description.MipLevels * Description.ArraySize pixel buffers.
            </remarks>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.totalSizeInBytes">
            <summary>
            Gets the total number of bytes occupied by this image in memory.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.buffer">
            <summary>
            Pointer to the buffer.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.bufferIsDisposable">
            <summary>
            True if the buffer must be disposed.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.handle">
            <summary>
            Handle != null if the buffer is a pinned managed object on the LOH (Large Object Heap).
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Image.Description">
            <summary>
            Description of this image.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.#ctor(SharpDX.Toolkit.Graphics.ImageDescription,System.IntPtr,System.Int32,System.Nullable{System.Runtime.InteropServices.GCHandle},System.Boolean,SharpDX.Toolkit.Graphics.Image.PitchFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Image" /> class.
            </summary>
            <param name="description">The image description.</param>
            <param name="dataPointer">The pointer to the data buffer.</param>
            <param name="offset">The offset from the beginning of the data buffer.</param>
            <param name="handle">The handle (optional).</param>
            <param name="bufferIsDisposable">if set to <c>true</c> [buffer is disposable].</param>
            <param name="pitchFlags"></param>
            <exception cref="T:System.InvalidOperationException">If the format is invalid, or width/height/depth/arraysize is invalid with respect to the dimension.</exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposeManagedResources"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.GetMipMapDescription(System.Int32)">
            <summary>
            Gets the mipmap description of this instance for the specified mipmap level.
            </summary>
            <param name="mipmap">The mipmap.</param>
            <returns>A description of a particular mipmap for this texture.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.GetPixelBuffer(System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayOrZSliceIndex">For 3D image, the parameter is the Z slice, otherwise it is an index into the texture array.</param>
            <param name="mipmap">The mipmap.</param>
            <returns>A <see cref="F:SharpDX.Toolkit.Graphics.Image.pixelBufferArray"/>.</returns>
            <exception cref="T:System.ArgumentException">If arrayOrZSliceIndex or mipmap are out of range.</exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.GetPixelBuffer(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayIndex">Index into the texture array. Must be set to 0 for 3D images.</param>
            <param name="zIndex">Z index for 3D image. Must be set to 0 for all 1D/2D images.</param>
            <param name="mipmap">The mipmap.</param>
            <returns>A <see cref="F:SharpDX.Toolkit.Graphics.Image.pixelBufferArray"/>.</returns>
            <exception cref="T:System.ArgumentException">If arrayIndex, zIndex or mipmap are out of range.</exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Register(SharpDX.Toolkit.Graphics.ImageFileType,SharpDX.Toolkit.Graphics.Image.ImageLoadDelegate,SharpDX.Toolkit.Graphics.Image.ImageSaveDelegate)">
            <summary>
            Registers a loader/saver for a specified image file type.
            </summary>
            <param name="type">The file type (use integer and explicit casting to <see cref="T:SharpDX.Toolkit.Graphics.ImageFileType"/> to register other file format.</param>
            <param name="loader">The loader delegate (can be null).</param>
            <param name="saver">The saver delegate (can be null).</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Image.DataPointer">
            <summary>
            Gets a pointer to the image buffer in memory.
            </summary>
            <value>A pointer to the image buffer in memory.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Image.PixelBuffer">
            <summary>
            Provides access to all pixel buffers.
            </summary>
            <remarks>
            For Texture3D, each z slice of the Texture3D has a pixelBufferArray * by the number of mipmaps.
            For other textures, there is Description.MipLevels * Description.ArraySize pixel buffers.
            </remarks>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Image.TotalSizeInBytes">
            <summary>
            Gets the total number of bytes occupied by this image in memory.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.ToDataBox">
            <summary>
            Gets the databox from this image.
            </summary>
            <returns>The databox of this image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.ComputeDataBox">
            <summary>
            Gets the databox from this image.
            </summary>
            <returns>The databox of this image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New(SharpDX.Toolkit.Graphics.ImageDescription)">
            <summary>
            Creates a new instance of <see cref="T:SharpDX.Toolkit.Graphics.Image"/> from an image description.
            </summary>
            <param name="description">The image description.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New1D(System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.Int32)">
            <summary>
            Creates a new instance of a 1D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New2D(System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.Int32)">
            <summary>
            Creates a new instance of a 2D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.NewCube(System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat)">
            <summary>
            Creates a new instance of a Cube <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New3D(System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat)">
            <summary>
            Creates a new instance of a 3D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New(SharpDX.Toolkit.Graphics.ImageDescription,System.IntPtr)">
            <summary>
            Creates a new instance of <see cref="T:SharpDX.Toolkit.Graphics.Image"/> from an image description.
            </summary>
            <param name="description">The image description.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New1D(System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.Int32,System.IntPtr)">
            <summary>
            Creates a new instance of a 1D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New2D(System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.Int32,System.IntPtr)">
            <summary>
            Creates a new instance of a 2D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.NewCube(System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.IntPtr)">
            <summary>
            Creates a new instance of a Cube <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.New3D(System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,System.IntPtr)">
            <summary>
            Creates a new instance of a 3D <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(SharpDX.DataPointer,System.Boolean)">
            <summary>
            Loads an image from an unmanaged memory pointer.
            </summary>
            <param name="dataBuffer">Pointer to an unmanaged memory. If <paramref name="makeACopy"/> is false, this buffer must be allocated with <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/>.</param>
            <param name="makeACopy">True to copy the content of the buffer to a new allocated buffer, false otherwhise.</param>
            <returns>An new image.</returns>
            <remarks>If <paramref name="makeACopy"/> is set to false, the returned image is now the holder of the unmanaged pointer and will release it on Dispose. </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Loads an image from an unmanaged memory pointer.
            </summary>
            <param name="dataPointer">Pointer to an unmanaged memory. If <paramref name="makeACopy"/> is false, this buffer must be allocated with <see cref="M:SharpDX.Utilities.AllocateMemory(System.Int32,System.Int32)"/>.</param>
            <param name="dataSize">Size of the unmanaged buffer.</param>
            <param name="makeACopy">True to copy the content of the buffer to a new allocated buffer, false otherwise.</param>
            <returns>An new image.</returns>
            <remarks>If <paramref name="makeACopy"/> is set to false, the returned image is now the holder of the unmanaged pointer and will release it on Dispose. </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(System.Byte[])">
            <summary>
            Loads an image from a managed buffer.
            </summary>
            <param name="buffer">Reference to a managed buffer.</param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(System.IO.Stream)">
            <summary>
            Loads the specified image from a stream.
            </summary>
            <param name="imageStream">The image stream.</param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(System.String)">
            <summary>
            Loads the specified image from a file.
            </summary>
            <param name="fileName">The filename.</param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Load(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Loads an image from the specified pointer.
            </summary>
            <param name="dataPointer">The data pointer.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="makeACopy">if set to <c>true</c> [make A copy].</param>
            <param name="handle">The handle.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.CalculateImageArray(SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.Image.PitchFlags,System.Int32@,System.Int32@)">
            <summary>
            Determines number of image array entries and pixel size.
            </summary>
            <param name="imageDesc">Description of the image to create.</param>
            <param name="pitchFlags">Pitch flags.</param>
            <param name="bufferCount">Output number of mipmap.</param>
            <param name="pixelSizeInBytes">Output total size to allocate pixel buffers for all images.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.SetupImageArray(System.IntPtr,System.Int32,SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.Image.PitchFlags,SharpDX.Toolkit.Graphics.PixelBuffer[])">
            <summary>
            Allocates PixelBuffers 
            </summary>
            <param name="buffer"></param>
            <param name="pixelSize"></param>
            <param name="imageDesc"></param>
            <param name="pitchFlags"></param>
            <param name="output"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Save(System.String)">
            <summary>
            Saves this instance to a file.
            </summary>
            <param name="fileName">The destination file. Filename must end with a known extension (dds, bmp, jpg, png, gif, tiff, wmp, tga)</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Save(System.String,SharpDX.Toolkit.Graphics.ImageFileType)">
            <summary>
            Saves this instance to a file.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Save(System.IO.Stream,SharpDX.Toolkit.Graphics.ImageFileType)">
            <summary>
            Saves this instance to a stream.
            </summary>
            <param name="imageStream">The destination stream.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Image.Save(SharpDX.Toolkit.Graphics.PixelBuffer[],System.Int32,SharpDX.Toolkit.Graphics.ImageDescription,System.IO.Stream,SharpDX.Toolkit.Graphics.ImageFileType)">
            <summary>
            Saves this instance to a stream.
            </summary>
            <param name="pixelBuffers">The buffers to save.</param>
            <param name="count">The number of buffers to save.</param>
            <param name="description">Global description of the buffer.</param>
            <param name="imageStream">The destination stream.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.ImageDescription">
            <summary>
            A description for <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.Dimension">
            <summary>
            The dimension of a texture.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is valid for all textures: <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.Height">
            <summary>	
            <dd> <p>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Height</unmanaged>	
            <unmanaged-short>unsigned int Height</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.Depth">
            <summary>	
            <dd> <p>Texture depth (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/>.
            </remarks>
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Depth</unmanaged>	
            <unmanaged-short>unsigned int Depth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>
            </remarks>
            <remarks>
            This field is only valid for textures: <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels in the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.Equals(SharpDX.Toolkit.Graphics.ImageDescription)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.op_Equality(SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.ImageDescription)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.op_Inequality(SharpDX.Toolkit.Graphics.ImageDescription,SharpDX.Toolkit.Graphics.ImageDescription)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.ImageDescription.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.ImageFileType">
            <summary>
            Image file format
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Dds">
            <summary>
            A DDS file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Png">
            <summary>
            A PNG file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Gif">
            <summary>
            A GIF file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Jpg">
            <summary>
            A JPG file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Bmp">
            <summary>
            A BMP file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Tiff">
            <summary>
            A TIFF file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Wmp">
            <summary>
            A WMP file.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Tga">
            <summary>
            A TGA File.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ImageFileType.Tktx">
            <summary>
            A TKTX File.
            </summary>
            <remarks>
            This is a format available with this toolkit, similar to DDS, but It doesn't require any conversion and is a straight dump of the memory pixel buffers.
            </remarks>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.MipMapCount">
            <summary>
            A simple wrapper to specify number of mipmaps.
             Set to true to specify all mipmaps or sets an integer value >= 1
            to specify the exact number of mipmaps.
            </summary>
            <remarks>
            This structure use implicit conversion:
            <ul>
            <li>Set to <c>true</c> to specify all mipmaps.</li>
            <li>Set to <c>false</c> to specify a single mipmap.</li>
            <li>Set to an integer value >=1 to specify an exact count of mipmaps.</li>
            </ul>
            </remarks>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapCount.Auto">
            <summary>
            Automatic mipmap level based on texture size.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount" /> struct.
            </summary>
            <param name="allMipMaps">if set to <c>true</c> generates all mip maps.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount" /> struct.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapCount.Count">
            <summary>
            Number of mipmaps.
            </summary>
            <remarks>
            Zero(0) means generate all mipmaps. One(1) generates a single mipmap... etc.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.Equals(SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Equality(SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Inequality(SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Implicit(SharpDX.Toolkit.Graphics.MipMapCount)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="mipMap">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Implicit(System.Boolean)~SharpDX.Toolkit.Graphics.MipMapCount">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/>.
            </summary>
            <param name="mipMapAll">True to generate all mipmaps, false to use a single mipmap.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Implicit(SharpDX.Toolkit.Graphics.MipMapCount)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="mipMap">The value.</param>
            <returns>The count of mipmap (0 means all mipmaps).</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapCount.op_Implicit(System.Int32)~SharpDX.Toolkit.Graphics.MipMapCount">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Int32"/> to <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/>.
            </summary>
            <param name="mipMapCount">True to generate all mipmaps, false to use a single mipmap.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.MipMapDescription">
            <summary>
            Describes a mipmap.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.MipMapDescription" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="rowStride">The row stride.</param>
            <param name="depthStride">The depth stride.</param>
            <param name="widthPacked">The packed width.</param>
            <param name="heightPacked">The packed height.</param>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.Width">
            <summary>
            Width of this mipmap.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.Height">
            <summary>
            Height of this mipmap.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.WidthPacked">
            <summary>
            Width of this mipmap.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.HeightPacked">
            <summary>
            Height of this mipmap.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.Depth">
            <summary>
            Depth of this mipmap.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.RowStride">
            <summary>
            RowStride of this mipmap (number of bytes per row).
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.DepthStride">
            <summary>
            DepthStride of this mipmap (number of bytes per depth slice).
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.MipMapDescription.MipmapSize">
            <summary>
            Size in bytes of this whole mipmap.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.Equals(SharpDX.Toolkit.Graphics.MipMapDescription)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.op_Equality(SharpDX.Toolkit.Graphics.MipMapDescription,SharpDX.Toolkit.Graphics.MipMapDescription)">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.MipMapDescription.op_Inequality(SharpDX.Toolkit.Graphics.MipMapDescription,SharpDX.Toolkit.Graphics.MipMapDescription)">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelBuffer">
            <summary>
            An unmanaged buffer of pixels.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelBuffer.isStrictRowStride">
            <summary>
            True when RowStride == sizeof(pixelformat) * width
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.#ctor(System.Int32,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.PixelBuffer" /> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="rowStride">The row pitch.</param>
            <param name="bufferStride">The slice pitch.</param>
            <param name="dataPointer">The pixels.</param>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.Format">
            <summary>
            Gets the format (this value can be changed)
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.PixelSize">
            <summary>
            Gets the pixel size in bytes.
            </summary>
            <value>The pixel size in bytes.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.RowStride">
            <summary>
            Gets the row stride in number of bytes.
            </summary>
            <value>The row stride in number of bytes.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.BufferStride">
            <summary>
            Gets the total size in bytes of this pixel buffer.
            </summary>
            <value>The size in bytes of the pixel buffer.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBuffer.DataPointer">
            <summary>
            Gets the pointer to the pixel buffer.
            </summary>
            <value>The pointer to the pixel buffer.</value>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.CopyTo(SharpDX.Toolkit.Graphics.PixelBuffer)">
            <summary>
            Copies this pixel buffer to a destination pixel buffer.
            </summary>
            <param name="pixelBuffer">The destination pixel buffer.</param>
            <remarks>
            The destination pixel buffer must have exactly the same dimensions (width, height) and format than this instance.
            Destination buffer can have different row stride.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.GetPixel``1(System.Int32,System.Int32)">
            <summary>
            Gets the pixel value at a specified position.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <returns>The pixel value.</returns>
            <remarks>
            Caution, this method doesn't check bounding.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.SetPixel``1(System.Int32,System.Int32,``0)">
            <summary>
            Gets the pixel value at a specified position.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="value">The pixel value.</param>
            <remarks>
            Caution, this method doesn't check bounding.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.GetPixels``1(System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="yOffset">The y line offset.</param>
            <returns>Scanline pixels from the buffer</returns>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.GetPixels``1(``0[],System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="pixels">An allocated scanline pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <returns>Scanline pixels from the buffer</returns>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.GetPixels``1(``0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="pixels">An allocated scanline pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <param name="pixelIndex">Offset into the destination <paramref name="pixels"/> buffer.</param>
            <param name="pixelCount">Number of pixels to write into the destination <paramref name="pixels"/> buffer.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.SetPixels``1(``0[],System.Int32)">
            <summary>
            Sets scanline pixels to the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="sourcePixels">Source pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelBuffer.SetPixels``1(``0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets scanline pixels to the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="sourcePixels">Source pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <param name="pixelIndex">Offset into the source <paramref name="sourcePixels"/> buffer.</param>
            <param name="pixelCount">Number of pixels to write into the source <paramref name="sourcePixels"/> buffer.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelBufferArray">
            <summary>
            Used by <see cref="T:SharpDX.Toolkit.Graphics.Image"/> to provide a selector to a <see cref="T:SharpDX.Toolkit.Graphics.PixelBuffer"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBufferArray.Item(System.Int32)">
            <summary>
            Gets the pixel buffer.
            </summary>
            <returns>A <see cref="T:SharpDX.Toolkit.Graphics.PixelBuffer"/>.</returns>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBufferArray.Count">
            <summary>
            Gets the total number of pixel buffers.
            </summary>
            <returns>The total number of pixel buffers.</returns>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBufferArray.Item(System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayOrDepthSlice">For 3D image, the parameter is the Z slice, otherwise it is an index into the texture array.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>A <see cref="T:SharpDX.Toolkit.Graphics.PixelBuffer"/>.</returns>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelBufferArray.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayIndex">Index into the texture array. Must be set to 0 for 3D images.</param>
            <param name="zIndex">Z index for 3D image. Must be set to 0 for all 1D/2D images.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>A <see cref="T:SharpDX.Toolkit.Graphics.PixelBuffer"/>.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat">
            <summary>
            PixelFormat is equivalent to <see cref="T:SharpDX.DXGI.Format"/>.
            </summary>
            <remarks>
            This structure is implicitly castable to and from <see cref="T:SharpDX.DXGI.Format"/>, you can use it inplace where <see cref="T:SharpDX.DXGI.Format"/> is required
            and vice-versa.
            Usage is slightly different from <see cref="T:SharpDX.DXGI.Format"/>, as you have to select the type of the pixel format first
            and then access the available pixel formats for this type. Example: PixelFormat.UNorm.R8.
            </remarks>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT</unmanaged>	
            <unmanaged-short>DXGI_FORMAT</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.Value">
            <summary>
            Gets the value as a <see cref="T:SharpDX.DXGI.Format"/> enum.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.#ctor(SharpDX.DXGI.Format)">
            <summary>
            Internal constructor.
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.PixelFormat.SizeInBytes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.A8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.A8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.B5G5R5A1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B5G5R5A1.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.B5G6R5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B5G6R5.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8A8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8A8.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8A8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8A8.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8X8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8X8.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8X8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.B8G8R8X8.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC1.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC1.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC1.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC2.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC2.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC2.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC3.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC3.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC3.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC4">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC4.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC4.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC4.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC5.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC5.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC5.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC6H">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC6H.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.BC7">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC7.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC7.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.BC7.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R10G10B10A2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R10G10B10A2.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R10G10B10A2.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R10G10B10A2.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R11G11B10">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R11G11B10.Float">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R16G16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R16G16B16A16.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R32G32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32A32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32A32.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32A32.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32A32.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R32G32B32A32.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R8G8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.SInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.SNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.Typeless">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.UNorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.PixelFormat.R8G8B8A8.UNormSRgb">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.op_Implicit(SharpDX.Toolkit.Graphics.PixelFormat)~SharpDX.DXGI.Format">
            <summary>
            
            </summary>
            <param name="from"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.op_Implicit(SharpDX.DXGI.Format)~SharpDX.Toolkit.Graphics.PixelFormat">
            <summary>
            
            </summary>
            <param name="from"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.Equals(SharpDX.Toolkit.Graphics.PixelFormat)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.op_Equality(SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.PixelFormat)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.op_Inequality(SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.PixelFormat)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.PixelFormat.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.RenderTarget1D">
            <summary>
            A RenderTarget1D front end to <see cref="T:SharpDX.Direct3D11.Texture1D"/>.
            </summary>
            <remarks>
            This class instantiates a <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> with the binding flags <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/>.
            This class is also castable to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.op_Implicit(SharpDX.Toolkit.Graphics.RenderTarget1D)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            RenderTargetView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D"/> from a <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1D)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D"/> from a <see cref="T:SharpDX.Direct3D11.Texture1D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture1D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D" /> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 1D array, default to 1.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D" /> class.</returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D" />.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 1D array, default to 1.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget1D" /> class.</returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget1D.NewRenderTargetDescription(System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="format"></param>
            <param name="textureFlags"></param>
            <param name="mipCount"></param>
            <param name="arraySize"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.RenderTarget2D">
            <summary>
            A RenderTarget2D front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <remarks>
            This class instantiates a <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> with the binding flags <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/>.
            This class is also castable to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget2D.op_Implicit(SharpDX.Toolkit.Graphics.RenderTarget2D)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            RenderTargetView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget2D.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget2D.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget2D.op_Implicit(SharpDX.Toolkit.Graphics.RenderTarget2D)~SharpDX.Direct3D11.Texture2D">
            <summary>
            <see cref="T:SharpDX.Direct3D11.Texture2D"/> casting operator.
            </summary>
            <param name="from">From the Texture1D.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget2D.op_Implicit(SharpDX.Toolkit.Graphics.RenderTarget2D)~SharpDX.Direct3D11.Resource">
            <summary>
            Implicit casting operator to <see cref="T:SharpDX.Direct3D11.Resource"/>
            </summary>
            <param name="from">The GraphicsResource to convert from.</param>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.RenderTarget3D">
            <summary>
            A RenderTarget3D front end to <see cref="T:SharpDX.Direct3D11.Texture3D"/>.
            </summary>
            <remarks>
            This class instantiates a <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> with the binding flags <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/>.
            This class is also castable to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.op_Implicit(SharpDX.Toolkit.Graphics.RenderTarget3D)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            RenderTargetView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D"/> from a <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3D)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D"/> from a <see cref="T:SharpDX.Direct3D11.Texture3D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture3D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D" /> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 3D array, default to 1.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D" />.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 3D array, default to 1.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget3D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTarget3D.NewRenderTargetDescription(System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
            <param name="format"></param>
            <param name="textureFlags"></param>
            <param name="mipCount"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.RenderTargetCube">
            <summary>
            A RenderTargetCube front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <remarks>
            This class instantiates a <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> with the binding flags <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/>.
            This class is also castable to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.op_Implicit(SharpDX.Toolkit.Graphics.RenderTargetCube)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            RenderTargetView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube"/> from a <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube"/> from a <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture2D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube" /> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube" />.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.RenderTargetCube" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.RenderTargetCube.NewRenderTargetDescription(System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="format"></param>
            <param name="flags"></param>
            <param name="mipCount"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.RenderTargetViewSelector">
            <summary>
            Used by <see cref="T:SharpDX.Toolkit.Graphics.RenderTarget2D"/> to provide a selector to a <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.RenderTargetViewSelector.Item(SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="T:SharpDX.Direct3D11.RenderTargetView" /> from this texture.
            </summary>
            <param name="viewType">Type of the view slice.</param>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>An <see cref="T:SharpDX.Direct3D11.RenderTargetView" /></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.ShaderResourceViewSelector">
            <summary>
            Used by <see cref="T:SharpDX.Toolkit.Graphics.Texture"/> to provide a selector to a <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.ShaderResourceViewSelector.Item(SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="T:SharpDX.Direct3D11.ShaderResourceView" /> from this texture.
            </summary>
            <param name="viewType">Type of the view.</param>
            <param name="arrayOrDepthSlice">The array or depth slice.</param>
            <param name="mipIndex">Index of the mip.</param>
            <returns>An <see cref="T:SharpDX.Direct3D11.ShaderResourceView" /></returns>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.ShaderResourceViewSelector.Item(SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="T:SharpDX.Direct3D11.ShaderResourceView" /> from this texture.
            </summary>
            <param name="viewFormat">The view format.</param>
            <param name="viewType">Type of the view.</param>
            <param name="arrayOrDepthSlice">The array or depth slice.</param>
            <param name="mipIndex">Index of the mip.</param>
            <returns>An <see cref="T:SharpDX.Direct3D11.ShaderResourceView" /></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture">
            <summary>
            Base class for texture resources.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.Description">
            <summary>
            Common description for this texture.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.ShaderResourceView">
            <summary>
            Gets the selector for a <see cref="F:SharpDX.Toolkit.Graphics.Texture.ShaderResourceView"/>
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.RenderTargetView">
            <summary>
            Gets the selector for a <see cref="F:SharpDX.Toolkit.Graphics.Texture.RenderTargetView"/>
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.UnorderedAccessView">
            <summary>
            Gets the selector for a <see cref="F:SharpDX.Toolkit.Graphics.Texture.UnorderedAccessView"/>
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.IsBlockCompressed">
            <summary>
            Gets a boolean indicating whether this <see cref="T:SharpDX.Toolkit.Graphics.Texture"/> is a using a block compress format (BC1, BC2, BC3, BC4, BC5, BC6H, BC7).
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.RowStride">
            <summary>
            The width stride in bytes (number of bytes per row).
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture.DepthStride">
            <summary>
            The depth stride in bytes (number of bytes per depth slice).
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.#ctor(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.TextureDescription)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="description"></param>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Texture.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is valid for all textures: <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Texture.Height">
            <summary>	
            <dd> <p>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Texture.Depth">
            <summary>	
            <dd> <p>Texture depth (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/>.
            </remarks>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.Texture.Format">
            <summary>
            Gets the texture format.
            </summary>
            <value>The texture format.</value>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.Initialize(SharpDX.Direct3D11.DeviceChild)">
            <summary>
            
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.InitializeViews">
            <summary>
            Initializes the views provided by this texture.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetMipMapDescription(System.Int32)">
            <summary>
            Gets the mipmap description of this instance for the specified mipmap level.
            </summary>
            <param name="mipmap">The mipmap.</param>
            <returns>A description of a particular mipmap for this texture.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateMipLevels(System.Int32,SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            Calculates the number of miplevels for a Texture 1D.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="mipLevels">A <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/>, set to true to calculates all mipmaps, to false to calculate only 1 miplevel, or > 1 to calculate a specific amount of levels.</param>
            <returns>The number of miplevels.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateMipLevels(System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            Calculates the number of miplevels for a Texture 2D.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="mipLevels">A <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/>, set to true to calculates all mipmaps, to false to calculate only 1 miplevel, or > 1 to calculate a specific amount of levels.</param>
            <returns>The number of miplevels.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateMipLevels(System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount)">
            <summary>
            Calculates the number of miplevels for a Texture 2D.
            </summary>
            <param name="width">The width of the texture.</param>
            <param name="height">The height of the texture.</param>
            <param name="depth">The depth of the texture.</param>
            <param name="mipLevels">A <see cref="T:SharpDX.Toolkit.Graphics.MipMapCount"/>, set to true to calculates all mipmaps, to false to calculate only 1 miplevel, or > 1 to calculate a specific amount of levels.</param>
            <returns>The number of miplevels.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateMipSize(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="mipLevel"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetSubResourceIndex(System.Int32,System.Int32)">
            <summary>
            Gets the absolute sub-resource index from the array and mip slice.
            </summary>
            <param name="arraySlice">The array slice index.</param>
            <param name="mipSlice">The mip slice index.</param>
            <returns>A value equals to arraySlice * Description.MipLevels + mipSlice.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateWidth``1(System.Int32)">
            <summary>
            Calculates the expected width of a texture using a specified type.
            </summary>
            <typeparam name="TData">The type of the T pixel data.</typeparam>
            <returns>The expected width</returns>
            <exception cref="T:System.ArgumentException">If the size is invalid</exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculatePixelDataCount``1(System.Int32)">
            <summary>
            Calculates the number of pixel data this texture is requiring for a particular mip level.
            </summary>
            <typeparam name="TData">The type of the T pixel data.</typeparam>
            <param name="mipLevel">The mip level.</param>
            <returns>The number of pixel data.</returns>
            <remarks>This method is used to allocated a texture data buffer to hold pixel data: var textureData = new T[ texture.CalculatePixelCount&lt;T&gt;() ] ;.</remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.Clone">
            <summary>
            Makes a copy of this texture.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.Clone``1">
            <summary>
            Makes a copy of this texture with type casting.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.New(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.TextureDescription)">
            <summary>
            Creates a new texture with the specified generic texture description.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="description">The description.</param>
            <returns>A Texture instance, either a RenderTarget or DepthStencilBuffer or Texture, depending on Binding flags.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.ToStaging">
            <summary>
            Return an equivalent staging texture CPU read-writable from this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetShaderResourceView(SharpDX.DXGI.Format,SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="F:SharpDX.Toolkit.Graphics.Texture.ShaderResourceView" /> from this texture.
            </summary>
            <param name="viewFormat"></param>
            <param name="viewType">Type of the view slice.</param>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>An <see cref="F:SharpDX.Toolkit.Graphics.Texture.ShaderResourceView" /></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetRenderTargetView(SharpDX.Toolkit.Graphics.ViewType,System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="F:SharpDX.Toolkit.Graphics.Texture.RenderTargetView" /> from this texture.
            </summary>
            <param name="viewType">Type of the view slice.</param>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipMapSlice">The mip map slice index.</param>
            <returns>An <see cref="F:SharpDX.Toolkit.Graphics.Texture.RenderTargetView" /></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetUnorderedAccessView(System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="F:SharpDX.Toolkit.Graphics.Texture.UnorderedAccessView"/> from this texture.
            </summary>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipMapSlice">The mip map slice index.</param>
            <returns>An <see cref="F:SharpDX.Toolkit.Graphics.Texture.UnorderedAccessView"/></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.op_Implicit(SharpDX.Toolkit.Graphics.Texture)~SharpDX.Direct3D11.ShaderResourceView">
            <summary>
            ShaderResourceView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.op_Implicit(SharpDX.Toolkit.Graphics.Texture)~SharpDX.Direct3D11.UnorderedAccessView">
            <summary>
            UnorderedAccessView casting operator.
            </summary>
            <param name="from">Source for the.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.Load(SharpDX.Direct3D11.Device,System.IO.Stream,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="stream">The stream to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.Load(SharpDX.Direct3D11.Device,System.String,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a texture from a file.
            </summary>
            <param name="device">Specify the device used to load and create a texture from a file.</param>
            <param name="filePath">The file to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CalculateMipMapCount(SharpDX.Toolkit.Graphics.MipMapCount,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the mip map count from a requested level.
            </summary>
            <param name="requestedLevel">The requested level.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <returns>The resulting mipmap count (clamp to [1, maxMipMapCount] for this texture)</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.GetDataBox``1(SharpDX.DXGI.Format,System.Int32,System.Int32,System.Int32,``0[],System.IntPtr)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="format"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
            <param name="textureData"></param>
            <param name="fixedPointer"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.OnPropertyChanged(System.String)">
            <summary>
            Called when name changed for this component.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture.CompareTo(SharpDX.Toolkit.Graphics.Texture)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture1D">
            <summary>
            A Texture 1D front end to <see cref="T:SharpDX.Direct3D11.Texture1D"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.Clone">
            <summary>
            Makes a copy of this texture.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>		
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1D)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture1D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture1D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 2D array, default to 1.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 2D array, default to 1.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/> class.
            </returns>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New``1(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,``0[],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture1D" /> with a single level of mipmap.
            </summary>
            <typeparam name="T">Type of the initial data to upload to the texture</typeparam>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="textureData">Texture data. Size of must be equal to sizeof(Format) * width </param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_Texture1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>
            <remarks>
            The first dimension of mipMapTextures describes the number of array (Texture1D Array), second dimension is the mipmap, the third is the texture data for a particular mipmap.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.New(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.Image,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture1D" /> directly from an <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="image">An image in CPU memory.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture1D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.Load(SharpDX.Direct3D11.Device,System.IO.Stream,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 1D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="stream">The stream to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 1D</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1D.Load(SharpDX.Direct3D11.Device,System.String,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 1D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="filePath">The file to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 1D</exception>
            <returns>A texture</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture1DBase">
            <summary>
            Abstract class front end to <see cref="T:SharpDX.Direct3D11.Texture1D"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture1DBase.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture1DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description1D">The description.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription,SharpDX.DataBox[])">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture1DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description1D">The description.</param>
            <param name="dataBox">A variable-length parameters list containing data rectangles.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1D)">
            <summary>
            Specialised constructor for use only by derived classes.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The texture.</param>
            <msdn-id>ff476520</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture1D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.ToStaging">
            <summary>
            Return an equivalent staging texture CPU read-writable from this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.op_Implicit(SharpDX.Toolkit.Graphics.Texture1DBase)~SharpDX.DXGI.Surface">
            <summary>
            <see cref="T:SharpDX.DXGI.Surface"/> casting operator.
            </summary>
            <param name="from">From the Texture1D.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture1DBase.NewDescription(System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="format"></param>
            <param name="textureFlags"></param>
            <param name="mipCount"></param>
            <param name="arraySize"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture2D">
            <summary>
            A Texture 2D front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.Clone">
            <summary>
            Makes a copy of this texture.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture2D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">Describes the format to use.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 2D array, default to 1.</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" />.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">Describes the format to use.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 2D array, default to 1.</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New``1(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,``0[],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> with a single level of mipmap.
            </summary>
            <typeparam name="T">Type of the pixel data to upload to the texture.</typeparam>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="textureData">The texture data for a single mipmap and a single array slice. See remarks</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
            <remarks>
            Each value in textureData is a pixel in the destination texture.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.DataBox[],SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" />.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">Describes the format to use.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="textureData">Texture data through an array of <see cref="T:SharpDX.DataBox"/> </param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="arraySize">Size of the texture 2D array, default to 1.</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.New(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.Image,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> directly from an <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="image">An image in CPU memory.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.Load(SharpDX.Direct3D11.Device,System.IO.Stream,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 2D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="stream">The stream to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 2D</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.Load(SharpDX.Direct3D11.Device,System.String,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 2D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="filePath">The file to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 2D</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2D.op_Implicit(SharpDX.Toolkit.Graphics.Texture2D)~SharpDX.Direct3D11.Resource">
            <summary>
            Implicit casting operator to <see cref="T:SharpDX.Direct3D11.Resource"/>
            </summary>
            <param name="from">The GraphicsResource to convert from.</param>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture2DBase">
            <summary>
            Abstract class front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture2DBase.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture2DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description2D">The description.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription,SharpDX.DataBox[])">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture2DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description2D">The description.</param>
            <param name="dataBoxes">A variable-length parameters list containing data rectangles.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Specialised constructor for use only by derived classes.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The texture.</param>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.ToStaging">
            <summary>
            Return an equivalent staging texture CPU read-writable from this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.GetDefaultViewFormat">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.op_Implicit(SharpDX.Toolkit.Graphics.Texture2DBase)~SharpDX.DXGI.Surface">
            <summary>
            <see cref="T:SharpDX.DXGI.Surface"/> casting operator.
            </summary>
            <param name="from">From the Texture1D.</param>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture2DBase.NewDescription(System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
            <param name="textureFlags"></param>
            <param name="mipCount"></param>
            <param name="arraySize"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture3D">
            <summary>
            A Texture 3D front end to <see cref="T:SharpDX.Direct3D11.Texture3D"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.Clone">
            <summary>
            Makes a copy of this texture.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> class.
            </returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3D)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture3D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture3D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> class.
            </returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> with a single mipmap.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> class.
            </returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> class.
            </returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New``1(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,``0[],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture3D" /> with texture data for the firs map.
            </summary>
            <typeparam name="T">Type of the data to upload to the texture</typeparam>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="textureData">The texture data, width * height * depth data </param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D" /> class.</returns>
            <remarks>
            The first dimension of mipMapTextures describes the number of is an array ot Texture3D Array
            </remarks>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.DataBox[],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="textureData">DataBox used to fill texture data.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> class.
            </returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.New(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.Image,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.Texture3D" /> directly from an <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="image">An image in CPU memory.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture3D" /> class.</returns>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.Load(SharpDX.Direct3D11.Device,System.IO.Stream,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 3D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="stream">The stream to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 3D</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3D.Load(SharpDX.Direct3D11.Device,System.String,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a 3D texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="filePath">The file to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type 3D</exception>
            <returns>A texture</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.Texture3DBase">
            <summary>
            Abstract class front end to <see cref="T:SharpDX.Direct3D11.Texture3D"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.Texture3DBase.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture3DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description3D">The description.</param>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription,SharpDX.DataBox[])">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Toolkit.Graphics.Texture3DBase" /> class.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description3D">The description.</param>
            <param name="dataRectangles">A variable-length parameters list containing data rectangles.</param>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3D)">
            <summary>
            Specialised constructor for use only by derived classes.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The texture.</param>
            <msdn-id>ff476522</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture3D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.ToStaging">
            <summary>
            Return an equivalent staging texture CPU read-writable from this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.InitializeViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.Texture3DBase.NewDescription(System.Int32,System.Int32,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
            <param name="format"></param>
            <param name="textureFlags"></param>
            <param name="mipCount"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.TextureCube">
            <summary>
            A TextureCube front end to <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.Clone">
            <summary>
            Makes a copy of this texture.
            </summary>
            <remarks>
            This method doesn't copy the content of the texture.
            </remarks>
            <returns>
            A copy of this texture.
            </returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="description">The description.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Creates a new texture from a <see cref="T:SharpDX.Direct3D11.Texture2D"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="texture">The native texture <see cref="T:SharpDX.Direct3D11.Texture2D"/>.</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.MipMapCount,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="mipCount">Number of mipmaps, set to true to have all mipmaps, set to an int >=1 for a particular mipmap count.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <returns>
            A new instance of <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> class.
            </returns>
            <msdn-id>ff476521</msdn-id>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New``1(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,``0[][],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> from a initial data..
            </summary>
            <typeparam name="T">Type of a pixel data</typeparam>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="textureData">an array of 6 textures. See remarks</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
            <remarks>
            The first dimension of mipMapTextures describes the number of array (TextureCube Array), the second is the texture data for a particular cube face.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.DataBox[],SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> from a initial data..
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="size">The size (in pixels) of the top-level faces of the cube texture.</param>
            <param name="format">Describes the format to use.</param>
            <param name="usage">The usage.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="textureData">an array of 6 textures. See remarks</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
              <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
              <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
            <remarks>
            The first dimension of mipMapTextures describes the number of array (TextureCube Array), the second is the texture data for a particular cube face.
            </remarks>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.New(SharpDX.Direct3D11.Device,SharpDX.Toolkit.Graphics.Image,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Creates a new <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> directly from an <see cref="T:SharpDX.Toolkit.Graphics.Image"/>.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="image">An image in CPU memory.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">The usage.</param>
            <returns>A new instance of <see cref="T:SharpDX.Toolkit.Graphics.TextureCube" /> class.</returns>
            <msdn-id>ff476521</msdn-id>
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>
            <unmanaged-short>ID3D11Device::CreateTexture2D</unmanaged-short>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.Load(SharpDX.Direct3D11.Device,System.IO.Stream,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a Cube texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="stream">The stream to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type Cube</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.Load(SharpDX.Direct3D11.Device,System.String,SharpDX.Toolkit.Graphics.TextureFlags,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            Loads a Cube texture from a stream.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct3D11.Device"/>.</param>
            <param name="filePath">The file to load the texture from.</param>
            <param name="flags">Sets the texture flags (for unordered access...etc.)</param>
            <param name="usage">Usage of the resource. Default is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> </param>
            <exception cref="T:System.ArgumentException">If the texture is not of type Cube</exception>
            <returns>A texture</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureCube.NewTextureCubeDescription(System.Int32,SharpDX.Toolkit.Graphics.PixelFormat,SharpDX.Toolkit.Graphics.TextureFlags,System.Int32,SharpDX.Direct3D11.ResourceUsage)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="format"></param>
            <param name="flags"></param>
            <param name="mipCount"></param>
            <param name="usage"></param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.TextureDescription">
            <summary>
            A Common description for all textures.
            </summary>
            <remarks>
            This class exposes the union of all fields exposed by fields in <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>, 
            <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.
            It provides also 2-way implicit conversions for 1D, 2D, 3D textures descriptions.
            </remarks>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Dimension">
            <summary>
            The dimension of a texture.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Width">
            <summary>	
            <dd> <p>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is valid for all textures: <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int Width</unmanaged>	
            <unmanaged-short>unsigned int Width</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Height">
            <summary>	
            <dd> <p>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Height</unmanaged>	
            <unmanaged-short>unsigned int Height</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Depth">
            <summary>	
            <dd> <p>Texture depth (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture3D"/>.
            </remarks>
            <msdn-id>ff476254</msdn-id>	
            <unmanaged>unsigned int Depth</unmanaged>	
            <unmanaged-short>unsigned int Depth</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.ArraySize">
            <summary>	
            <dd> <p>Number of textures in the array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>
            </remarks>
            <remarks>
            This field is only valid for textures: <see cref="T:SharpDX.Toolkit.Graphics.Texture1D"/>, <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/> and <see cref="T:SharpDX.Toolkit.Graphics.TextureCube"/>.
            </remarks>
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
            <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.MipLevels">
            <summary>	
            <dd> <p>The maximum number of mipmap levels in the texture. See the remarks in <strong><see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/></strong>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
            <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:SharpDX.DXGI.Format"/></strong>).</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
            <unmanaged-short>DXGI_FORMAT Format</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.SampleDescription">
            <summary>	
            <dd> <p>Structure that specifies multisampling parameters for the texture. See <strong><see cref="T:SharpDX.DXGI.SampleDescription"/></strong>.</p> </dd>	
            </summary>	
            <remarks>
            This field is only valid for <see cref="T:SharpDX.Toolkit.Graphics.Texture2D"/>.
            </remarks>
            <msdn-id>ff476253</msdn-id>	
            <unmanaged>DXGI_SAMPLE_DESC SampleDesc</unmanaged>	
            <unmanaged-short>DXGI_SAMPLE_DESC SampleDesc</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.Usage">
            <summary>	
            <dd> <p>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <strong><see cref="T:SharpDX.Direct3D11.ResourceUsage"/></strong> for all possible values.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
            <unmanaged-short>D3D11_USAGE Usage</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.BindFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.BindFlags"/></strong>) for binding to pipeline stages. The flags can be combined by a logical OR. For a 1D texture, the allowable values are: <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/>, <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> and <see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/>.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
            <unmanaged-short>D3D11_BIND_FLAG BindFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.CpuAccessFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/></strong>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
            <unmanaged-short>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged-short>	
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDescription.OptionFlags">
            <summary>	
            <dd> <p>Flags (see <strong><see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/></strong>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</p> </dd>	
            </summary>	
            <msdn-id>ff476252</msdn-id>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
            <unmanaged-short>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged-short>	
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.ToStagingDescription">
            <summary>
            Gets the staging description for this instance..
            </summary>
            <returns>A Staging description</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.Equals(SharpDX.Toolkit.Graphics.TextureDescription)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Equality(SharpDX.Toolkit.Graphics.TextureDescription,SharpDX.Toolkit.Graphics.TextureDescription)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Inequality(SharpDX.Toolkit.Graphics.TextureDescription,SharpDX.Toolkit.Graphics.TextureDescription)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Direct3D11.Texture1DDescription)~SharpDX.Toolkit.Graphics.TextureDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> to <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Toolkit.Graphics.TextureDescription)~SharpDX.Direct3D11.Texture1DDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/> to <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Direct3D11.Texture2DDescription)~SharpDX.Toolkit.Graphics.TextureDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> to <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Toolkit.Graphics.TextureDescription)~SharpDX.Direct3D11.Texture2DDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/> to <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Direct3D11.Texture3DDescription)~SharpDX.Toolkit.Graphics.TextureDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> to <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Toolkit.Graphics.TextureDescription)~SharpDX.Direct3D11.Texture3DDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/> to <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.
            </summary>
            <param name="description">The texture description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Toolkit.Graphics.ImageDescription)~SharpDX.Toolkit.Graphics.TextureDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.ImageDescription"/> to <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/>.
            </summary>
            <param name="description">The image description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureDescription.op_Implicit(SharpDX.Toolkit.Graphics.TextureDescription)~SharpDX.Toolkit.Graphics.ImageDescription">
            <summary>
            Performs an explicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.ImageDescription"/> to <see cref="T:SharpDX.Toolkit.Graphics.TextureDescription"/>.
            </summary>
            <param name="description">The image description.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.TextureDimension">
            <summary>
            Defines the dimension of a texture.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDimension.Texture1D">
            <summary>
            The texture dimension is 1D.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDimension.Texture2D">
            <summary>
            The texture dimension is 2D.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDimension.Texture3D">
            <summary>
            The texture dimension is 3D.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureDimension.TextureCube">
            <summary>
            The texture dimension is a CubeMap.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.TextureFlags">
            <summary>
            Specifies usage of a texture.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureFlags.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureFlags.ShaderResource">
            <summary>
            The texture will be used as a <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureFlags.RenderTarget">
            <summary>
            The texture will be used as a <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </summary>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureFlags.UnorderedAccess">
            <summary>
            The texture will be used as an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/>.
            </summary>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.TextureView">
            <summary>
            A texture view is a view on a specified mipmap set of a <see cref="P:SharpDX.Toolkit.Graphics.TextureView.Texture"/>, a RenderTarget or a <see cref="T:SharpDX.Toolkit.Graphics.DepthStencilBuffer"/>. 
            An instance of this class is castable to <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>, <see cref="T:SharpDX.Direct3D11.RenderTargetView"/> or <see cref="T:SharpDX.Direct3D11.DepthStencilView"/> depending on the underlying native view.
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureView.Initialize(SharpDX.Direct3D11.DeviceChild)">
            <summary>
            
            </summary>
            <param name="view"></param>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.Width">
            <summary>
            Gets the width of this view (taking account the miplevel of the view).
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.Height">
            <summary>
            Gets the height of this view (taking account the miplevel of the view).
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.Format">
            <summary>
            Gets the format of this view.
            </summary>
            <value>The format.</value>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.TextureView.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.View">
            <summary>
            Gets the view.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.IsRenderView">
            <summary>
            Gets a value indicating whether this instance is render view.
            </summary>
            <value><c>true</c> if this instance is render view; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.IsDepthStencilView">
            <summary>
            Gets a value indicating whether this instance is a depth stencil view.
            </summary>
            <value><c>true</c> if this instance is a depth stencil view; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.Texture">
            <summary>
            Gets the texture.
            </summary>
            <value>The texture.</value>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.Size">
            <summary>
            The size of the view in pixel (taking account the miplevel of the view).
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.TextureView.TexelSize">
            <summary>
            The size of a texel in the view (1 texel = (1.0f / width of the view, 1.0f / height of the view)
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureView.op_Implicit(SharpDX.Toolkit.Graphics.TextureView)~SharpDX.Direct3D11.ShaderResourceView">
            <summary>
            Performs an implicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureView"/> to <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>.
            </summary>
            <param name="view">The view.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureView.op_Implicit(SharpDX.Toolkit.Graphics.TextureView)~SharpDX.Direct3D11.RenderTargetView">
            <summary>
            Performs an implicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureView"/> to <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.
            </summary>
            <param name="view">The view.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.TextureView.op_Implicit(SharpDX.Toolkit.Graphics.TextureView)~SharpDX.Direct3D11.DepthStencilView">
            <summary>
            Performs an implicit conversion from <see cref="T:SharpDX.Toolkit.Graphics.TextureView"/> to <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>.
            </summary>
            <param name="view">The view.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.UnorderedAccessViewSelector">
            <summary>
            Used by <see cref="T:SharpDX.Toolkit.Graphics.Texture"/> to provide a selector to a <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Toolkit.Graphics.UnorderedAccessViewSelector.Item(System.Int32,System.Int32)">
            <summary>
            Gets a specific <see cref="T:SharpDX.Direct3D11.UnorderedAccessView" /> from this texture.
            </summary>
            <param name="arrayOrDepthSlice">The texture array slice index.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>An <see cref="T:SharpDX.Direct3D11.UnorderedAccessView" /></returns>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.ViewType">
            <summary>
            Defines how a view is selected from a resource.
            </summary>
            <remarks>
            This selection model is taken from Nuaj by Patapom (http://wiki.patapom.com/index.php/Nuaj)
            </remarks>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ViewType.Full">
            <summary>
            Gets a texture view for the whole texture for all mips/arrays dimensions.
            </summary>
            <example>Here is what the view covers with whatever mipLevelIndex/arrayIndex
            
                   Array0 Array1 Array2
                  ______________________
             Mip0 |   X  |   X  |   X  |
                  |------+------+------|
             Mip1 |   X  |   X  |   X  |
                  |------+------+------|
             Mip2 |   X  |   X  |   X  |
                  ----------------------
            </example>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ViewType.Single">
            <summary>
            Gets a single texture view at the specified index in the mip hierarchy and in the array of textures
            The texture view contains a single texture element at the specified mip level and array index
            </summary>
            <example>Here is what the view covers with mipLevelIndex=1 and mrrayIndex=1
            
                   Array0 Array1 Array2
                  ______________________
             Mip0 |      |      |      |
                  |------+------+------|
             Mip1 |      |  X   |      |
                  |------+------+------|
             Mip2 |      |      |      |
                  ----------------------
            </example>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ViewType.ArrayBand">
            <summary>
            Gets a band texture view at the specified index in the mip hierarchy and in the array of textures
            The texture view contains all the mip level texture elements from the specified mip level and array index
            </summary>
            <example>Here is what the view covers with mipLevelIndex=1 and mrrayIndex=1
            
                   Array0 Array1 Array2
                  ______________________
             Mip0 |      |      |      |
                  |------+------+------|
             Mip1 |      |  X   |      |
                  |------+------+------|
             Mip2 |      |  X   |      |
                  ----------------------
            </example>
        </member>
        <member name="F:SharpDX.Toolkit.Graphics.ViewType.MipBand">
            <summary>
            Gets a band texture view at the specified index in the mip hierarchy and in the array of textures
            The texture view contains all the array texture elements from the specified mip level and array index
            </summary>
            <example>Here is what the view covers with mipLevelIndex=1 and mrrayIndex=1
            
                   Array0 Array1 Array2
                  ______________________
             Mip0 |      |      |      |
                  |------+------+------|
             Mip1 |      |  X   |  X   |
                  |------+------+------|
             Mip2 |      |      |      |
                  ----------------------
            </example>
        </member>
        <member name="T:SharpDX.Toolkit.Graphics.WICHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.WICHelper.ToDXGI(System.Guid)">
            <summary>
            Converts a WIC <see cref="T:SharpDX.WIC.PixelFormat"/> to a <see cref="T:SharpDX.DXGI.Format"/>.
            </summary>
            <param name="guid">A WIC <see cref="T:SharpDX.WIC.PixelFormat"/> </param>
            <returns>A <see cref="T:SharpDX.DXGI.Format"/></returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.WICHelper.ToWIC(SharpDX.DXGI.Format,System.Guid@)">
            <summary>
            Converts a <see cref="T:SharpDX.DXGI.Format"/> to a a WIC <see cref="T:SharpDX.WIC.PixelFormat"/>.
            </summary>
            <param name="format">A <see cref="T:SharpDX.DXGI.Format"/></param>
            <param name="guid">A WIC <see cref="T:SharpDX.WIC.PixelFormat"/> Guid.</param>
            <returns>True if conversion succeed, false otherwise.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.WICHelper.GetBitsPerPixel(System.Guid)">
            <summary>
            Gets the number of bits per pixels for a WIC <see cref="T:SharpDX.WIC.PixelFormat"/> Guid.
            </summary>
            <param name="targetGuid">A WIC <see cref="T:SharpDX.WIC.PixelFormat"/> Guid.</param>
            <returns>The number of bits per pixels for a WIC. If this method is failing to calculate the number of pixels, return 0.</returns>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.WICHelper.DecodeMetadata(SharpDX.Toolkit.Graphics.WICFlags,SharpDX.WIC.BitmapDecoder,SharpDX.WIC.BitmapFrameDecode,System.Guid@)">
            <summary>
            Determines metadata for image
            </summary>
            <param name="flags">The flags.</param>
            <param name="decoder">The decoder.</param>
            <param name="frame">The frame.</param>
            <param name="pixelFormat">The pixel format.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">If pixel format is not supported.</exception>
        </member>
        <member name="M:SharpDX.Toolkit.Graphics.WICHelper.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpDX.IComponent">
            <summary>
            Base interface for a component base.
            </summary>
        </member>
        <member name="P:SharpDX.IComponent.Name">
            <summary>
            Gets the name of this component.
            </summary>
            <value>The name.</value>
        </member>
    </members>
</doc>
